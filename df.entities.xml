<data-definition>
    <struct-type type-name='entity_activity_statistics' original-name='reportst'>
        <compound name='food'> not a compound
            <int32_t name='total'/>
            <int32_t name='meat'/>
            <int32_t name='fish'/>
            <int32_t name='other'/>
            <int32_t name='seeds'/>
            <int32_t name='plant'/>
            <int32_t name='drink'/>
        </compound>
        <static-array name='unit_counts' type-name='int16_t' count='152' index-enum='profession'/>
        <int16_t name='population'/>
        <int16_t name='menial_exempt'/>
        <int16_t name='omnivores'/>
        <int16_t name='carnivores'/>
        <int16_t name='trained_animals'/>
        <int16_t name='other_animals'/>
        <int16_t name='potential_soldiers'/>
        <int32_t name='combat_aptitude'/>
        <static-array name='item_counts' type-name='int32_t' count='112' index-enum='item_type'/>
        <stl-vector name='created_weapons' type-name='int32_t' index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
        <compound name='wealth'> not a compound
            <int32_t name='total'/>
            <int32_t name='weapons'/>
            <int32_t name='armor'/>
            <int32_t name='furniture'/>
            <int32_t name='other'/>
            <int32_t name='architecture'/>
            <int32_t name='displayed'/>
            <int32_t name='road'/>
            <int32_t name='held'/>
            <int32_t name='imported'/>
            <int32_t name='offered'/>
            <int32_t name='exported'/>
        </compound>
        <static-array name='recent_jobs' count='7'> creature, all, glass, stone, metal, tree, shrub
            <static-array count='263' type-name='int32_t' index-enum='job_type'/>
        </static-array>
        <int32_t name='excavated_tiles' comment='unhidden, subterranean, and excluding map features'/>
        <static-array count='5' type-name='int32_t' name='death_history'/>
        <static-array count='5' type-name='int32_t' name='insanity_history'/>
        <static-array count='5' type-name='int32_t' name='execution_history'/>
        <static-array count='5' type-name='int32_t' name='noble_death_history'/>
        <int32_t name='total_deaths'/>
        <int32_t name='total_insanities'/>
        <int32_t name='total_executions'/>
        <int32_t name='num_artifacts'/>
        <int32_t name='invaders_repelled'/>
        <!-- <compound name='knowledge'> --> bay12: knowledgest
        <stl-vector name='discovered_creature_foods' type-name='bool' index-refers-to='(find-creature $)'/>
        <stl-vector name='discovered_creatures' type-name='bool' index-refers-to='(find-creature $)'/>
        <stl-vector name='discovered_plant_foods' type-name='bool' index-refers-to='(find-plant-raw $)'/>
        <stl-vector name='discovered_plants' type-name='bool' index-refers-to='(find-plant-raw $)' comment='allows planting of seeds'/>
        <!-- </compound> -->
        <int16_t name='discovered_water_features'/>
        <int16_t name='discovered_subterranean_features'/>
        <int16_t name='discovered_chasm_features'/>
        <int16_t name='discovered_magma_features'/>
        <int16_t name='discovered_underworld_features'/>
        <int32_t name='migrant_wave_idx' comment='age_in_years'/>
        <stl-vector name='found_minerals' type-name='int32_t' ref-target='inorganic_raw'
                    comment="Added after 'you have struck' announcement"/>
        <bitfield name='found_misc' base-type='uint32_t'> bay12: REPORT_SITE_FLAG_*
            <flag-bit name='deep_special'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='tradegoodslistst'>
        <pointer name='it' type-name='item'/>
        <int32_t name='dist'/>
        <enum base-type='int8_t' name="tag">
            <enum-item name='RemoveTrading' value='-2'/>
            <enum-item name='RemovePending'/>
            <enum-item name='None'/>
            <enum-item name='AddPending'/>
            <enum-item name='Pending'/>
            <enum-item name='Trading'/>
        </enum>
        <bool name='prohibited'/>
        <int32_t name='value'/>
        <bool name='expanded_container'/>
        <int32_t name='container_amount'/>
        <int32_t name='sort_value'/>
    </struct-type>

    <struct-type type-name='assign_trade_itemlistst'>
        <stl-vector name='tgi' pointer-type='tradegoodslistst'/>
    </struct-type>

    <struct-type type-name='abstractitemlistst'>
        <stl-vector name='type' type-name='int16_t'/>
        <stl-vector name='subtype' type-name='int16_t'/>
        <stl-vector name='subcat1' type-name='int16_t'/>
        <stl-vector name='subcat2' type-name='int16_t'/>
        <stl-vector name='amount' type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='itemlistst'>
        <stl-vector name='l_item' pointer-type='item'/>
    </struct-type>

    <struct-type type-name='caravan_state' original-name='plot_merchantst'>
        <compound name='total_capacity' type-name='massst'/>
        <enum name='trade_state' base-type='int8_t' comment='bay12: stage'>
            <enum-item name='None'/>
            <enum-item name='Approaching'/>
            <enum-item name='AtDepot'/>
            <enum-item name='Leaving'/>
            <enum-item name='Stuck'/>
        </enum>
        <int8_t name='depot_notified' comment='bay12: havecomplained; has it warned you that you need a depot'/>
        <int16_t name='time_remaining' comment='bay12: timer'/>
        <int32_t name='entity' ref-target='historical_entity'/>
        <compound name='activity_stats' type-name='entity_activity_statistics' comment='bay12: report'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: MERCHANTEVENTFLAG_*
            <flag-bit name='check_cleanup' comment='CHECKANDFINALIZE; set each time a merchant leaves the map or dies'/>
            <flag-bit name='casualty' comment='JUSTSPOILED'/>
            <flag-bit name='hardship' comment='WENTBADLY'/>
            <flag-bit name='communicate' comment='SOMEBODYLIVED; send data to mountainhomes'/>
            <flag-bit name='seized' comment='GOODSSEIZED'/>
            <flag-bit name='offended' comment='NOMORETRADE'/>
            <flag-bit comment='UNUSED_07'/>
            <flag-bit name='greatly_offended' comment='OFFENDED'/>
        </bitfield>
        <int32_t name='import_value' comment='bay12: goodsvalue_initial'/>
        <int32_t name='export_value_total' comment='bay12: goodsvalue_end'/>
        <int32_t name='export_value_personal' comment='bay12: exportvalue_end; excluding foreign-produced items'/>
        <int32_t name='offer_value' comment='bay12: offervalue_end'/>
        <stl-vector name='animals' comment='bay12: unitroster' type-name='int32_t' ref-target='unit'/>
        <pointer type-name='entity_sell_prices' name='sell_prices' comment='bay12: tradeagreement'/>
        <pointer type-name='entity_buy_prices' name='buy_prices' comment='bay12: requestagreement'/>
        <stl-vector name='goods' type-name='int32_t' ref-target='item' comment='bay12: already_appraised_item_id'/>
        <int32_t name='mood' init-value='50' comment='bay12: tolerance; reflects satisfaction with last trading session'/>
        <int32_t name='haggle_fail_count'/>
    </struct-type>

    <struct-type type-name='entity_buy_prices' original-name='civ_requestagreementst'>
        <pointer type-name='entity_buy_requests' name='items'/>
        <stl-vector type-name='int32_t' name='price'/>
    </struct-type>

    <struct-type type-name='entity_buy_requests' original-name='civgoods_requestst'>
        <stl-vector name='item_type' comment='guess'>
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name="item_subtype" comment='guess'>
            <int16_t refers-to='(item-subtype-target $$._global.item_type[$$._key] $)'/>
        </stl-vector>
        <stl-vector name='mat_types'>
            <int16_t ref-target='material' aux-value='$$._parent.mat_indices[$._key]'/>
        </stl-vector>
        <stl-vector name='mat_indices' type-name='int16_t'/>
        <stl-vector name="mat_cats" type-name='job_material_category'/>
        <stl-vector type-name='int8_t' name='priority'/>
    </struct-type>

    <enum-type type-name='entity_sell_category' base-type='int16_t'> bay12: CivRequestTabType
        <enum-item name='Leather'/>
        <enum-item name='ClothPlant'/>
        <enum-item name='ClothSilk'/>
        <enum-item name='Crafts'/>
        <enum-item name='Wood'/>
        <enum-item name='MetalBars'/>
        <enum-item name='SmallCutGems'/>
        <enum-item name='LargeCutGems'/>
        <enum-item name='StoneBlocks'/>
        <enum-item name='Seeds'/>
        <enum-item name='Anvils'/>
        <enum-item name='Weapons'/>
        <enum-item name='TrainingWeapons'/>
        <enum-item name='Ammo'/>
        <enum-item name='TrapComponents'/>
        <enum-item name='DiggingImplements'/>
        <enum-item name='Bodywear'/>
        <enum-item name='Headwear'/>
        <enum-item name='Handwear'/>
        <enum-item name='Footwear'/>
        <enum-item name='Legwear'/>
        <enum-item name='Shields'/>
        <enum-item name='Toys'/>
        <enum-item name='Instruments'/>
        <enum-item name='Pets'/>
        <enum-item name='Drinks'/>
        <enum-item name='Cheese'/>
        <enum-item name='Powders'/>
        <enum-item name='Extracts'/>
        <enum-item name='Meat'/>
        <enum-item name='Fish'/>
        <enum-item name='Plants'/>
        <enum-item name='MeatFishRecipes'/>
        <enum-item name='OtherRecipes'/>
        <enum-item name='Stone'/>
        <enum-item name='Cages'/>
        <enum-item name='BagsLeather'/>
        <enum-item name='BagsPlant'/>
        <enum-item name='BagsSilk'/>
        <enum-item name='ThreadPlant'/>
        <enum-item name='ThreadSilk'/>
        <enum-item name='RopesPlant'/>
        <enum-item name='RopesSilk'/>
        <enum-item name='Barrels'/>
        <enum-item name='FlasksWaterskins'/>
        <enum-item name='Quivers'/>
        <enum-item name='Backpacks'/>
        <enum-item name='Sand'/>
        <enum-item name='Glass'/>
        <enum-item name='Miscellaneous'/>
        <enum-item name='Buckets'/>
        <enum-item name='Splints'/>
        <enum-item name='Crutches'/>
        <enum-item name='Eggs'/>
        <enum-item name='BagsYarn'/>
        <enum-item name='RopesYarn'/>
        <enum-item name='ClothYarn'/>
        <enum-item name='ThreadYarn'/>
        <enum-item name='Tools'/>
        <enum-item name='Clay'/>
    </enum-type>

    <struct-type type-name='entity_sell_prices' original-name='civ_tradeagreementst'>
        <pointer type-name='entity_sell_requests' name='items'/>
        <static-array count='105' index-enum='entity_sell_category' name='price'>
            <stl-vector type-name='int32_t'/>
        </static-array>
    </struct-type>

    <struct-type type-name='entity_sell_requests' original-name='civgoods_demandst'>
        <static-array count='105' index-enum='entity_sell_category' name='priority'>
            <stl-vector type-name='int8_t'/>
        </static-array>
    </struct-type>

    <struct-type type-name='entity_recipe' original-name='civ_recipest'>
        <int16_t name='subtype' ref-target='itemdef_foodst'/>
        <stl-vector name='item_types'>
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name='item_subtypes'>
            <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent._parent.item_types[$$._key] $)'/>
        </stl-vector>
        <stl-vector name='mat_types'>
            <int16_t ref-target='material' aux-value='$$._parent.mat_indices[$._key]'/>
        </stl-vector>
        <stl-vector name='mat_indices' type-name='int16_t'/> yes, actually int16 even though matgloss should be int32
    </struct-type>

    <enum-type type-name='historical_entity_type' base-type='int16_t'> bay12: EntityType
        <enum-item name='Civilization'/>
        <enum-item name='SiteGovernment'/>
        <enum-item name='VesselCrew'/>
        <enum-item name='MigratingGroup'/>
        <enum-item name='NomadicGroup'/>
        <enum-item name='Religion'/>
    </enum-type>

    <struct-type type-name='entity_pop_specifierst'>
        <int32_t name='race'/>
        <int32_t name='breed_id'/>
    </struct-type>

    <struct-type type-name='world_gen_entity_populationst'>
        <int32_t name='num'/>
        <compound type-name='entity_pop_specifierst' name='pop_spec'/>
    </struct-type>

    <struct-type type-name='world_gen_wandering_groupst'>
        <stl-vector pointer-type='historical_figure' name='wanderer'/>
        <stl-vector pointer-type='world_gen_entity_populationst' name='ent_pop'/>
        <pointer type-name='historical_entity' name='ent'/>
        <pointer type-name='world_site' name='cur_location'/>
        <pointer type-name='world_region' name='cur_location_sr'/>
        <pointer type-name='world_underground_region' name='cur_location_fl'/>
        <int32_t name='relocate_delay'/>
    </struct-type>

    <struct-type type-name='historical_entity' key-field='id'
                 instance-vector='$global.world.entities.all'
                 original-name='entityst'>
        <enum name='type' base-type='int16_t' type-name='historical_entity_type'/>
        <int32_t name='id' comment='index in the array'/>

        <pointer name='entity_raw' type-name='entity_raw'/>

        <int32_t name='save_file_id' comment='changes once has 100 entries'/>
        <int16_t name='next_member_idx'/>

        <compound name='name' type-name='language_name'/>

        <code-helper name='describe'>
            $.type
            (describe-obj (find-creature $.race))
            (describe-obj $.name)
        </code-helper>

        <int16_t name='race' ref-target='creature_raw'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: ENTITYFLAG_*
            <flag-bit name='neighbor' comment="NEARBY"/>
            <flag-bit name='player_civ' comment="VISIBLE"/>
            <flag-bit name='make_nems_check_positions'/>
            <flag-bit name='discovered'/>
            <flag-bit name='dead'/>
                SiteGovernment and Outcast has this flag set when there are no site links with the residence or invasion_push_out
                flag set. Others (NomadicGroup, MilitaryUnit seen) have it set when the criteria of the first group are fullfilled
                together with occupation_failed, criminal_gang, and reclaim being absent as well, provided they have at least one
                site link (no site link = flag not set).
                Civilizations can have the flag set when having lost all sites, but usually do not, so the flag seems useless
                at that level (Some exterminated kobolds have it set, while most do not, for instance. Embark culled dwarven civs
                may or may not have it set).
            <flag-bit name='secret'/>
            <flag-bit name='possible_evaluate_position_profile'/>
            <flag-bit name='possible_succession_position_profile'/>
            <flag-bit name='possible_appointable_position_profile'/>
            <flag-bit name='possible_elected_position_profile'/>
            <flag-bit name='unspecific_race'/>
            <flag-bit name='evaluate_position_profile_activity'/>
        </bitfield>

        <stl-vector name='entity_links' pointer-type='entity_entity_link'/>
        <stl-vector name='site_links' pointer-type='entity_site_link'/>

        <stl-vector name='histfig_ids' type-name='int32_t' ref-target='historical_figure'/>

        <stl-vector name='populations' type-name='int32_t' ref-target='entity_population'
                    comment='1st entry copies to unit.population_id for Adventurer?'/>

        <stl-vector name='nemesis_ids' type-name='int32_t' ref-target='nemesis_record'/>

        <compound name='resources'> not a compound, nor are any of the compounds inside
            <stl-vector name='digger_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='weapon_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='training_weapon_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='armor_type' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='ammo_type' type-name='int16_t' ref-target='itemdef_ammost'/>
            <stl-vector name='helm_type' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='gloves_type' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='shoes_type' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='pants_type' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='shield_type' type-name='int16_t' ref-target='itemdef_shieldst'/>
            <stl-vector name='trapcomp_type' type-name='int16_t' ref-target='itemdef_trapcompst'/>
            <stl-vector name='toy_type' type-name='int16_t' ref-target='itemdef_toyst'/>
            <stl-vector name='instrument_type' type-name='int16_t' ref-target='itemdef_instrumentst'/>
            <stl-vector name='siegeammo_type' type-name='int16_t' ref-target='itemdef_siegeammost'/>
            <stl-vector name='tool_type' type-name='int16_t' ref-target='itemdef_toolst'/>

            <compound name='metal'>
                <compound name='pick' type-name='material_vec_ref'/>
                <compound name='weapon' type-name='material_vec_ref'/>
                <compound name='ranged' type-name='material_vec_ref'/>
                <compound name='ammo' type-name='material_vec_ref'/>
                <compound name='ammo_metal' type-name='material_vec_ref'/>
                <compound name='armor' type-name='material_vec_ref' comment='also instruments, toys, and tools'/>
                <compound name='anvil' type-name='material_vec_ref'/>
            </compound>

            <compound name='organic'>
                <compound name='leather' type-name='material_vec_ref'/>
                <compound name='fiber' type-name='material_vec_ref'/>
                <compound name='silk' type-name='material_vec_ref'/>
                <compound name='wool' type-name='material_vec_ref'/>
                <compound name='wood' type-name='material_vec_ref'/>
            </compound>

            <stl-vector name='metals' type-name='int32_t' ref-target='inorganic_raw' comment='bars'/>
            <stl-vector name='stones' type-name='int32_t' ref-target='inorganic_raw' comment='boulders and blocks'/>
            <stl-vector name='gems' type-name='int32_t' ref-target='inorganic_raw' comment='small and large cut'/>

            <compound name='refuse'>
                <compound name='bone' type-name='material_vec_ref'/>
                <compound name='shell' type-name='material_vec_ref'/>
                <compound name='pearl' type-name='material_vec_ref'/>
                <compound name='ivory' type-name='material_vec_ref'/>
                <compound name='horn' type-name='material_vec_ref'/>
            </compound>

            <compound name='misc_mat'>
                <compound name='others' type-name='material_vec_ref' comment='amber and coral'/>
                <compound name='glass' type-name='material_vec_ref'/>
                <compound name='sand' type-name='material_vec_ref'/>
                <compound name='clay' type-name='material_vec_ref'/>
                <compound name='crafts' type-name='material_vec_ref'/>
                <compound name='vials' type-name='material_vec_ref'/>
                <compound name='barrels' type-name='material_vec_ref' comment='also buckets, splints, and crutches'/>
                <compound name='flasks' type-name='material_vec_ref'/>
                <compound name='quivers' type-name='material_vec_ref'/>
                <compound name='backpacks' type-name='material_vec_ref'/>
                <compound name='cages' type-name='material_vec_ref'/>
                <compound name='booze' type-name='material_vec_ref'/>
                <compound name='cheese' type-name='material_vec_ref'/>
                <compound name='powders' type-name='material_vec_ref'/>
                <compound name='extracts' type-name='material_vec_ref'/>
                <compound name='meat' type-name='material_vec_ref'/>
            </compound>

            <stl-vector name='fish_races' type-name='int32_t' ref-target='creature_raw'/>
            <stl-vector name='fish_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.fish_races[$._key]'/>

            <stl-vector name='egg_races' type-name='int32_t' ref-target='creature_raw'/>
            <stl-vector name='egg_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.egg_races[$._key]'/>

            <compound name='plants' type-name='material_vec_ref'/>
            <compound name='seeds' type-name='material_vec_ref'/>

            <compound name='wood_products' comment='lye, charcoal, potash, pearlash, and coke'>
                <stl-vector name='item_type'>
                    <enum base-type='int16_t' type-name='item_type'/>
                </stl-vector>
                <stl-vector type-name='int16_t' name='item_subtype'/>
                <compound name='material' type-name='material_vec_ref'/>
            </compound>

            <compound name='animals'>
                <stl-vector name='pet_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='wagon_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='pack_animal_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='wagon_puller_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='mount_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='minion_races' type-name='int32_t' ref-target='creature_raw'/>

                <stl-vector name='pet_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.pet_races[$._key]'/>
                <stl-vector name='wagon_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.wagon_races[$._key]'/>
                <stl-vector name='pack_animal_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.pack_animal_races[$._key]'/>
                <stl-vector name='wagon_puller_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.wagon_puller_races[$._key]'/>
                <stl-vector name='mount_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.mount_races[$._key]'/>
                <stl-vector name='minion_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.minion_races[$._key]'/>
            </compound>

            <stl-vector name='meat_fish_recipes' pointer-type='entity_recipe'/>
            <stl-vector name='other_recipes' pointer-type='entity_recipe'/>

            <static-array name='soldier_mats' count='3' comment='melee, archer1, archer - unused?'>
                <int16_t name='mat_type' init-value='-1'/>
                <int32_t name='mat_index'/>
            </static-array>

            <stl-vector name='traded' pointer-type='item' comment='never used, items would be equipped by arriving King'/>

            <int16_t name='min_temperature'/>
            <int16_t name='max_temperature'/>

            <static-array name='ethic' count='22' index-enum='ethic_type'>
                <enum base-type='int16_t' type-name='ethic_response'/>
            </static-array>

            <stl-vector type-name='int16_t' name='art_image_types' comment='0 = civilization symbol, 1 = commissioned'/>
            <stl-vector type-name='int32_t' name='art_image_ids'/>
            <stl-vector type-name='int16_t' name='art_image_subids'/>
            <stl-vector name='art_image_char' type-name='uint8_t'/>
            <stl-vector name='foreground_color_curses'>
                <enum type-name='curses_color' base-type='int8_t'/>
            </stl-vector>
            <stl-vector name='background_color_curses'>
                <enum type-name='curses_color' base-type='int8_t'/>
            </stl-vector>
            <stl-vector name='foreground_color_curses_bright' type-name='bool'/>
            <stl-vector name='foreground_color' type-name='int16_t' ref-target='descriptor_color' comment="foreground color used for the entity symbol in legends mode and the historical maps."/>
            <stl-vector name='background_color' type-name='int16_t' ref-target='descriptor_color' comment="background color used for the entity symbol in legends mode and the historical maps."/>
        </compound>

        <stl-vector name='uniforms' pointer-type='entity_uniform'/>
        <int32_t name='next_uniform_id'/>

        <compound name='relations'> not a compound
            <int16_t name='unk_0' init-value='-1' comment='0 if waiting for moving_party, 1 when arrived, 2 when leaving'/>
            <int32_t name='site_id' ref-target='world_site'/>
            <int32_t name='unk_8' comment='set to 840 on party arrival'/>
            <compound name='dest_g' type-name='coord2d'/>
            <compound name='dest_r' type-name='coord2d'/>

            <df-flagarray name='flags'/>

            <stl-vector name='known_sites' type-name='int32_t' ref-target='world_site' comment="only civs and site government. Fresh player site government has empty vector"/>
            <stl-vector name='deities' type-name='int32_t' ref-target='historical_figure'/>
            <stl-vector name='worship' type-name='int32_t' comment="worship acceptability"/>
            <stl-vector name='belief_systems' type-name='int32_t' ref-target="belief_system" comment="In Religion type entities established by prophets after having developed their own belief system, the ID of this belief system is contained here."/>
            <stl-vector name='constructions' comment="only civs. Usually pairs for source/destination, with destination lacking path and construction. Construction and second entry can be lacking when destination lost(construction destroyed as well?). Also seen only source entry">
                <pointer> bay12: transport_linkst
                    <compound name='path' type-name='coord2d_path' comment="set only for the first source/destination/construction entry in pairs"/>
                    <int32_t name='source_site' ref-target='world_site'/>
                    <int32_t name='destination_site' ref-target='world_site'/>
                    <stl-vector name='construction' ref-target='construction' type-name='int32_t' comment="set only for the first (source) entry in pairs"/>
                    <int16_t name='desired_level'/>
                    <int16_t name='attained_level'/>
                </pointer>
            </stl-vector>

            bay12: diplomacy_datast
            <stl-vector name='diplomacy'> sorted by group_id
                <pointer> bay12: diplomacy_statest
                    <int32_t name='group_id' ref-target='historical_entity'/>
                    <enum name='relation' base-type='int16_t'> bay12: DiplomacyStateType
                        <enum-item name='Peace'/>
                        <enum-item name='TotalWar'/>
                        <enum-item name='NoContact'/>
                        <enum-item name='AcceptingTribute'/>
                        <enum-item name='OfferingTribute'/>
                        <enum-item name='Skirmishing'/>
                    </enum>
                    <int32_t name='war_event_collection' ref-target='history_event_collection'/>
                    <stl-vector name='historic_events' type-name='int32_t' ref-target='history_event'/>
                    <stl-vector name='historic_events_collection' type-name='int32_t' ref-target='history_event_collection' comment="seen with war_event_collection set"/>
                    <bitfield name='flags' base-type='uint32_t'> bay12: DIPLOMACY_STATE_FLAG_*
                        <flag-bit name='peace_offering_made'/>
                        <flag-bit name='peace_offering_received'/>
                        <flag-bit name='allies'/>
                    </bitfield>
                </pointer>
            </stl-vector>

            <int16_t name='search_for_site_timer' init-value='0'/>
            <stl-vector name='death_trap_x' type-name='int16_t'/>
            <stl-vector name='death_trap_y' type-name='int16_t'/>
            <stl-vector name='death_trap_timer' type-name='int32_t'/>
            <stl-vector name='succession_position' type-name='int32_t' comment="position index (not id)"/>
            <stl-vector name='succession_old_hf' type-name='int32_t' ref-target='historical_figure' comment="holder of office of corresponding position index"/>
        </compound>

        <compound name='positions'> not a compound
            <stl-vector name='own' pointer-type='entity_position'/>
            <stl-vector name='site' pointer-type='entity_position'/>
            <stl-vector name='conquered_site' pointer-type='entity_position'/>

            <int32_t name='next_position_id'/>

            <stl-vector name='assignments' pointer-type='entity_position_assignment'/>

            <int32_t name='next_assignment_id'/>
        </compound>

        <compound name='tissue_styles'> not a compound
            <stl-vector name='all' pointer-type='entity_tissue_style'/>
            <int32_t name='next_style_id'/>
        </compound>

        <stl-vector name='land_holders'>
            <pointer>
                <int32_t name='civ_id' ref-target='historical_entity'/>
                <int16_t name='land_holder_rank'/>
            </pointer>
        </stl-vector>
        <stl-vector name='squads' type-name='int32_t' ref-target='squad'/>
        <int32_t name='world_general_knowledge_year'/>
        <stl-vector name='known_heid' type-name='int32_t' ref-target='history_event'/>
        <int32_t name='production_zone_id'/>

        <stl-vector name='meeting_events' pointer-type='meeting_event'/>

        <pointer name='activity_stats' type-name='entity_activity_statistics'/>
        <int16_t name='last_report_season'/>
        <int32_t name='last_report_year'/>

        <int32_t name='imports_from'/>
        <int32_t name='offerings_from'/>
        <int32_t name='offerings_recent' comment='since the last migrant wave or diplomat visit'/>
        <static-array name='offerings_history' count='10' type-name='int32_t' comment='rotated yearly at 15th of Timber'/>
        <int32_t name='hostility_level' comment='bay12: brazenness'/>
        <int32_t name='siege_tier'/>

        <stl-vector name='unk50' type-name='pointer' comment='empty'/>

        <stl-vector name='hist_figures' pointer-type='historical_figure'/>
        <stl-vector name='nemesis' pointer-type='nemesis_record'/>

        <compound name='derived_resources'> not a compound
            <compound name='mill_cookable' type-name='material_vec_ref'/>
            <compound name='mill_dye' type-name='material_vec_ref'/>

            <stl-vector name='armor_leather' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_chain' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_plate' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_under' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_over' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_cover' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='pants_leather' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_chain' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_plate' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_under' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_over' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_cover' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='helm_leather' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_chain' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_plate' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_under' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_over' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_cover' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='shoes_leather' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_chain' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_plate' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_under' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_over' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_cover' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='gloves_leather' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_chain' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_plate' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_under' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_over' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_cover' type-name='int16_t' ref-target='itemdef_glovesst'/>
        </compound>

        <static-array name='assignments_by_type' count='25'
                      index-enum='entity_position_responsibility'>
            <stl-vector pointer-type='entity_position_assignment'/>
        </static-array>

        <compound name='claims'>
            <compound name='areas' type-name='coord2d_path'/>
            <compound name='territory' type-name='coord2d_path'/>
            <compound name='territory_frontier' type-name='coord2d_path'/>
        </compound>

        <stl-vector name='children' type-name='int32_t' ref-target='historical_entity'
                    comment='territory entities'/>

        -- bay12: army_strength_material_bonus
        <int32_t name='metal_proficiency'
            comment='best IMPACT_FRACTURE/10000 + MAX_EDGE/1000 for weapon mats plus best IMPACT_FRACTURE/10000 for armor mats'/>
        <stl-vector name='weapon_proficiencies' type-name='job_skill'/>

        <pointer name='resource_allotment' type-name='resource_allotment_data' comment="Only for SiteGovernment, but not all"/>

        -- worldgen only, unsaved
        <int16_t name='settlement_x' init-value='-1'/>
        <int16_t name='settlement_y' comment='uninitialized'/>
        <bool name='settlement_toggled' comment='0'/>
        <pointer name='landmass' type-name='world_landmass'/>                      -- Civ entities. Nil for sites.
        <pointer name='region' type-name='world_region' has-bad-pointers='true'/>  -- Civ entities. Non pointers for sites.
        <int32_t name='world_gen_army_strength' comment='uninitialized'/>
        <int16_t name='connect_two_site_throttle_time' comment='0'/>

        <stl-vector name='construct_shortest_con_throttle_stid' type-name='int32_t' comment='used during world gen'/>
        <stl-vector name='construct_shortest_con_throttle_time' type-name='int16_t' comment='used during world gen'/>

        <int16_t name='snatcher_site_toggle_count' comment='0'/>
        <int32_t name='war_fatigue' comment='0'/>
        <int32_t name='army_reeling_attack' comment='0'/>
        <int32_t name='unkarmy_reeling_defense' comment='0'/>

        <stl-vector name='attacked_site_id' type-name='int32_t' comment='used during world gen'/>
        <stl-vector name='attacked_site_timer' type-name='int32_t' comment='used during world gen'/>

        <int32_t name='total_pop'/>
        <int32_t name='eating_pop_carn'/>
        <int32_t name='eating_pop_omni'/>
        <int32_t name='working_pop'/>
        <int32_t name='working_e_pop'/>
        <int32_t name='layabout_pool'/>
        <int32_t name='peasant_pool'/>
        <int32_t name='peasant_labor_hours'/>
        <int32_t name='total_food_veg'/>
        <int32_t name='total_food_carn'/>
        <static-array name='trade_current_amount' count='37' index-enum='trade_category_type' type-name='int32_t'/>
        <static-array name='trade_needed_amount' count='37' index-enum='trade_category_type' type-name='int32_t'/>
        <static-array name='trade_wanted_amount' count='37' index-enum='trade_category_type' type-name='int32_t'/>
        <static-array name='trade_maximum_buy_price' count='37' index-enum='trade_category_type' type-name='int32_t'/>
        <static-array name='town_labor_hours' count='15' index-enum='town_labor_type' type-name='int32_t'/>
        <static-array name='town_labor_unk' count='15' index-enum='town_labor_type' type-name='int32_t'/>

        <stl-vector name='debts'>
            <pointer> bay12: world_gen_entity_debtst
                <int32_t name='enid' ref-target='historical_entity'/>
                <int32_t name='amount'/>
                <int32_t name='age_weeks'/>
            </pointer>
        </stl-vector>
    </struct-type>

    <struct-type type-name='entity_tissue_style' original-name='entity_tissue_stylest' key-field='id'>
        <code-helper name='describe'>$.name</code-helper>
        <code-helper name='find-instance'>
            (find-by-id $(find-instance $historical_entity $$).tissue_styles.all $id $)
        </code-helper>

        <stl-string name='name'/>
        <stl-vector name='preferred_shapings' type-name='tissue_style_type'/>
        <stl-vector name='shaping_chance' type-name='int32_t'/>
        <int16_t name='maintain_length_min'/>
        <int16_t name='maintain_length_max'/>
        <int32_t name='id'/>
    </struct-type>

    <enum-type type-name='entity_position_flags'> bay12: EntityPositionFlagType
        <enum-item name='IS_LAW_MAKER' comment='bay12: ATTACK_IS_TREASON'/>
        <enum-item name='ELECTED'/>
        <enum-item name='DUTY_BOUND'/>
        <enum-item name='MILITARY_SCREEN_ONLY'/>
        <enum-item name='GENDER_MALE' comment='bay12: FORCED_GENDER_MALE'/>
        <enum-item name='GENDER_FEMALE' comment='bay12: FORCED_GENDER_FEMALE'/>
        <enum-item name='SUCCESSION_BY_HEIR'/>
        <enum-item name='HAS_RESPONSIBILITIES'/>

        <enum-item name='FLASHES'/>
        <enum-item name='BRAG_ON_KILL'/>
        <enum-item name='CHAT_WORTHY'/>
        <enum-item name='DO_NOT_CULL'/>
        <enum-item name='KILL_QUEST'/>
        <enum-item name='IS_LEADER' comment='bay12: ADD_CONV_SKILLS_AT_WORLD_GEN'/>
        <enum-item name='IS_DIPLOMAT' comment='bay12: DIPLOMATIC_DRAFT_AVOIDANCE'/>
        <enum-item name='EXPORTED_IN_LEGENDS'/>

        <enum-item name='DETERMINES_COIN_DESIGN'/>
        <enum-item name='ACCOUNT_EXEMPT'/>
        <enum-item name='HAS_MET_POP_REQ'/>
        <enum-item name='HAS_BEEN_REPLACED'/>
        <enum-item name='COLOR' comment='bay12: USE_COLOR'/>
        <enum-item name='RULES_FROM_LOCATION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION_SPOUSE'/>

        <enum-item name='SLEEP_PRETENSION'/>
        <enum-item name='PUNISHMENT_EXEMPTION'/>
        <enum-item name='HAS_RECEIVED_POSITIONS'/>
        <enum-item name='ACTIVE'/>
        <enum-item name='QUEST_GIVER'/>
    </enum-type>

    <struct-type type-name='entity_position' original-name='entity_positionst' key-field='id'>
        <stl-string name='code'/>
        <int32_t name='id'/>

        <code-helper name='describe'>$.code</code-helper>

        <df-flagarray name='flags' index-enum='entity_position_flags'/>

        <stl-vector name='allowed_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='allowed_class' pointer-type='stl-string'/>

        <stl-vector name='rejected_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='rejected_class' pointer-type='stl-string'/>

        <static-array type-name='stl-string' name='name' count='2'/> bay12: string[EntityPositionStringType]
        <static-array type-name='stl-string' name='name_female' count='2'/>
        <static-array type-name='stl-string' name='name_male' count='2'/>
        <static-array type-name='stl-string' name='spouse' count='2'/>
        <static-array type-name='stl-string' name='spouse_female' count='2'/>
        <static-array type-name='stl-string' name='spouse_male' count='2'/>
        <static-array type-name='stl-string' name='squad' count='2'/>
        <stl-string name='land_name'/>

        <int16_t name='squad_size'/>

        <stl-vector name='commander_id' type-name='int32_t'/>
        <stl-vector name='commander_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='commander_types' type-name='int16_t'/>

        <int16_t name='land_holder'/>
        <int16_t name='requires_population'/>
        <int32_t name='precedence' init-value='30001'/>
        <int32_t name='replaced_by' init-value='-1'/>
        <int16_t name='number' init-value='1'/>

        <stl-vector name='appointed_by' type-name='int32_t'/>
        <stl-vector name='appointed_by_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='succession_by_position' type-name='int32_t'/>

        <static-array type-name='bool' name='responsibilities' count='25' index-enum='entity_position_responsibility'/>
        <static-array type-name='int16_t' name='color' count='3'/>

        <int32_t name='required_boxes'/>
        <int32_t name='required_cabinets'/>
        <int32_t name='required_racks'/>
        <int32_t name='required_stands'/>

        <int32_t name='required_office'/> bay12: int32_t[DemandRooms]
        <int32_t name='required_bedroom'/>
        <int32_t name='required_dining'/>
        <int32_t name='required_tomb'/>
        <int32_t name='mandate_max'/>
        <int32_t name='demand_max'/>
    </struct-type>

    <struct-type type-name='entity_position_assignment' key-field='id' original-name='entity_position_profilest'>
        <int32_t name='id' comment='bay12: global_id'/>
        <int32_t name='histfig' ref-target='historical_figure' comment='bay12: holder_hfid'/>
        <int32_t name='position_id'
                 refers-to='(find-by-id $$._global._parent._global.positions.own $id $)'
                 comment='position within relevant entity'/>
        <df-flagarray name='flags' comment='bay12: flag'/>
        <int32_t name='squad_id' ref-target='squad' comment='bay12: leads_squad_id'/>
        <int32_t name='st_id' init-value='-1'/>
        <int32_t name='ab_id' init-value='-1'/>
    </struct-type>

    <enum-type type-name='entity_material_category' base-type='int16_t'> bay12: EntityMaterialType
        <enum-item name='None' value='-1'/>
        <enum-item name='Clothing' comment='cloth or leather'/>
        <enum-item name='Leather' comment='organic.leather'/>
        <enum-item name='Cloth' comment='any cloth'/>
        <enum-item name='Wood' comment='organic.wood, used for training weapons'/>
        <enum-item name='Crafts' comment='misc_mat.crafts'/>
        <enum-item name='Stone' comment='stones'/>
        <enum-item name='Improvement' comment='misc_mat.crafts'/>
        <enum-item name='Vial' comment='misc_mat.vials'/>
        <enum-item name='Barrel' comment='misc_mat.barrels, also used for buckets'/>
        <enum-item name='Bag' comment='cloth/leather'/>
        <enum-item name='Cage' comment='misc_mat.cages'/>
        <enum-item name='WeaponMelee' comment='metal.weapon'/>
        <enum-item name='WeaponRanged' comment='metal.ranged'/>
        <enum-item name='Ammo' comment='metal.ammo'/>
        <enum-item name='AmmoMetal' comment='metal.ammo_metal'/>
        <enum-item name='Pick' comment='metal.pick'/>
        <enum-item name='Armor' comment='metal.armor, also used for shields, tools, instruments, and toys'/>
        <enum-item name='Gem' comment='gems'/>
        <enum-item name='Bone' comment='refuse.bone'/>
        <enum-item name='Shell' comment='refuse.shell'/>
        <enum-item name='Pearl' comment='refuse.pearl'/>
        <enum-item name='Ivory' comment='refuse.ivory'/>
        <enum-item name='Horn' comment='refuse.horn'/>
        <enum-item name='Other' comment='misc_mat.others'/>
        <enum-item name='Anvil' comment='metal.anvil'/>
        <enum-item name='Booze' comment='misc_mat.booze'/>
        <enum-item name='Chain' comment='metals with ITEMS_HARD, used for chains'/>
        <enum-item name='PlantFiber' comment='organic.fiber'/>
        <enum-item name='Silk' comment='organic.silk'/>
        <enum-item name='Wool' comment='organic.wool'/>
    </enum-type>

    <struct-type type-name='entity_uniform_item' original-name='item_creation_paramst'>
        <int8_t name='random_dye'/>
        <int8_t name='armorlevel'/>
        <int16_t name='item_color' ref-target='descriptor_color'/>
        <int32_t name='art_image_id'/>
        <int16_t name='art_image_subid'/>
        <int16_t name='image_thread_color' ref-target='descriptor_color'/>
        <enum name='image_material_class' type-name='entity_material_category'/>
        <int16_t name='maker_race'/>
        <bitfield name="indiv_choice" type-name='uniform_indiv_choice'/>
        <int16_t name="mattype" ref-target='material' aux-value='$$.matindex'/>
        <int32_t name="matindex"/>
        <enum name="material_class" type-name='entity_material_category'/>
    </struct-type>

    <enum-type type-name='entity_uniform_type' base-type='int16_t'> bay12: EntityUniformType
        <enum-item name='None' value='-1'/>
        <enum-item name='Guard'/>
        <enum-item name='HighPriest'/>
        <enum-item name='Priest'/>
        <enum-item name='Soldier'/>
    </enum-type>

    <struct-type type-name='entity_uniform' original-name='entity_uniformst' key-field='id'>
        <int32_t name="id"/>
        <enum name="type" type-name='entity_uniform_type'/>

        <code-helper name='describe'>
            (describe-obj $.name)
        </code-helper>

        <static-array name='uniform_item_types' count='7' index-enum='uniform_category'>
            <stl-vector>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
        </static-array>

        <static-array name='uniform_item_subtypes' count='7' index-enum='uniform_category'>
            <stl-vector>
                <int16_t refers-to='(item-subtype-target $$._parent._parent._parent.uniform_item_types[$$._parent._key][$$._key] $)'/>
            </stl-vector>
        </static-array>

        <static-array name='uniform_item_info' count='7' index-enum='uniform_category'>
            <stl-vector pointer-type='entity_uniform_item'/>
        </static-array>

        <stl-string name="name"/>

        <bitfield name='flags' type-name='uniform_flags'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
