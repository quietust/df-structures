<data-definition>
    <enum-type type-name='reaction_flags'> bay12: ReactionFlagType
        <enum-item name='FUEL'/>
        <enum-item name='AUTOMATIC'/>
        <enum-item name='ADVENTURE_MODE_ENABLED'/>
    </enum-type>

    <struct-type type-name='reaction' original-name='reactionst'
                instance-vector='$global.world.raws.reactions.all'>
        <stl-string name="code"/>
        <stl-string name="name"/>

        <code-helper name='describe'>$.code</code-helper>

        <df-flagarray name='flags' index-enum='reaction_flags'/>

        <stl-vector name="reagents" pointer-type='reaction_reagent'/>
        <stl-vector name="products" pointer-type='reaction_product'/>

        <enum name='skill' type-name='job_skill'/>

        <compound name='building'> not a compound
            <stl-vector name='token' pointer-type='stl-string'/>
            <stl-vector name='temp_job_key' type-name='interface_key'/>
            <stl-vector name='type'>
                <enum base-type='int32_t' type-name='building_type'/>
            </stl-vector>
            <stl-vector type-name='int32_t' name='subtype'/>
            <stl-vector type-name='int32_t' name='custom'/>
            <stl-vector type-name='interface_key' name='hotkey'/>
        </compound>

        <int32_t name="index"/>
    </struct-type>

    <enum-type type-name='reaction_reagent_type' base-type='int32_t'> bay12: ReactionReagentType
        <enum-item name='item'/>
    </enum-type>

    <class-type type-name='reaction_reagent' original-name='reaction_reagentst'>
        <stl-string name="code"/>

        <code-helper name='describe'>$.code</code-helper>

        <int32_t name='quantity'/>

        <bitfield name="flags" type-name='reaction_reagent_flags'/>

        <virtual-methods>
            <vmethod ret-type='reaction_reagent_type' name='getType'/>
            <vmethod ret-type='bool' name='have_enough_from_precalc_info'>
                <pointer name='bld' type-name='building'/>
                <pointer name='boulder_count'><stl-vector type-name='int32_t'/></pointer>
                <pointer name='ore_count'><stl-vector type-name='int32_t'/></pointer>
                <pointer name='reaction_class'><stl-vector pointer-type='stl-string'/></pointer>
                <pointer name='class_count'><stl-vector type-name='int32_t'/></pointer>
                <int32_t name='overall_reaction_index'/>
            </vmethod>
            <vmethod is-destructor='true'/>
            <vmethod name='resolveTokens'>
                <int32_t name='reactionID'/>
            </vmethod>
            <vmethod name='contribute_to_job_req'><pointer name='jbr' type-name='job_reqst'/><int32_t name='reagent_idx'/><int32_t name='reaction_idx'/></vmethod>

            <vmethod ret-type='bool' name='matchesRoot'>
                <pointer type-name='item'/>
                <int32_t name='index' ref-target='reaction'/>
            </vmethod>
            <vmethod ret-type='bool' name='matchesChild'>
                <pointer type-name='item'/>
                <pointer type-name='reaction'/>
                <int32_t name='index' ref-target='reaction'/>
            </vmethod>
            <vmethod name='getDescription'>
                <pointer type-name='stl-string'/>
                <int32_t name='index' ref-target='reaction'/>
            </vmethod>
            <vmethod ret-type='bool' name='isLyeBearing'/>
        </virtual-methods>
    </class-type>

    <bitfield-type type-name='reaction_reagent_flags'> bay12: REACTION_REAGENT_FLAG_*
        <flag-bit name='PRESERVE_REAGENT'/>
        <flag-bit name='IN_CONTAINER'/>
        <flag-bit name='DOES_NOT_DETERMINE_PRODUCT_AMOUNT'/>
    </bitfield-type>

    <class-type type-name='reaction_reagent_itemst' inherits-from='reaction_reagent'>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int16_t name='mat_index'/>

        <stl-string name='reaction_class'/>
        <stl-string name='has_material_reaction_product'/>

        <bitfield name='flags1' type-name='job_item_flags1'/>
        <bitfield name='flags2' type-name='job_item_flags2'/>
        <bitfield name='flags3' type-name='job_item_flags3'/>
        <uint32_t name='flags4'/>
        <uint32_t name='flags5'/>

        <int32_t name='metal_ore' ref-target='inorganic_raw'/>
        <int32_t name='min_dimension'/>

        <stl-vector type-name='int32_t' name='contains'/>

        <enum name='has_tool_use' type-name='tool_uses'/>

        <static-array type-name='stl-string' name='item_str' count='2'/>
        <static-array type-name='stl-string' name='material_str' count='3'/>
        <stl-string name='metal_ore_str'/>
        <stl-vector name='contains_str' pointer-type='stl-string'/>
    </class-type>

    <enum-type type-name='reaction_product_type' base-type='int32_t'> bay12: ReactionProductType
        <enum-item name='item'/>
        <enum-item name='improvement'/>
    </enum-type>

    <class-type type-name='reaction_product' original-name='reaction_productst'>
        <stl-string name="product_to_container"/>

        <virtual-methods>
            <vmethod ret-type='reaction_product_type' name='getType'/>
            <vmethod name='resolveTokens'>
                <int32_t name='reactionID'/>
            </vmethod>
            <vmethod name='produce'>
                <pointer name='maker' type-name='unit'/>
                <pointer name='out_items'><stl-vector pointer-type='item'/></pointer>
                <pointer name='in_reag'><stl-vector pointer-type='reaction_reagent'/></pointer>
                <pointer name='in_items'><stl-vector pointer-type='item'/></pointer>
                <int32_t name='quantity'/>
                <enum name='skill' type-name='job_skill'/>
                <pointer name='entity' type-name='historical_entity'/>
                <pointer name='site' type-name='world_site'/>
            </vmethod>
            <vmethod name='getDescription' comment='used in Adventurer mode reactions?'>
                <pointer type-name='stl-string' name='desc'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <enum-type type-name='reaction_product_item_flags'> bay12: ReactionProductItemFlagType
        <enum-item name='GET_MATERIAL_SAME'/>
        <enum-item name='GET_MATERIAL_PRODUCT'/>
        <enum-item name='FORCE_EDGE'/>
        <enum-item name='PASTE'/>
        <enum-item name='PRESSED'/>
        <enum-item name='CRAFTS'/>
    </enum-type>

    <class-type type-name='reaction_product_itemst' inherits-from='reaction_product'>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>

        <int16_t name='probability'/>
        <int16_t name='count'/>
        <int32_t name='product_dimension'/>

        <df-flagarray name='flags' index-enum='reaction_product_item_flags'/>

        <compound name='get_material'> not a compound
            <stl-string name='reagent_code'/>
            <stl-string name='product_code'/>
        </compound>

        <static-array type-name='stl-string' name='item_str' count='2'/>
        <static-array type-name='stl-string' name='material_str' count='3'/>
    </class-type>

    <enum-type type-name='reaction_product_improvement_flags'> bay12: ReactionProductItemImprovementFlagType
        <enum-item name='GET_MATERIAL_SAME'/>
        <enum-item name='GET_MATERIAL_PRODUCT'/>
        <enum-item name='GLAZED'/>
    </enum-type>

    <class-type type-name='reaction_product_item_improvementst' inherits-from='reaction_product'>
        <stl-string name="target_reagent"/>

        <enum name='improvement_type' type-name='improvement_type'/>

        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>

        <int16_t name='probability'/>

        <df-flagarray name='flags' index-enum='reaction_product_improvement_flags'/>

        <compound name='get_material'> not a compound
            <stl-string name='reagent_code'/>
            <stl-string name='product_code'/>
        </compound>

        <static-array type-name='stl-string' name='material_str' count='3'/>
    </class-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
