<data-definition>
    <struct-type type-name='file_compressorst' custom-methods='true'>
        Note: the assign operator is manually implemented

        <bool name='compressed'/>
        <stl-fstream name='f'/>

        <pointer name='in_buffer' type-name='uint8_t' is-array='true'/>
        <long name='in_buffersize'/>
        <long name='in_buffer_amount_loaded'/>
        <long name='in_buffer_position'/>

        <pointer name='out_buffer' type-name='uint8_t' is-array='true'/>
        <long name='out_buffersize'/>
        <int32_t name='out_buffer_amount_written'/>
    </struct-type>

    <enum-type type-name='interface_breakdown_types'> bay12: InterfaceBreakdownTypes, no base type
        <enum-item name='NONE'/>
        <enum-item name='QUIT'/>
        <enum-item name='STOPSCREEN'/>
        <enum-item name='TOFIRST'/>
    </enum-type>

    <enum-type type-name='interface_push_types'> bay12: InterfacePushType, no base type
        <enum-item name='AS_PARENT'/>
        <enum-item name='AS_CHILD'/>
        <enum-item name='AT_BACK'/>
        <enum-item name='AT_FRONT'/>
    </enum-type>

    <class-type type-name='viewscreen' original-name='viewscreenst' custom-methods='true'>
        <pointer name='child' type-name='viewscreen'/>
        <pointer name='parent' type-name='viewscreen'/>
        <enum base-type='int8_t' name='breakdown_level' type-name='interface_breakdown_types' init-value='NONE'/>
        <int8_t name='option_key_pressed'/>

        <virtual-methods>
            <vmethod name='feed'>
                <pointer name='events'> <stl-set type-name='interface_key'/></pointer>
            </vmethod>
            <vmethod name='logic'/>
            <vmethod name='render'/>
            <vmethod name='resize'> <int32_t name='w'/> <int32_t name='h'/> </vmethod>
            <vmethod name='help'/>
            <vmethod ret-type='int8_t' name='movies_okay'/>
            <vmethod ret-type='int8_t' name='is_option_screen'/>
            <vmethod ret-type='int8_t' name='is_save_screen'/>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='bool' name='key_conflict'>
                <enum type-name='interface_key'/>
            </vmethod>
        </virtual-methods>

        <custom-methods>
            <cmethod name='feed_key'/>
        </custom-methods>
    </class-type>

    <class-type type-name='viewscreen_layer' original-name='viewscreen_layerst' inherits-from='viewscreen'>
        <stl-vector pointer-type="layer_object" name="layer_objects"/>
    </class-type>

    <struct-type type-name='interfacest'>
        <int32_t name='original_fps'/>

        <compound name='view' type-name='viewscreen'/>

        <uint32_t name='flag'/>
        <int32_t name='shutdown_interface_tickcount'/>
        <int32_t name='shutdown_interface_for_ms'/>

        <int8_t name='supermovie_on'/>
        <int32_t name='supermovie_pos'/>
        <int32_t name='supermovie_delayrate'/>
        <int32_t name='supermovie_delaystep'/>

        <stl-vector pointer-type='stl-string' name='supermovie_sound'/>

        <static-array name='supermovie_sound_time' count='16' comment='SOUND_CHANNELNUM'>
            <static-array count='200' type-name='int32_t'/>
        </static-array>

        <static-array name='supermoviebuffer' count='800000' type-name='uint8_t'/>
        <static-array name='supermoviebuffer_comp' count='1000000' type-name='uint8_t'/>

        <int32_t name='currentblocksize'/>
        <int32_t name='nextfilepos'/>
        <int8_t name='first_movie_write'/>
        <stl-string name='movie_file'/>
    </struct-type>

    <class-type type-name='layer_object' original-name='layer_objectst'>
        <bool name='enabled'/>
        <bool name='active'/>

        <virtual-methods>
            No destructor anywhere:
            <vmethod ret-type='int32_t' name='getFirstVisible'/>
            <vmethod ret-type='int32_t' name='getLastVisible'/>
            <vmethod ret-type='int32_t' name='getX1'/>
            <vmethod ret-type='int32_t' name='getY1'/>
            <vmethod ret-type='int32_t' name='getX2'/>

            <vmethod ret-type='int32_t' name='getY2'/>
            <vmethod ret-type='int32_t' name='getPageSize'/>
            <vmethod ret-type='int32_t' name='getListCursor'/>
            <vmethod name='setListCursor'> <int32_t/> </vmethod>
            <vmethod name='feed'>
                <pointer name='events'><stl-set type-name='interface_key'/></pointer>
            </vmethod>

            <vmethod ret-type='bool' name='isSetMouseLRCur'/>
            <vmethod ret-type='bool' name='isSetMouseLCur'/>
            <vmethod ret-type='bool' name='isSetMouseRCur'/>
            <vmethod ret-type='int32_t' name='getMouseLCur'/>
            <vmethod ret-type='int32_t' name='getMouseRCur'/>

            <vmethod name='getMouseLClickPos'> <pointer type-name='int32_t' name='x'/> <pointer type-name='int32_t' name='y'/> </vmethod>
            <vmethod name='getMouseRClickPos'> <pointer type-name='int32_t' name='x'/> <pointer type-name='int32_t' name='y'/> </vmethod>
            <vmethod ret-type='int32_t' name='getListLength'/>
            <vmethod name='setListLength'> <int32_t/> </vmethod>
            <vmethod ret-type='int32_t' name='getMouseX'/>

            <vmethod ret-type='int32_t' name='getMouseY'/>
            <vmethod ret-type='int32_t' name='getMouseXOld'/>
            <vmethod ret-type='int32_t' name='getMouseYOld'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='layer_object_buttonst' inherits-from='layer_object'>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
        <int32_t name='has_mouse_lclick'/>
        <int32_t name='has_mouse_rclick'/>
        <int32_t name='mouse_lclick_x'/>
        <int32_t name='mouse_lclick_y'/>
        <int32_t name='mouse_rclick_x'/>
        <int32_t name='mouse_rclick_y'/>
        <int32_t name='mouse_x'/>
        <int32_t name='mouse_y'/>
        <int32_t name='mouse_x_old'/>
        <int32_t name='mouse_y_old'/>
        <bool name='handle_mouselbtndown'/>
        <bool name='handle_mouserbtndown'/>
    </class-type>

    <class-type type-name='layer_object_listst' inherits-from='layer_object'>
        <int32_t name='cursor'/>
        <int32_t name='num_entries'/>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='page_size'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
        <int32_t name='mouse_l_cur'/>
        <int32_t name='mouse_r_cur'/>
        <bool name='rclick_scrolls'/>
        <uint32_t name='flag' comment='for standardscrolling'/>
        <enum name='key_lclick' type-name='interface_key'/>
        <enum name='key_rclick' type-name='interface_key'/>
    </class-type>

    <struct-type type-name='widget_menu'>
        <padding name='pad_1' size='24' comment='lines, std::map'/>
        <int32_t name='selection'/>
        <int32_t name='last_displayheight'/>
        <bool name='bleached'/>
        <padding name='pad_2' size='24' comment='colors, std::map'/>
    </struct-type>

    <struct-type type-name='widget_textbox'>
        <stl-string name='text'/>
        <bool name='keep'/>
    </struct-type>

    <class-type type-name='KeybindingScreen' inherits-from='viewscreen'>
        <enum base-type='int32_t' name='mode'>
            <enum-item name='Main'/>
            <enum-item name='KeyL'/>
            <enum-item name='KeyR'/>
            <enum-item name='Macro'/>
            <enum-item name='Register'/>
        </enum>
        <compound name='main' type-name='widget_menu'/>
        <compound name='keyL' type-name='widget_menu'/>
        <compound name='keyR' type-name='widget_menu'/>
        <compound name='macro' type-name='widget_menu'/>
        <compound name='keyRegister' type-name='widget_menu'/>
    </class-type>

    <class-type type-name='MacroScreenLoad' inherits-from='viewscreen'>
        <compound name='menu' type-name='widget_menu'/>
        <int32_t name='width'/>
        <int32_t name='height'/>
    </class-type>

    <class-type type-name='MacroScreenSave' inherits-from='viewscreen'>
        <compound name='id' type-name='widget_textbox'/>
    </class-type>

    <enum-type type-name='region_permission_type'> bay12: RegionPermission
        <enum-item name='ADVENTURE_MAIN'/>
        <enum-item name='UNUSED11'/> used as index-enum, so name all entries
        <enum-item name='UNUSED12'/>
        <enum-item name='DWARF_MAIN'/>
        <enum-item name='UNUSED0'/>
        <enum-item name='UNUSED1'/>
        <enum-item name='UNUSED2'/>
        <enum-item name='UNUSED3'/>
        <enum-item name='UNUSED4'/>
        <enum-item name='UNUSED5'/>
        <enum-item name='UNUSED6'/>
        <enum-item name='UNUSED7'/>
        <enum-item name='UNUSED8'/>
        <enum-item name='UNUSED9'/>
        <enum-item name='UNUSED10'/>
    </enum-type>

    <struct-type type-name='region_headerst'>
        <compound type-name='language_name' name='name'/>
        <stl-string name='display_name'/>
        <static-array name='permission' count='15' type-name='int8_t' index-enum='region_permission_type'/>
        <compound name='last_id' comment='when loading, DF sets *_next_id to these fields plus 1'> not a compound
            <int32_t name='unit'/>
            <int32_t name='soul'/>
            <int32_t name='item'/>
            <int32_t name='entity'/>
            <int32_t name='nemesis'/>
            <int32_t name='artifact'/>
            <int32_t name='building'/>
            <int32_t name='machine'/>
            <int32_t name='hist_figure'/>
            <int32_t name='hist_event'/>
            <int32_t name='hist_event_collection'/>
            <int32_t name='unit_chunk'/>
            <int32_t name='art_image_chunk'/>
            <int32_t name='task'/>
            <int32_t name='squad'/>
            <int32_t name='formation'/>
            <int32_t name='activity'/>
            <int32_t name='interaction_instance'/>
            <int32_t name='written_content'/>
            <int32_t name='identity'/>
            <int32_t name='incident'/>
            <int32_t name='crime'/>
            <int32_t name='vehicle'/>
            <int32_t name='army'/>
            <int32_t name='army_controller'/>
            <int32_t name='army_tracking_info'/>
            <int32_t name='cultural_identity'/>
            <int32_t name='agreement'/>
            <int32_t name='poetic_form' since='v0.42.01'/>
            <int32_t name='musical_form' since='v0.42.01'/>
            <int32_t name='dance_form' since='v0.42.01'/>
            <int32_t name='scale' since='v0.42.01'/>
            <int32_t name='rhythm' since='v0.42.01'/>
            <int32_t name='occupation' since='v0.42.01'/>
            <int32_t name='belief_system' since='v0.44.01'/>
            <int32_t name='image_set' since='v0.47.01'/>
            <int32_t name='divination_set' since='v0.47.01'/>
        </compound>
        <stl-string name='filename_noext'/>
    </struct-type>

    <class-type type-name='viewscreen_adopt_regionst' inherits-from='viewscreen'>
        <compound type-name='file_compressorst' name='compressor'/>
        <enum base-type='int32_t' name='cur_step'> bay12: AdoptRegionStageType
            <enum-item name='OpeningFile'/>
            <enum-item name='ProcessingRawData'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='LoadingItems'/>
            <enum-item name='LoadingBuildings'/>
            <enum-item name='LoadingEntities'/>
            <enum-item name='LoadingCoinInformation'/>
            <enum-item name='LoadingMapData'/>
            <enum-item name='LoadingCivilizedPopulations'/>
            <enum-item name='LoadingHistory'/>
            <enum-item name='LoadingParameters'/>
            <enum-item name='LoadingArtifacts'/>
            <enum-item name='LoadingActiveHistoricalFigures'/>
            <enum-item name='LoadingSquads'/>
            <enum-item name='LoadingFormations'/>
            <enum-item name='LoadingActivities'/>
            <enum-item name='LoadingInteractions'/>
            <enum-item name='LoadingWrittenContent'/>
            <enum-item name='LoadingIdentities'/>
            <enum-item name='LoadingIncidents'/>
            <enum-item name='LoadingCrimes'/>
            <enum-item name='LoadingVehicles'/>
            <enum-item name='LoadingArmies'/>
            <enum-item name='LoadingArmyControllers'/>
            <enum-item name='LoadingTrackingInformation'/>
            <enum-item name='LoadingCulturalIdentities'/>
            <enum-item name='LoadingAgreements'/>
            <enum-item name='LoadingArtForms'/>
            <enum-item name='LoadingOccupations'/>
            <enum-item name='LoadingBeliefSystems'/>
            <enum-item name='LoadingImageSets'/>
            <enum-item name='LoadingDivinationSets'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='RebuildingTemporaryInformation'/>
            <enum-item name='PreparingGame'/>
            <enum-item name='Failed'/>
        </enum>
        <enum type-name='save_version' name='save_version'/>
        <compound type-name='region_headerst' name='cur_save'/>
        <compound type-name='region_object_datast' name='rod'/>
        <int32_t name='progress' comment='0..35'/>
    </class-type>

    <enum-type type-name='adventure_log_mode' base-type='int16_t'> bay12: AdventureLogModeType
        <enum-item name="EVENTS"/>
        <enum-item name="AGREEMENTS"/>
        <enum-item name="PEOPLE"/>
        <enum-item name="SITES"/>
        <enum-item name="ENTITIES"/>
        <enum-item name="SUBREGIONS"/>

        <enum-item name="BESTIARY"/>
        <enum-item name="ARTIFACTS"/>
        <enum-item name="INTRIGUE"/>
        <enum-item name="INTRIGUE_ACTORS"/>
        <enum-item name="INTRIGUE_ORGANIZATIONS"/>
        <enum-item name="INTRIGUE_PLOTS"/>
        <enum-item name="BLANK_10"/>
        <enum-item name="BLANK_11"/>
        <enum-item name="BLANK_12"/>
    </enum-type>

    <class-type type-name='viewscreen_adventure_logst' inherits-from='viewscreen'>
        <stl-vector name='base_actor_entry' pointer-type='actor_entryst'/>
        <stl-vector name='base_organization_entry' pointer-type='organization_entryst'/>
        <stl-vector name='base_plot_entry' pointer-type='plot_entryst'/>
        <compound name='evidence_repository' type-name='evidence_repositoryst'/>

        <compound name='map_display'> bay12: adventure_log_map_displayst
            <int8_t name='map'/>
            <int8_t name="midmap"/>
            <int8_t name="localmap"/>
            <int8_t name='hide_map'/>
            <compound type-name='coord2d' name='cur_loc'/>
            <compound type-name='coord2d' name='cur_mm_loc'/>
            <compound type-name='coord2d' name='min'/>
            <compound type-name='coord2d' name='max'/>
            <compound type-name='coord2d' name='cursor'/>
            <int16_t name="midmap_highlight_sx"/>
            <int16_t name="midmap_highlight_ex"/>
            <int16_t name="midmap_highlight_sy"/>
            <int16_t name="midmap_highlight_ey"/>
        </compound>

        <int32_t name="selected"/>
        <int8_t name="line_on"/>
        <enum name='mode' type-name='adventure_log_mode'/>
        <enum name='submode' type-name='adventure_log_mode'/>
        <enum name='saved_submode_intrigue' type-name='adventure_log_mode'/>
        <int32_t name='adventure_log_event_text_scroll'/>
        <int32_t name='histfig_text_scroll'/>
        <int32_t name='bestiary_text_scroll'/>
        <int32_t name='entity_text_scroll'/>
        <int32_t name='site_text_scroll'/>
        <int32_t name='subregion_text_scroll'/>
        <int32_t name='artifact_text_scroll'/>

        <bool name='expand_text'/>
        <pointer name='selected_oen' type-name='organization_entry_nodest'/>

        <stl-string name='filter_str'/>
        <bool name='entering_filter'/>
        <bool name='initialized_intrigue_mode'/>

        <stl-vector name='base_site_entry' pointer-type='site_entryst'/>
        <stl-vector name='base_entity_entry' pointer-type='entity_entryst'/>
        <stl-vector name='base_subregion_entry' pointer-type='subregion_entryst'/>
        <stl-vector name='base_feature_layer' pointer-type='world_underground_region'/>
        <stl-vector name='base_agreement_entry' pointer-type='agreement_entryst'/>
        <stl-vector name='base_bestiary_entry' pointer-type='bestiary_entryst'/>
        <stl-vector name='base_adventure_log_event' pointer-type='adventure_log_eventst'/>
        <stl-vector name='base_histfig_entry' pointer-type='histfig_entryst'/>
        <stl-vector name='base_artifact_entry' pointer-type='artifact_entryst'/>

        <bool name='priority_sort_site'/>
        <bool name='priority_sort_entity'/>
        <bool name='priority_sort_histfig'/>
        <int32_t name='event_sort_mode'/>
        <bool name='set_priority_site'/>
        <bool name='set_priority_entity'/>
        <bool name='set_priority_histfig'/>
        <bool name='set_priority_event'/>

        <stl-vector name='value_site_entry' pointer-type='site_entryst'/>
        <stl-vector name='value_entity_entry' pointer-type='entity_entryst'/>
        <stl-vector name='value_subregion_entry' pointer-type='subregion_entryst'/>
        <stl-vector name='value_feature_layer' pointer-type='world_underground_region'/>
        <stl-vector name='value_agreement_entry' pointer-type='agreement_entryst'/>
        <stl-vector name='value_bestiary_entry' pointer-type='bestiary_entryst'/>
        <stl-vector name='value_adventure_log_event' pointer-type='adventure_log_eventst'/>
        <stl-vector name='value_histfig_entry' pointer-type='histfig_entryst'/>
        <stl-vector name='value_artifact_entry' pointer-type='artifact_entryst'/>

        <stl-vector name='value_actor_entry' pointer-type='actor_entryst'/>
        <stl-vector name='value_organization_entry' pointer-type='organization_entryst'/>
        <stl-vector name='value_plot_entry' pointer-type='plot_entryst'/>
        <stl-vector name='site_entry' pointer-type='site_entryst'/>
        <stl-vector name='entity_entry' pointer-type='entity_entryst'/>
        <stl-vector name='subregion_entry' pointer-type='subregion_entryst'/>
        <stl-vector name='feature_layer' pointer-type='world_underground_region'/>
        <stl-vector name='agreement_entry' pointer-type='agreement_entryst'/>
        <stl-vector name='bestiary_entry' pointer-type='bestiary_entryst'/>
        <stl-vector name='adventure_log_event' pointer-type='adventure_log_eventst'/>
        <stl-vector name='histfig_entry' pointer-type='histfig_entryst'/>
        <stl-vector name='artifact_entry' pointer-type='artifact_entryst'/>
        <stl-vector name='actor_entry' pointer-type='actor_entryst'/>
        <stl-vector name='organization_entry' pointer-type='organization_entryst'/>
        <stl-vector name='plot_entry' pointer-type='plot_entryst'/>
    </class-type>

    <struct-type type-name='bestiary_entryst'>
        <int32_t name='alpha_index'/>
        <pointer name='ck' type-name='creature_knowledgest'/>
        <stl-string name='list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>
    </struct-type>

    <struct-type type-name='agreement_entryst'>
        <pointer name='ag' type-name='agreement'/>

        <pointer name='sq' type-name='squad'/>
        <pointer name='so' type-name='squad_order'/>
        <bool name='squad_order_repeatable'/>

        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <bool name='showing_commander'/>
        <int32_t name='ax'/>
        <int32_t name='ay'/>
    </struct-type>

    <struct-type type-name='histfig_entryst'>
        <pointer name='hf' type-name='historical_figure'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <pointer name='iden' type-name='identity'/>
        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='site_entryst'>
        <pointer name='st' type-name='world_site'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='entity_entryst'>
        <pointer name='ent' type-name='historical_entity'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='subregion_entryst'>
        <pointer name='sr' type-name='world_region'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>
    </struct-type>
    <enum-type type-name='adventure_log_event_type' base-type='int32_t'> bay12: AdventureLogEventType
        <enum-item name='INCIDENT'/>
        <enum-item name='RUMOR'/>
    </enum-type>

    <struct-type type-name='adventure_log_eventst'>
        <enum name='type' type-name='adventure_log_event_type'/>
        <pointer name='rumor' type-name='entity_event'/>
        <pointer name='incident' type-name='incident'/>
        <pointer name='ard' type-name='adventure_rumor_datast'/>
        <int32_t name='year'/>
        <int32_t name='season_count'/>

        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='summary'/>
        <stl-vector name='key_word' pointer-type='stl-string'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>
        <int32_t name='ax' init-value='-1'/>
        <int32_t name='ay' init-value='-1'/>
        <int32_t name='recenter_mode'/>
        <static-array name='has_recenter_mode' type-name='bool' count='3'/>
    </struct-type>

    <struct-type type-name='artifact_entryst'>
        <pointer name='art' type-name='artifact_record'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <compound name='arl' type-name='artifact_rumor_locationst'/>

        <int32_t name='ax'/>
        <int32_t name='ay'/>
    </struct-type>

    <class-type type-name='viewscreen_announcelistst' inherits-from='viewscreen'>
        <pointer type-name='unit' name='unit'/>
        <enum type-name='unit_report_type' base-type='int16_t' name='report_type'/>
        <int32_t name='sel_idx'/>
        <stl-vector pointer-type='report' name='reports'/>
    </class-type>

    <class-type type-name='viewscreen_assign_display_itemst' inherits-from='viewscreen'>
        <pointer name='building' type-name='building_display_furniturest'/>
        <static-string size='256' name='title'/>
        <int32_t name='sel_type'/>
        <int32_t name='sel_item'/>
        <stl-vector name='selected_item_ids' type-name='int32_t' comment='sorted'/>
        <enum name='sel_column' base-type='int32_t'>
            <enum-item name='ItemTypes'/>
            <enum-item name='Items'/>
        </enum>
        <stl-vector name='item_type' type-name='item_type'/>
        <compound name='artifacts' type-name='itemlistst'/>
        <bool name='built_artifact_list'/>
        <static-array name='items' count='91' index-enum='item_type' type-name='itemlistst'/>
        <static-array name='items_populated' count='91' index-enum='item_type' type-name='bool'/>
        <stl-vector name='description' pointer-type='stl-string'/>
    </class-type>

    <class-type type-name='viewscreen_barterst' inherits-from='viewscreen'>
        <pointer name='merchant' type-name='unit'/>
        <pointer name='trader' type-name='unit'/>
        <pointer name='zone' type-name='building_civzonest'/>
        <pointer name='conv' type-name='activity_event_conversationst'/>
        <int8_t name='personal'/>
        <int8_t name='making_demands'/>
        <int8_t name='strong_affiliation_bonus'/>
        <static-array count='2' name='good'><stl-vector pointer-type='item'/></static-array>
        <static-array count='2' name='goodflag'><stl-vector type-name='uint8_t'/></static-array>
        <static-array count='2' name='good_amount'><stl-vector type-name='int32_t'/></static-array>
        <stl-vector name='your_currency' pointer-type='item'/>
        <stl-vector name='merchant_currency' pointer-type='item'/>
        <static-array name='cursor' count='2' type-name='int32_t'/>
        <bool name="in_right_pane"/>
        <int16_t name='trade_reply'/>
        <int8_t name='buildlists'/>
        <int32_t name='max_ask'/>
        <int32_t name='max_offer'/>
        <int32_t name='cur_ask'/>
        <int32_t name='cur_offer'/>
        <int8_t name='entering_amount'/>
        <int8_t name='entering_ask_currency'/>
        <int8_t name='entering_offer_currency'/>
        <stl-string name='amount_str'/>
        <stl-vector name='responses' pointer-type='stl-string'/>
        <int32_t name='response_cursor'/>
    </class-type>

    <class-type type-name='viewscreen_buildingst' inherits-from='viewscreen'>
        <pointer name='building' type-name='building'/>
    </class-type>

    <class-type type-name='viewscreen_buildinglistst' inherits-from='viewscreen'>
        <int32_t name='cursor' refers-to='$$._parent.buildings[$]'/>
        <bool name='alt_right_panel'/>
        <stl-vector name='buildings' pointer-type='building'/>
        <stl-vector name='buildings2' pointer-type='building'/>
        <stl-vector name='room_value' type-name='int32_t' index-refers-to='$$._parent.buildings[$]'/>
        <stl-vector name='room_value2' type-name='int32_t' index-refers-to='$$._parent.buildings2[$]'/>
    </class-type>

    <enum-type type-name='embark_finder_option' base-type='int16_t'> bay12: FindSiteParamType
        <enum-item name='DimensionX'/>
        <enum-item name='DimensionY'/>
        <enum-item name='Savagery'/>
        <enum-item name='Evil'/>
        <enum-item name='Elevation'/>
        <enum-item name='Temperature'/>
        <enum-item name='Rain'/>
        <enum-item name='Drainage'/>
        <enum-item name='FluxStone'/>
        <enum-item name='AquiferLight'/>
        <enum-item name='AquiferHeavy'/>
        <enum-item name='River'/>
        <enum-item name='UndergroundRiver'/>
        <enum-item name='UndergroundPool'/>
        <enum-item name='MagmaPool'/>
        <enum-item name='MagmaPipe'/>
        <enum-item name='Chasm'/>
        <enum-item name='BottomlessPit'/>
        <enum-item name='OtherFeatures'/>
        <enum-item name='ShallowMetal'/>
        <enum-item name='DeepMetal'/>
        <enum-item name='Soil'/>
        <enum-item name='Clay'/>
    </enum-type>

    <struct-type type-name='embark_location' original-name='starter_infost'>
        <compound name='region_pos' type-name='coord2d'/>

        <int16_t name="reclaim_site" ref-target='world_site'/>
        <int16_t name="reclaim_idx"/>

        <compound name='biome_rgn' type-name='coord2d_path'/>
        <compound name='embark_pos_min' type-name='coord2d'/>
        <compound name='embark_pos_max' type-name='coord2d'/>

        <compound name='embark_biome_rgn' type-name='coord2d'
                  comment='Valid only after e pressed.'/>
    </struct-type>

    <class-type type-name='viewscreen_choose_start_sitest' inherits-from='viewscreen'>
        <enum name='page'> bay12: ChooseStartSiteViewMode, no base type!
            <enum-item name='Biome'/>
            <enum-item name='Neighbors'/>
            <enum-item name='Civilization'/>
            <enum-item name='Elevation'/>
            <enum-item name='Cliffs'/>
            <enum-item name='Reclaim'/>
            <enum-item name='ReclaimDetails'/>
            <enum-item name='Find'/>
            <enum-item name='Notes'/>
        </enum>

        <compound name='location' type-name='embark_location'/>

        <int32_t name="biome_idx"/>
        <bool name="biome_highlighted"/>

        <bool name='in_embark_light_aquifer'/>
        <bool name='in_embark_aquifer'/>
        <bool name='in_embark_salt'/>
        <bool name='in_embark_large'/>
        <bool name='in_embark_narrow'/>
        <bool name='in_embark_only_warning'/>
        <bool name='in_embark_civ_dying'/>

        <stl-vector name="highlighted_sites" pointer-type='world_site'/>
        <stl-vector name="local_sites" pointer-type='world_site'/>
        <int32_t name="reclaim_idx" refers-to='$global.world.world_data.old_sites[$]'/>

        <int32_t name="civ_idx" refers-to='$$._global.available_civs[$]'/>

        <stl-vector name="available_civs" pointer-type="historical_entity"/>

        <compound name='reclaim_detail_box' type-name='curses_text_boxst'/>
        <pointer name="reclaim_detail_he" type-name="history_event" has-bad-pointers='true' since='v0.40.01'/>
        <pointer name="reclaim_detail_she" type-name="history_event" has-bad-pointers='true' since='v0.40.01'/>
        <int32_t name="reclaim_detail_box_last_processing_dimx" since='v0.40.01'/>

        <compound name='finder'>
            <int32_t name='cur_best_value'/>
            <int32_t name="search_x" init-value='-1' comment='to world width / 16'/>
            <int32_t name="search_y" comment='to world height / 16'/>

            <int32_t name="cursor" refers-to='$$._parent.enabled_options[$]'/>

            <static-array type-name='int32_t' name="options"
                          count="23" index-enum='embark_finder_option'/>
            <static-array type-name='bool' name="unmatched"
                          count="23" index-enum='embark_finder_option'/>

            <stl-vector name="visible_options">
                <enum base-type='int32_t' type-name='embark_finder_option'/>
            </stl-vector>

            <enum name='finder_state' base-type='int16_t'>
                <enum-item name='None' value='-1'/>
                <enum-item name='Searching'/>
                <enum-item name='NoResult'/>
                <enum-item name='Partial'/>
                <enum-item name='Suitable'/>
            </enum>

            <int16_t name='find_ax'/>
            <int16_t name='find_ay'/>
            <int16_t name='find_mm_sx'/>
            <int16_t name='find_mm_ex'/>
            <int16_t name='find_mm_sy'/>
            <int16_t name='find_mm_ey'/>
        </compound>

        <stl-vector name="note_index" type-name='int32_t' refers-to='$global.world.world_data.embark_notes[$]'/>
        <compound name="text_box" type-name='curses_text_boxst'/>
        <bool name='notes_entering_text'/>
        <int32_t name='notes_list_select'/>
        <int16_t name="notes_cur_sym"/>
        <int16_t name="notes_sym_select_1"/>
        <int16_t name="notes_sym_select_2"/>
        <int16_t name="notes_sym_select_3"/>
        <int32_t name="notes_selected_note"/>
    </class-type>

    <struct-type type-name='region_snapshotst'>
        <int32_t name='year'/>
        <compound name='territory' type-name='entity_territoryst'/>
        <stl-vector name='site_id' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='site_population' type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='region_print_datast'>
        <pointer name='rss' type-name='region_snapshotst'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: REGION_PRINT_DATA_FLAG_*
            <flag-bit name='use_territory'/>
            <flag-bit name='use_territory_civs'/>
        </bitfield>
        <int32_t name='relevant_id'/>
        <pointer name='highlight_civ_id'><stl-vector type-name='int32_t' ref-target='historical_entity'/></pointer>
        <pointer name='mission_report' type-name='mission_report'/>
        <int32_t name='mission_path_data_index'/>
        <int32_t name='mission_path_data_path_index'/>
        <pointer name='indicator_data' type-name='rpd_indicator_datast'/>
        <static-array name='legend_entity_id' type-name='int32_t' count='50' ref-target='historical_entity'/>
        <int32_t name='legend_entity_id_num'/>
    </struct-type>

    <struct-type type-name='rpd_indicator_datast'>
        <static-array name='line_s_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_e_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_char' type-name='uint8_t' count='1000'/>
        <static-array name='line_f' type-name='uint8_t' count='1000'/>
        <static-array name='line_b' type-name='uint8_t' count='1000'/>
        <static-array name='line_br' type-name='uint8_t' count='1000'/>
        <int32_t name='line_num'/>

        <static-array name='marker_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='marker_char' type-name='int8_t' count='1000'/>
        <static-array name='marker_f' type-name='int8_t' count='1000'/>
        <static-array name='marker_b' type-name='int8_t' count='1000'/>
        <static-array name='marker_br' type-name='int8_t' count='1000'/>
        <int32_t name='marker_num'/>
    </struct-type>

    <class-type type-name='viewscreen_civlistst' inherits-from='viewscreen'>
        <enum name='page' base-type='int32_t' init-value='World'> bay12: CivlistModeType
            <enum-item name='Civilizations'/>
            <enum-item name='News'/>
            <enum-item name='World'/>
            <enum-item name='Missions'/>
            <enum-item name='MissionSquads'/>
            <enum-item name='MissionMessengers' since='v0.44.11'/>
            <enum-item name='MissionDetails' since='v0.44.11'/>
            <enum-item name='People'/>
            <enum-item name='Artifacts'/>
        </enum>
        <int32_t name='sel_idx'/>
        <stl-vector pointer-type='historical_entity' name='entities'/>

        <int32_t name='map_x'/>
        <int32_t name='map_y'/>
        <pointer name='site' type-name='world_site'/>
        <stl-vector name='site_artifacts' pointer-type='artifact_record'/>
        <stl-vector name='site_prisoners' pointer-type='historical_figure'/>
        <bool name='site_is_linked' since='v0.44.11'/>
        <stl-vector name='focus_site_requestable_worker' since='v0.44.11' pointer-type='nemesis_record'/>

        <stl-vector name='army_controllerst' pointer-type='army_controller'/>
        <int32_t name='selected_ac'/>

        <stl-vector name='squads' pointer-type='squad'/>
        <stl-vector name='squads_travelling' type-name='int32_t'/>
        <int32_t name='squad_idx'/>

        <stl-vector name='messengers' pointer-type='occupation'/>
        <stl-vector name='messengers_travelling' type-name='int32_t'/>
        <int32_t name='messenger_idx'/>

        <stl-vector name='workers' pointer-type='nemesis_record'/>
        <int32_t name='worker_idx'/>

        <stl-vector name='people' pointer-type='historical_figure'/>
        <int32_t name='person_idx'/>
        <int32_t name='person_x'/>
        <int32_t name='person_y'/>

        <stl-vector name='artifact_records' pointer-type='artifact_record'/>
        <stl-vector name='artifact_details' pointer-type='artifact_rumor_locationst'/>
        <int32_t name='artifact_idx'/>
        <int32_t name='artifact_x'/>
        <int32_t name='artifact_y'/>

        <stl-vector name='artifact_desc' pointer-type='stl-string'/>
        <pointer name='artifact_eac' type-name='artifact_claim'/>
        <pointer name='artifact_rpa_holder' type-name='historical_figure'/>
        <pointer name='artifact_claimed_by_hf' type-name='historical_figure'/>

        <pointer name='military_goals_hf' type-name='historical_figure'/>
        <pointer name='meet_workers_hf' type-name='historical_figure'/>

        <stl-vector name='rumors' pointer-type='entity_event'/>
        <stl-vector name='rumor_master' pointer-type='entity_event'/>
        <int32_t name='rumor_scroll'/>
        <int32_t name='news_x'/>
        <int32_t name='news_y'/>

        <compound name='rumor_rpd' type-name='region_print_datast'/>
        <compound name='rumor_rpd_indicator_data' type-name='rpd_indicator_datast'/>

        <stl-vector name='news_text' pointer-type='stl-string'/>
        <bool name='show_holdings' since='v0.44.11'/>
        <bool name='show_legend' since='v0.44.11'/>
    </class-type>

    <class-type type-name='viewscreen_counterintelligencest' inherits-from='viewscreen'>
        <stl-vector pointer-type='actor_entryst' name='base_actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='base_organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='base_plot_entry'/>

        <int32_t name='mode'/>
        <int32_t name='selected'/>

        <stl-string name='filter_str'/>
        <int8_t name='entering_filter'/>
        <int8_t name='expand_text'/>
        <pointer name='selected_oen' type-name='organization_entry_nodest'/>
        <int32_t name='text_scroll'/>

        <stl-vector pointer-type='actor_entryst' name='value_actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='value_organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='value_plot_entry'/>

        <stl-vector pointer-type='actor_entryst' name='actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='plot_entry'/>
    </class-type>

    <class-type type-name='viewscreen_createquotast' inherits-from='viewscreen'>
        <int32_t name='building_id' ref-target='building'/>
        <static-string name='str_filter' size='256'/>
        <int32_t name='sel_idx'/>
        <stl-vector name='orders' pointer-type='manager_order_template' comment='filtered orders'/>
        <stl-vector name='all_orders' pointer-type='manager_order_template'/>
        <bool name='want_quantity'/>
        <stl-string name='str_quantity'/>
        <pointer name='workshop_profile_orders' comment='assigned from viewscreen_workshop_profilest.orders'>
            <stl-vector pointer-type='manager_order'/>
        </pointer>
    </class-type>

    <class-type type-name='viewscreen_customize_unitst' inherits-from='viewscreen'>
        <pointer name="unit" type-name="unit"/>
        <int8_t name='editing_nickname'/>
        <int8_t name='editing_profession'/>
        <stl-string name='previous_name'/> previous value of the string, for Abort Edit
        <int8_t name='has_name'/>
    </class-type>

    <class-type type-name='viewscreen_dungeon_monsterstatusst' inherits-from='viewscreen'>
        <pointer name="unit" type-name="unit"/>

        <int32_t name="inventory_cursor"/>
        <int32_t name="body_part_cursor"/>

        <stl-vector name="body_part">
            <int16_t refers-to='$$._global.unit.body.body_plan.body_parts[$]'/>
        </stl-vector>

        <bool name="view_skills"/>

        <int32_t name='unk_1'/>
        <int32_t name='length'/>
        <int32_t name='scroll_pos'/>
        <int8_t name='unk_2'/>
        <stl-vector name="inventory" pointer-type="unit_inventory_item"/>
        <stl-vector name="spatters" pointer-type="unit_spatter"/>
    </class-type>

    <class-type type-name='viewscreen_dungeon_wrestlest' inherits-from='viewscreen'>
        <pointer name="player" type-name='unit'/>
        <pointer name="target" type-name='unit'/>
        <int8_t name='dir'/>
        <int32_t name='wrestle_idx'/>
        <stl-vector name='wrestle_items' pointer-type='unit_item_wrestle'/>
        <int32_t name='cl_selected'/>
        <int32_t name='old_cl_selected'/>
        <stl-vector type-name='int32_t' name='cl_type'/>
        <stl-vector type-name='int32_t' name='cl_index'/>
        <compound name='combat_list'>
            <pointer type-name='unit' name='unit'/>
            <int8_t name='strike'/>
            <int8_t name='wrestle'/>
            <stl-vector pointer-type='item' name='attacker_items'/>
            <stl-vector type-name='int16_t' name='attacker_bp'/>
            <stl-vector pointer-type='item' name='defender_items'/>
            <stl-vector type-name='int16_t' name='defender_bp'/>
            <stl-vector pointer-type='unit_item_wrestle' name='attacker_wrestles'/>
            <stl-vector pointer-type='unit_item_wrestle' name='defender_wrestles'/>
            <stl-vector pointer-type='unit_inventory_item' name='attacker_inv'/>
            <stl-vector pointer-type='unit_inventory_item' name='defender_inv'/>
            <stl-vector type-name='int16_t' name='grapple_attacker_bp'/>
            <stl-vector type-name='int16_t' name='grapple_attacker_item'/>
            <stl-vector type-name='int16_t' name='grapple_defender_bp'/>
            <stl-vector type-name='int16_t' name='grapple_defender_item'/>
            <stl-vector type-name='int16_t' name='wrestle_idx'/>
            <stl-vector type-name='int16_t' name='wrestle_type'/>
            <stl-vector type-name='int16_t' name='wrestle_bp'/>
        </compound>
        <int32_t name='selected_bp'/>
        <int32_t name='selected_item_id'/>
    </class-type>

    <class-type type-name='viewscreen_dungeonmodest' inherits-from='viewscreen'>
        <int32_t name="x"/>
        <int32_t name="y"/>
        <int32_t name="z"/>
        <int32_t name="announce_y"/> screen y of first announce shown
        <int32_t name="announce_idx"/> idx of first announcement currently displayed
        <int8_t name="announce_more"/> 0 [DONE] 1 [MORE]
    </class-type>

    <class-type type-name='viewscreen_dwarfmodest' inherits-from='viewscreen'>
        <int8_t name='shown_site_name'/> display site name next frame

        <int16_t name='jeweler_mat_count'/> jewelers workshop orders
        <stl-vector type-name='int32_t' name='jeweler_cutgem'  index-refers-to='(material-by-id 0 $)'/> number of free items for job
        <stl-vector type-name='int32_t' name='jeweler_encrust' index-refers-to='(material-by-id 0 $)'/> index list +3 (green/clear/crystal glass)

        <stl-vector name='unit_labors_sidemenu'> For sidemenu unit/prefs/labor
            <enum type-name='unit_labor' base-type='int32_t'/> When negative, labor category
        </stl-vector>
        <stl-vector name='unit_labors_sidemenu_uplevel'>
            <enum type-name='unit_labor' base-type='int32_t'/>
        </stl-vector>
        <int32_t name='unit_labors_sidemenu_uplevel_idx'/>
        <int8_t name='sideSubmenu'/> determine if ESC is Done or Back

        <int8_t name='keyRepeat'/>

        <stl-vector name='trained_animals' pointer-type='unit'/>
        <int32_t name='trained_animal_idx'/>
        <int32_t name='number_assigned_hunt'/> for current unit
        <int32_t name='number_assigned_war'/>
    </class-type>

    <class-type type-name='viewscreen_entityst' inherits-from='viewscreen'>
        <pointer name='entity' type-name='historical_entity'/>
        <stl-vector name='history' pointer-type='history_event' comment='unused'/>
        <int32_t name='history_cursor'/>
        <stl-vector name='members' pointer-type='nemesis_record'/>
        <stl-vector name='member_rank' type-name='int32_t'/>
        <int32_t name='start_idx'/>
        <stl-vector name='agreements' pointer-type='meeting_event'/>
        <stl-vector name='agreement_status' type-name='int8_t'/>
        <int32_t name='agreement_cursor'/>
        <int16_t name='page'/>
    </class-type>

    <enum-type type-name='export_map_type'>
        <enum-item name='hf_network' value='-3'/>
        <enum-item name='religion'/>
        <enum-item name='none'/>
        <enum-item name='standard_biome_site_map'/>
        <enum-item name='elevations_including_lake_and_ocean_floors'/>
        <enum-item name='elevations_respecting_water_level'/>
        <enum-item name='biome'/>
        <enum-item name='hydrosphere'/>
        <enum-item name='temperature'/>
        <enum-item name='rainfall'/>
        <enum-item name='drainage'/>
        <enum-item name='savagery'/>
        <enum-item name='volcanism'/>
        <enum-item name='current_vegetation'/>
        <enum-item name='evil'/>
        <enum-item name='salinity'/>
        <enum-item name='structures_fields_roads_etc'/>
        <enum-item name='trade'/>
        <enum-item name='nobility_holdings'/>
        <enum-item name='diplomacy'/>
    </enum-type>

    <class-type type-name='viewscreen_export_graphical_mapst' inherits-from='viewscreen'>
        <bool name='in_select' comment='false = in export'/>
        <enum name='sel_type' type-name='export_map_type' />
        <int32_t name='mode_id' comment='if sel_type is negative, this number is appended to the filename'/>
        <stl-vector name='special_site_data' type-name='int32_t'/>
        <stl-vector name='special_site_parent' pointer-type='world_site'/>
        <int16_t name='x0'/>
        <int16_t name='y0'/>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int32_t name='cur_x'/>
        <int32_t name='cur_y'/>
        <pointer name='rgb_buffer' is-array='true' comment='numtiles_map_width * numtiles_max_height entries'>
            <uint8_t name='r'/>
            <uint8_t name='g'/>
            <uint8_t name='b'/>
        </pointer>
        <int32_t name='map_width'  comment='in world tiles'/>
        <int32_t name='map_height' comment='in world tiles'/>
        <int32_t name='numtiles_map_width' comment='in embark tiles'/>
        <int32_t name='numtiles_map_height' comment='in embark tiles'/>
    </class-type>

    <class-type type-name='viewscreen_export_regionst' inherits-from='viewscreen'>
        <enum base-type='int32_t' name='state'>
            <enum-item name='Initializing'/>
            <enum-item name='PreliminaryCleaning'/>
            <enum-item name='OffloadingUnits'/>
            <enum-item name='OffloadingArtImages'/>
            <enum-item name='OffloadingFile'/>
            <enum-item name='CharacterizingRawData'/>
            <enum-item name='SortingWorldInformation'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='SavingItems'/>
            <enum-item name='SavingBuildings'/>
            <enum-item name='SavingEntities'/>
            <enum-item name='SavingCoinInformation'/>
            <enum-item name='SavingMapData'/>
            <enum-item name='SavingCivilizedPopulations'/>
            <enum-item name='SavingHistory'/>
            <enum-item name='SavingParameters'/>
            <enum-item name='SavingArtifacts'/>
            <enum-item name='SavingActiveHistoricalFigures'/>
            <enum-item name='SavingSquads'/>
            <enum-item name='SavingFormations'/>
            <enum-item name='SavingActivities'/>
            <enum-item name='SavingInteractions'/>
            <enum-item name='SavingWrittenContent'/>
            <enum-item name='SavingIdentities'/>
            <enum-item name='SavingIncidents'/>
            <enum-item name='SavingCrimes'/>
            <enum-item name='SavingVehicles'/>
            <enum-item name='SavingArmies'/>
            <enum-item name='SavingArmyControllers'/>
            <enum-item name='SavingTrackingInfo'/>
            <enum-item name='SavingCulturalIdentities'/>
            <enum-item name='SavingAgreements'/>
            <enum-item name='SavingArtForms'/>
            <enum-item name='SavingOccupations'/>
            <enum-item name='SavingBeliefSystems'/>
            <enum-item name='SavingImageSets'/>
            <enum-item name='SavingDivinationSets'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='SynchronizingFolders'/>
        </enum>
        <int32_t name='progress' comment='0..40'/>
        <compound name='units_progress'>
            <stl-vector type-name='int32_t' name='save_file_id'/>
            <stl-vector type-name='int16_t' name='save_file_member_idx'/>
            <stl-vector pointer-type='unit' name='units'/>
            <pointer type-name='unit_chunk' name='current_chunk'/>
            <int32_t name='current_save_file_id'/>
            <int32_t name='offloaded_units'/>
        </compound>
        <compound type-name='file_compressorst' name='compressor'/>
    </class-type>

    <class-type type-name='viewscreen_game_cleanerst' inherits-from='viewscreen'>
        <enum base-type='int32_t' name='state'>
            <enum-item name='CleaningGameObjects'/>
            <enum-item name='CleaningStrandedObjects'/>
            <enum-item name='CleaningPlayObjects'/>
        </enum>
    </class-type>

    <enum-type type-name='viewscreen_image_creator_mode' base-type='int32_t'>
        <enum-item name='None' value='-1'/>

        <enum-item name='ArtistToChoose'/>
        <enum-item name='Histfig'/>
        <enum-item name='Site'/>
        <enum-item name='Entity'/>
        <enum-item name='HistoryEvent'/>

        <enum-item name='ExistingImage'/>
        <enum-item name='NewImage'/>

        <enum-item name='AddCreature'/>
        <enum-item name='AddHistfig'/>
        <enum-item name='AddPlant'/>
        <enum-item name='AddTree'/>
        <enum-item name='AddShape'/>
        <enum-item name='AddObject'/>
        <enum-item name='AddArtifact'/>
        <enum-item name='AddRelationship'/>
        <enum-item name='ChooseRelationshipX'/>
        <enum-item name='ChooseRelationshipY'/>
        <enum-item name='EnterNumber'/>
        <enum-item name='DeleteElement'/>
    </enum-type>

    <class-type type-name='viewscreen_image_creatorst' inherits-from='viewscreen'>
        <stl-string name='title'/>
        <stl-vector name='modes' type-name='viewscreen_image_creator_mode'/>
        <int32_t name='mode_cursor'/>
        <enum name='mode' type-name='viewscreen_image_creator_mode'/>
        <int32_t name='item_idx'/>
        <bool name='in_filter'/>
        <stl-string name='filter'/>
        <stl-vector name='descriptions' pointer-type='stl-string'/>
        <stl-vector name='sites'>
            <pointer>
                <pointer name='site' type-name='world_site'/>
                <stl-string name='name'/>
                <stl-string name='trans_name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='entities'>
            <pointer>
                <pointer name='entity' type-name='historical_entity'/>
                <stl-string name='name'/>
                <stl-string name='trans_name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='plants'>
            <pointer>
                <int32_t name='plant' ref-target='plant_raw'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='trees'>
            <pointer>
                <int32_t name='tree' ref-target='plant_raw'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='shapes'>
            <pointer>
                <int32_t name='shape'/>
                <int32_t name='shape2'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='objects'>
            <pointer>
                <enum name='item_type' base-type='int32_t' type-name='item_type'/>
                <int32_t name='item_subtype' refers-to='(item-subtype-target $$._parent._parent.type[$$._key] $)'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='artifacts'>
            <pointer>
                <pointer name='artifact' type-name='artifact_record'/>
                <stl-string name='name'/>
                <stl-string name='trans_name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='histfigs'>
            <pointer>
                <pointer name='histfig' type-name='historical_figure'/>
                <stl-string name='name'/>
                <stl-string name='trans_name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='verbs'>
            <pointer>
                <enum type-name='art_image_property_verb' name='verb' base-type='int32_t'/>
                <bool name='transitive' comment='whether this relationship has 2 actors'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='histfigs_filtered' pointer-type='historical_figure' comment='used when making an image related to an hf'/>
        <stl-vector name='sites_filtered' pointer-type='world_site'/>
        <stl-vector name='entities_filtered' pointer-type='historical_entity'/>
        <stl-vector name='events_filtered' pointer-type='history_event'/>
        <stl-vector name='existing_images_filtered' pointer-type='art_image'/>
        <compound name='image' type-name='art_image'/>
        <stl-vector name='races_filtered' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='castes_filtered' type-name='int32_t' ref-target='caste_raw' comment='-1 for unspecified'/>
        <stl-vector name='histfigs_filtered2' pointer-type='historical_figure' comment='used when adding an hf to a new image'/>
        <stl-vector name='plants_filtered' type-name='int32_t' ref-target='plant_raw'/>
        <stl-vector name='trees_filtered' type-name='int32_t' ref-target='plant_raw'/>
        <stl-vector name='shapes_filtered' type-name='int32_t' ref-target='descriptor_shape'/>
        <stl-vector name='shapes_filtered_adj' type-name='int32_t' comment='index into descriptor_shape.adj, or -1 if no adjectives'/>
        <stl-vector name="item_types_filtered">
            <enum base-type='int32_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name="item_subtypes_filtered">
            <int32_t refers-to='(item-subtype-target $$._parent._parent.item_types_filtered[$$._key] $)'/>
        </stl-vector>
        <stl-vector name='artifacts_filtered' pointer-type='artifact_record'/>
        <stl-vector name='verbs_filtered_verb'>
            <enum base-type='int32_t' type-name='art_image_property_verb'/>
        </stl-vector>
        <stl-bit-vector name='verbs_filtered_transitive'/>
        <stl-vector name='verb_targets' type-name='int32_t'/>
        <int32_t name='new_verb'/>
        <bool name='new_verb_transitive'/>
        <int32_t name='new_verb_actor_idx'/>
        <int32_t name='new_verb_target_idx'/>
        <int32_t name='entering_number_idx'/>
        <stl-string name='entering_number'/>
        <bool name='abort_warn'/>
        <bool name='image_abort_warn'/>
        <bool name='must_do_image_abort_warn'/>
        <stl-vector name='deletable_elements' pointer-type='stl-string'/>
        <int32_t name='text_pos'/>
        <compound name='ics' type-name='image_creation_specifierst'/>
    </class-type>

    <struct-type type-name='image_creation_specifierst'>
        <pointer name='job' type-name='job'/>
        <pointer name='job_order' type-name='manager_order'/>
        <pointer name='detail' type-name='location_detailst'/>
        <pointer name='entity' type-name='historical_entity'/>
        <pointer name='symbol' type-name='art_image'/>
        <pointer name='adv_art' type-name='adv_art_specifierst'/>
        <pointer name='figure' type-name='historical_figure'/>
        <pointer name='exit_flag' type-name='uint32_t'/>
        <uint32_t name='flag'/>
    </struct-type>

    <class-type type-name='viewscreen_itemst' inherits-from='viewscreen'>
        <pointer name="item" type-name="item"/>

        <stl-vector name="entry_ref" pointer-type='general_ref'/>
        <stl-vector name="entry_indent" type-name='int16_t'/>
        <stl-vector name="entry_spatters" pointer-type='spatter'/>
        <stl-vector name="entry_string" pointer-type='stl-string'/>
        <stl-vector name="entry_reaction" type-name='int32_t'/>
        <int32_t name="cursor_pos"/>

        <bool name="caption_uses"/>
        <bool name="caption_contents"/>
    </class-type>

    <class-type type-name='viewscreen_jobst' inherits-from='viewscreen'>
        <pointer name='job' type-name='job'/>
    </class-type>

    <class-type type-name='viewscreen_joblistst' inherits-from='viewscreen'>
        <bool name="allow_zoom"/>

        <int32_t name="cursor_pos"/>

        <stl-vector name="jobs" pointer-type='job'/>
        <stl-vector name="units" pointer-type='unit'/>
    </class-type>

    <class-type type-name='viewscreen_jobmanagementst' inherits-from='viewscreen'>
        <int32_t name='sel_idx'/> index into world.manager_orders, curpage = sel_idx/16
        <bool name='in_max_workshops' since='v0.43.01'/>
        <stl-string name='max_workshops' since='v0.43.01'/>
    </class-type>

    <class-type type-name='viewscreen_justicest' inherits-from='viewscreen'>
        <int16_t name='jails_needed'/>
        <int16_t name='jails_present'/>
        <enum base-type='int32_t' name='cur_column'>
            <enum-item name='Crimes'/>
            <enum-item name='Suspects'/>
            <enum-item name='ConvictChoices'/>
            <enum-item name='InterrogateChoices' since='v0.47.01'/>
        </enum>
        <stl-vector name='convicts' pointer-type='unit'/>
        <stl-vector name='cases' pointer-type='crime' comment='contains recent or cold cases depending on the cold_cases field'/>
        <int32_t name='sel_idx_current'/>
        <int32_t name='sel_idx_cold' comment='used to save/restore current selection when switching between recent/cold'/>
        <int32_t name='sel_idx_recent' comment='used to save/restore current selection when switching between recent/cold'/>
        <bool name='cold_cases'/>
        <int32_t name='count_cold'/>
        <int32_t name='count_recent'/>
        <int32_t name='cursor_right'/>
        <stl-vector name='convictions' pointer-type='crime'/>
        <pointer name='punishment' type-name='punishment' comment='only initialized when cold_cases=true'/>
        <stl-vector name='convict_choices' pointer-type='unit'/>
        <stl-vector name='interrogate_choices' since='v0.47.01' pointer-type='unit'/>
        <stl-vector name='interrogate_status' since='v0.47.01'>
            <bitfield>
                <flag-bit name='interview_scheduled'/>
                <flag-bit name='already_interviewed'/>
            </bitfield>
        </stl-vector>
    </class-type>

    <enum-type type-name="viewscreen_kitchenpref_page" base-type="int32_t">
        <enum-item name="VegetablesFruitLeaves"/>
        <enum-item name="Seeds"/>
        <enum-item name="Drinks"/>
        <enum-item name="MeatFishOther"/>
    </enum-type>

    <bitfield-type type-name="kitchen_pref_flag" base-type="uint8_t">
        <flag-bit name="Cook"/>
        <flag-bit name="Brew"/>
    </bitfield-type>

    <class-type type-name='viewscreen_kitchenprefst' inherits-from='viewscreen'>
        <int32_t name="cursor"/>
        <enum base-type='int32_t' name='page' type-name='viewscreen_kitchenpref_page'/>

        -- by page:
        <static-array name='item_type' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
        </static-array>
        <static-array name='item_subtype' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector>
                <int16_t refers-to='(item-subtype-target $$._global.item_type[$$._parent.key][$$._key] $)'/>
            </stl-vector>
        </static-array>
        <static-array name='mat_type' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector>
                <int16_t ref-target='material' aux-value='$$._global.mat_index[$$._key][$._key]'/>
            </stl-vector>
        </static-array>
        <static-array name='mat_index' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector type-name='int32_t'/>
        </static-array>
        <static-array name='count' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector type-name='int32_t'/>
        </static-array>
        <static-array name='forbidden' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector type-name='kitchen_pref_flag'/>
        </static-array>
        <static-array name='possible' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector type-name='kitchen_pref_flag'/>
        </static-array>
        <static-array name='item_str' count='4' index-enum='viewscreen_kitchenpref_page'>
            <stl-vector pointer-type='stl-string'/>
        </static-array>
    </class-type>

    <class-type type-name='viewscreen_layer_arena_creaturest' inherits-from='viewscreen_layer'>
        <bool name="in_adding_item"/> if set, the screen will add the item specified below the next tick and unset

        these values are updated by the child viewscreen_selectitemst when it's closed
        <enum name='item_type' base-type='int16_t' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name="mat_index"/>

        <int32_t name="cur_side"/>
        <int32_t name="cur_interaction" refers-to='$global.world.arena_spawn.interactions[$]'/>
        <bool name='tameable'/>
        <stl-string name='filter'/>
        <stl-vector name='race' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='caste' type-name='int16_t' ref-target='caste_raw'/>
    </class-type>

    <struct-type type-name='assign_trade_status' original-name='tradegoodslistst'>
        <pointer name='item' type-name='item'/>
        <int32_t name="distance"/>
        <enum base-type='int8_t' name="status">
            <enum-item name='RemoveTrading' value='-2'/>
            <enum-item name='RemovePending'/>
            <enum-item name='None'/>
            <enum-item name='AddPending'/>
            <enum-item name='Pending'/>
            <enum-item name='Trading'/>
        </enum>
        <bool name='prohibited'/>
        <int32_t name="value"/>
        <int32_t name="weight"/>
    </struct-type>

    <class-type type-name='viewscreen_layer_assigntradest'
                inherits-from='viewscreen_layer'>
        <stl-vector name='info' pointer-type='assign_trade_status'/>
        <pointer name='depot' type-name='building_tradedepotst'/>
        <static-array name='lists' count='65'>
            <stl-vector type-name='int32_t' refers-to='$$._global.info[$]'/>
        </static-array>
        <stl-vector name='visible_lists' type-name='int16_t'/>
        <bool name='sort_distance'/>
        <bool name='pending_on_top'/>
        <bool name='filter_mandates'/>
        <stl-string name='filter' since='v0.34.10'/>
    </class-type>

    <class-type type-name='viewscreen_layer_choose_language_namest' inherits-from='viewscreen_layer'>
        <pointer name='entity' type-name='historical_entity'/>
        <pointer name='name' type-name='language_name'/>
        <enum name='type' type-name='language_name_type' base-type='int32_t'/>
        <int32_t name='selected_place'/>
        <enum name='cur_word_place' type-name='language_word_table_index'/>
        <compound name='dictionary' type-name='language_word_table'/>
        <stl-vector name='list_word' type-name='int32_t' ref-target='language_word'/>
        <stl-vector name='list_part' index-refers-to='$$._parent.list_word[$].ref-target'><enum type-name='part_of_speech' base-type='int32_t'/></stl-vector>
        <stl-string name='cull_str'/>
        <pointer name='naming_pet' type-name='activity_event_conversationst' since='v0.47.02'/>
        <pointer name='named_unit' type-name='unit' since='v0.47.02'/>
    </class-type>

    <class-type type-name='viewscreen_layer_currencyst' inherits-from='viewscreen_layer'>
        <stl-vector name='coin_counts' type-name='int32_t' comment='index refers to metal'/>
        <int32_t name='recommended_quantity'/>
        <stl-vector name='currency_metals' type-name='int16_t' ref-target='inorganic_raw'/>
    </class-type>

    <class-type type-name='viewscreen_layer_export_play_mapst' inherits-from='viewscreen_layer'>
        <stl-vector type-name='int8_t' name='allowed_z'/>
        <stl-vector type-name='int16_t' name='unit_count'/>
        <stl-vector type-name='int16_t' name='bld_count'/>
        <stl-vector type-name='int16_t' name='coord_z'/>
    </class-type>

    <class-type type-name='viewscreen_layer_militaryst' inherits-from='viewscreen_layer'>
        <compound name='squads'>
            <stl-vector name="list" pointer-type='squad'/>
            <stl-vector name="leader_positions" pointer-type='entity_position'/>
            <stl-vector name="leader_assignments" pointer-type='entity_position_assignment'/>
            <stl-bit-vector name='can_appoint'/>
        </compound>

        <compound name='positions'>
            <stl-vector name="assigned" pointer-type='unit'/>
            <stl-vector name='assigned_hf' pointer-type='historical_figure' since='v0.44.01'/>
            <stl-vector name="skill">
                <enum base-type='int16_t' type-name='job_skill'/>
            </stl-vector>
            <stl-vector name="flags" type-name='int32_t'/>
            <stl-vector name="candidates" pointer-type='unit'/>
        </compound>

        <enum name="page">
            <enum-item name='Positions'/>
            <enum-item name='Alerts'/>
            <enum-item name='Equip'/>
            <enum-item name='Uniforms'/>
            <enum-item name='Supplies'/>
            <enum-item name='Ammunition'/>
            <enum-item name='Training'/>
        </enum>

        <int32_t name="num_squads"/>
        <int32_t name="num_soldiers"/>
        <int32_t name="num_active"/>

        <compound name='squad_members'>
            <stl-vector name="profession">
                <enum base-type='int16_t' type-name='profession'/>
            </stl-vector>
            <stl-vector name="count" type-name='int32_t'/>
            <stl-vector name="max_count" type-name='int32_t'/>
        </compound>

        <bool name="in_create_squad"/>
        <bool name="in_new_squad"/>
        <bool name='in_assign_position'/>

        <stl-vector name="captain_positions" pointer-type='entity_position'/>
        <pointer name='new_position' type-name='entity_position'/>

        <bool name="have_squad_appointer"/>
        <bool name='in_rename_squad'/>
        <bool name='in_rename_alert'/>
        <bool name='in_delete_alert'/>

        <stl-vector name="alert_squads" pointer-type='squad'/>

        <compound name='equip'>
            <enum name='mode'>
                <enum-item name='Customize'/>
                <enum-item name='Uniform'/>
                <enum-item name='Priority'/>
            </enum>
            <stl-vector name="squads" pointer-type='squad'/>
            <stl-vector name="units" pointer-type='unit'/>
            <stl-vector name="specific_items" pointer-type='item'/>
            <int32_t name='prio_in_move' refers-to='$$._parent.squads[$]'/>

            <compound name='assigned'>
                <stl-vector name="spec" pointer-type='squad_uniform_spec'/>
                <stl-vector name="category">
                    <enum base-type='int16_t' type-name='uniform_category'/>
                </stl-vector>
                <stl-vector name="index" type-name='int32_t'
                            comment='spec in category vector'/>
            </compound>
            <stl-vector name="assigned_items" pointer-type='item'/>
            <pointer name="edit_spec" type-name='squad_uniform_spec'/>

            <stl-vector name="uniforms" pointer-type='entity_uniform'/>
            <compound name='uniform'>
                <stl-vector name="type">
                    <enum base-type='int16_t' type-name='item_type'/>
                </stl-vector>
                <stl-vector name="subtype">
                    <int16_t refers-to='(item-subtype-target $$._parent._parent.type[$$._key] $)'/>
                </stl-vector>
                <stl-vector name="category">
                    <enum base-type='int16_t' type-name='uniform_category'/>
                </stl-vector>
                <stl-vector name="index" type-name='int16_t'/>
                <stl-vector name="info" pointer-type='entity_uniform_item'/>
            </compound>

            <enum name='edit_mode'>
                <enum-item name='Armor'/>
                <enum-item name='Helm'/>
                <enum-item name='Legs'/>
                <enum-item name='Gloves'/>
                <enum-item name='Boots'/>
                <enum-item name='Shield'/>
                <enum-item name='Weapon'/>
                <enum-item name='Material'/>
                <enum-item name='Color'/>
                <enum-item name='SpecificArmor'/>
                <enum-item name='SpecificHelm'/>
                <enum-item name='SpecificLegs'/>
                <enum-item name='SpecificGloves'/>
                <enum-item name='SpecificBoots'/>
                <enum-item name='SpecificShield'/>
                <enum-item name='SpecificWeapon'/>
            </enum>
            <bool name='adding_new_ammo'/>
            <bool name='adding_new_mat'/>
            <compound name='add_item'>
                <stl-vector name="type">
                    <enum base-type='int16_t' type-name='item_type'/>
                </stl-vector>
                <stl-vector name="subtype">
                    <int16_t refers-to='(item-subtype-target $$._parent._parent.type[$$._key] $)'/>
                </stl-vector>
                <stl-vector name="indiv_choice" type-name='uniform_indiv_choice'/>
                <stl-bit-vector name="foreign"/>
            </compound>
            <compound name='material'>
                <stl-vector name="generic">
                    <enum base-type='int16_t' type-name='entity_material_category'/>
                </stl-vector>
                <compound name='specific' type-name='material_vec_ref'/>
            </compound>
            <compound name='color'>
                <stl-vector name="id" type-name='int32_t' ref-target='descriptor_color'/>
                <stl-bit-vector name='dye'/>
            </compound>
            <bool name='in_name_uniform'/>
        </compound>

        <compound name='ammo'>
            <stl-vector name="squads" pointer-type='squad' comment='null for hunters'/>
            <bool name='in_add_item'/>
            <bool name='in_set_material'/>
            <compound name='add_item'>
                <stl-vector name="type">
                    <enum base-type='int16_t' type-name='item_type'/>
                </stl-vector>
                <stl-vector name="subtype">
                    <int16_t refers-to='(item-subtype-target $$._parent._parent.type[$$._key] $)'/>
                </stl-vector>
                <stl-bit-vector name="foreign"/>
            </compound>
            <compound name='material'>
                <stl-vector name="generic">
                    <enum base-type='int16_t' type-name='entity_material_category'/>
                </stl-vector>
                <compound name='specific' type-name='material_vec_ref'/>
            </compound>
        </compound>

        <stl-vector name="supplies_squads" pointer-type='squad'/>
    </class-type>

    <class-type type-name='viewscreen_layer_musicsoundst' inherits-from='viewscreen_layer'/>

    <struct-type type-name='unit_storage_status' original-name='unitpropertyplacementst'>
        <compound name='floor_pos' type-name='coord'/>
        <compound name='chest_pos' type-name='coord'/>
        <int16_t name='chest_capacity'/>
        <compound name='cabinet_pos' type-name='coord'/>
        <int16_t name='cabinet_capacity' />
        <compound name='weaponrack_pos'  type-name='coord'/>
        <int16_t name='weaponrack_capacity' />
        <static-array name='armorstand_capacity' count='6'> armor, helm, shoes, gloves, pants, shield
            <int8_t/>
        </static-array>
        <static-array name='armorstand_pos' count='6'>
            <compound type-name='coord'/>
        </static-array>
        <int32_t name='num_owned_items'/>
        <int32_t name='num_owned_chests'/>
        <int32_t name='num_owned_cabinets'/>
        <int32_t name='num_owned_weaponracks'/>
        <int32_t name='num_owned_armorstands'/>
    </struct-type>

    <class-type type-name='viewscreen_layer_noblelistst' inherits-from='viewscreen_layer'>
        <enum name='mode' base-type='int16_t'>
            <enum-item name='List'/>
            <enum-item name='Appoint'/>
            <enum-item name='Settings'/>
        </enum>

        <stl-vector name="info">
            <pointer> bay12: noblelistst
                <pointer name="unit" type-name="unit"/>
                <pointer name="nemesis" type-name="nemesis_record"/>
                <pointer name="storage_status" type-name='unit_storage_status'/>
                <pointer name="position" type-name="entity_position"/>
                <pointer name="assignment" type-name="entity_position_assignment"/>
                <int32_t name="group" ref-target='historical_entity'/>
                <int32_t name="precedence"/>
            </pointer>
        </stl-vector>
        <stl-vector name="candidates">
            <pointer> bay12: appointment_candidatest
                <pointer name='unit' type-name='unit'/>
                <int32_t name='weight'/>
            </pointer>
        </stl-vector>
        <stl-vector name="assignments" pointer-type='entity_position_assignment'/>
        <stl-vector name="histfigs" type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name="groups" type-name='int32_t' ref-target='historical_entity'/>
    </class-type>

    <bitfield-type type-name='health_view_bits1'>
        <flag-bit name='bleeding_heavy'/>
        <flag-bit name='bleeding'/>
        <flag-bit name='pale'/>
        <flag-bit name='blood_loss_severe'/>
        <flag-bit name='faint'/>
        <flag-bit name='blood_loss'/>
        <flag-bit name='paralyzed'/>
        <flag-bit name='paralyzed_partially'/>

        <flag-bit name='sluggish'/>
        <flag-bit name='numb_completely'/>
        <flag-bit name='numb_partially'/>
        <flag-bit name='numb_slightly'/>
        <flag-bit name='fever_serious'/>
        <flag-bit name='fever_moderate'/>
        <flag-bit name='fever_slight'/>
        <flag-bit name='pain_extreme'/>

        <flag-bit name='pain_moderate'/>
        <flag-bit name='pain_slight'/>
        <flag-bit name='exhausted'/>
        <flag-bit name='overexerted'/>
        <flag-bit name='tired'/>
        <flag-bit name='stunned'/>
        <flag-bit name='dizzy'/>
        <flag-bit name='drowning'/>

        <flag-bit name='winded'/>
        <flag-bit name='nauseous'/>
        <flag-bit name='drowsy_very'/>
        <flag-bit name='drowsy'/>
        <flag-bit name='dehydrated'/>
        <flag-bit name='thirsty'/>
        <flag-bit name='starving'/>
        <flag-bit name='hungry'/>
    </bitfield-type>

    <bitfield-type type-name='health_view_bits2'>
        <flag-bit name='breathe_cant'/>
        <flag-bit name='breathe_trouble'/>
        <flag-bit name='vision_lost'/>
        <flag-bit name='vision_impaired'/>
        <flag-bit name='vision_impaired2'/>
        <flag-bit name='stand_cant'/>
        <flag-bit name='stand_impaired'/>
        <flag-bit name='grasp_cant'/>

        <flag-bit name='grasp_impaired'/>
        <flag-bit name='fly_cant'/>
        <flag-bit name='fly_impaired'/>
        <flag-bit name='motor_nerve'/>
        <flag-bit name='sensory_nerve'/>
        <flag-bit name='spilled'/>
        <flag-bit name='artery_major'/>
        <flag-bit name='artery'/>

        <flag-bit name='tendon_torn'/>
        <flag-bit name='tendon_strain'/>
        <flag-bit name='tendon_bruise'/>
        <flag-bit name='ligament_torn'/>
        <flag-bit name='ligament_sprain'/>
        <flag-bit name='ligament_bruise'/>
        <flag-bit name='fracture_compound'/>
        <flag-bit name='fracture_overlap'/>

        <flag-bit name='need_setting'/>
        <flag-bit name='tissue_broken'/>
        <flag-bit name='tissue_part_broken'/>
        <flag-bit name='damage_heavy'/>
        <flag-bit name='damage_moderate'/>
        <flag-bit name='damage_light'/>
        <flag-bit name='pain_extreme'/>
        <flag-bit name='pain_moderate'/>
    </bitfield-type>

    <bitfield-type type-name='health_view_bits3'>
        <flag-bit name='pain_minor'/>
        <flag-bit name='swell_extreme'/>
        <flag-bit name='swell_medium'/>
        <flag-bit name='swell_minor'/>
        <flag-bit name='infection'/>

        <flag-bit name='rq_diagnosis'/>
        <flag-bit name='rq_crutch'/>
        <flag-bit name='inoperable_rot'/>
        <flag-bit name='rq_cleaning'/>
        <flag-bit name='rq_surgery'/>
        <flag-bit name='rq_suture'/>
        <flag-bit name='rq_setting'/>
        <flag-bit name='rq_dressing'/>
        <flag-bit name='rq_traction'/>
        <flag-bit name='rq_immobilize'/>
    </bitfield-type>

    <class-type type-name='viewscreen_layer_overall_healthst' inherits-from='viewscreen_layer'>
        <int32_t name='diagnose_skill'/>

        <stl-vector name="unit" pointer-type='unit'/>
        <stl-vector name="bits1" type-name='health_view_bits1'/>
        <stl-vector name="bits2" type-name='health_view_bits2'/>
        <stl-vector name="bits3" type-name='health_view_bits3'/>
        <int32_t name="x_cursor_pos"/>
    </class-type>

    <class-type type-name='viewscreen_layer_reactionst' inherits-from='viewscreen_layer'>
        <pointer name='reaction' type-name='reaction'/>
        <pointer name='building' type-name='building'/>
        <stl-bit-vector name='good_reagent'/>
        <bool name='missing_fuel'/>
    </class-type>

    <class-type type-name='viewscreen_layer_squad_schedulest' inherits-from='viewscreen_layer'>
        <stl-vector name='squad' pointer-type='squad'/>
        <bool name='months_on_top'/>
        <int32_t name='sel_top'/>
        <int32_t name='sel_alert_state'/>
        <bool name='entering_ms_name'/>
        <bool name='entering_order'/>
        <bool name='editing_order'/>
        <pointer name='sel_sqms' type-name='squad_schedule_entry'/>
        <int32_t name='sel_sqms_sqind'/>
        <int32_t name='sel_sqms_month'/>
        <int32_t name='order_type'/>
        <stl-bit-vector name='burrow_selected'/>
        <int32_t name='selected_route'/>
        <int32_t name='min_follow'/>
        <stl-bit-vector name='spec_pos_index'/>
        <int32_t name='selected_point'/>
        <pointer name='copy_from_sqms' type-name='squad_schedule_entry'/>
    </class-type>

    <class-type type-name='viewscreen_layer_stockpilest' inherits-from='viewscreen_layer'>
        <pointer name="settings" type-name='stockpile_settings'/>
        <enum name="cur_group" type-name='stockpile_list' base-type='int32_t'/>
        <enum name="cur_list" type-name='stockpile_list' base-type='int32_t'/>
        <stl-vector name="group_ids">
            <enum type-name='stockpile_list' base-type='int32_t'/>
        </stl-vector>
        <stl-vector name="group_bits">
            <bitfield type-name='stockpile_group_set'/>
        </stl-vector>
        <stl-vector name="list_ids">
            <enum type-name='stockpile_list' base-type='int32_t'/>
        </stl-vector>
        <stl-vector name="item_names" pointer-type='stl-string'/>
        <stl-vector name="item_status" pointer-type='bool'/>
        <stl-string name="title"/>
    </class-type>

    <class-type type-name='viewscreen_layer_stone_restrictionst' inherits-from='viewscreen_layer'>
        <static-array name='stone_type' count='2'>
            <stl-vector type-name='int32_t' ref-target='inorganic_raw'/>
        </static-array>
        <static-array name='stone_economic' count='2'>
            <stl-vector pointer-type='bool'/>
        </static-array>
        <int32_t name='type_tab'/>
        <static-array name='old_selection' type-name='int32_t' count='2'/>
        <stl-vector name='use_name' pointer-type='stl-string'/>
        <stl-vector name='use_id' type-name='int32_t' ref-target='reaction'/>
    </class-type>

    <class-type type-name='viewscreen_layer_unit_actionst' inherits-from='viewscreen_layer'>
        <pointer name='unit' type-name='unit'/>
        <stl-vector name='held_items' pointer-type='item'/>

        <stl-vector name='reactions' pointer-type='reaction'/>
        <stl-vector name='reaction_groups' pointer-type='stl-string'/>
        <stl-string name='group_name'/>
        <stl-vector name='choice_items' pointer-type='item'/>
        <stl-vector name='sel_items' pointer-type='item'/>
        <stl-vector name='sel_reagents' type-name='int32_t' refers-to='$$._global.cur_reaction[$]'/>
        <pointer name='cur_reaction' type-name='reaction'/>
        <int32_t name='reagent' refers-to='$$.cur_reaction.reagents[$]'/>
        <int32_t name='reagent_amnt_left'/>
        <stl-vector name='art_specifiers' pointer-type='adv_art_specifierst'/>
        <int32_t name='art_specifier_index'/>
        <uint32_t name='exit_flag'/>

        <pointer name='butcher_object' type-name='item'/>
        <stl-vector name='butcher_target' pointer-type='item'/>
        <stl-vector name='butcher_cutter' pointer-type='item'/>

        <stl-vector name='body_action' pointer-type='body_actionst'/>
        <stl-vector name='body_action_use_flag' type-name='uint32_t'/>
        <stl-vector name='body_action_interaction' type-name='int32_t' ref-target='interaction'/>

        <stl-vector name='interaction_cdi' pointer-type='creature_interaction_effect_can_do_interactionst'/>
        <stl-vector name='interaction_cdi_use_flag' type-name='uint32_t'/>
        <stl-vector name='interaction_cdi_mat_effect_index' type-name='int32_t'/>

        <stl-vector name='compose_writing_form' type-name='written_content_type'/>
        <stl-vector name='poetic_form' pointer-type='poetic_form'/>
        <stl-vector name='musical_form' pointer-type='musical_form'/>
        <stl-vector name='dance_form' pointer-type='dance_form'/>
        <enum name='selected_writing_form' type-name='written_content_type'/>

        <pointer name='write_object' type-name='item'/>
        <stl-vector name='write_target' pointer-type='item'/>
        <stl-vector name='write_writing_form' type-name='written_content_type'/>
        <stl-vector name='write_wc' pointer-type='written_content'/>
    </class-type>

    <class-type type-name='viewscreen_layer_unit_healthst' inherits-from='viewscreen_layer'>
        <int32_t name='diagnose_skill'/>
        <pointer name='diagnoser' type-name='unit'/>
        <int16_t name='mode'/>
        <stl-string name='title'/>
        <static-array count='4' name='text'><stl-vector pointer-type='stl-string'/></static-array>
        <static-array count='4' name='text_f'><stl-vector type-name='int16_t'/></static-array>
        <static-array count='4' name='text_b'><stl-vector type-name='int16_t'/></static-array>
        <static-array count='4' name='text_br'><stl-vector type-name='int16_t'/></static-array>
        <static-array count='4' name='scroll_set' type-name='int32_t'/>
    </class-type>

    <class-type type-name='viewscreen_layer_unit_relationshipst' inherits-from='viewscreen_layer'>
        <pointer type-name='unit' name='unit'/>
        <stl-vector pointer-type='stl-string' name='relation_textline'/>1st column text (name, prof)
        <stl-vector name='relation_unit_type'><enum type-name='unit_relationship_type' base-type='int16_t'/></stl-vector>
        <stl-vector name='relation_histfig_type'><enum type-name='histfig_relationship_type' base-type='int16_t'/></stl-vector>
        <stl-vector pointer-type='unit' name='relation_unit'/>0 for deity and other non-units
        <stl-vector pointer-type='historical_figure' name='relation_hf'/>
        <stl-vector pointer-type='relationship_profile_hf_visualst' name='relation_hf_visual' since='v0.47.02'/>
        <stl-vector pointer-type='relationship_profile_hf_historicalst' name='relation_hf_historical' since='v0.47.02'/>
        <stl-vector type-name='int32_t' name='level'/>5000 for deity, 330 for friend, 30 for acquaintance
    </class-type>


    <class-type type-name='world_gen_param_basest'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='getString'><pointer type-name='stl-string'/></vmethod>
            <vmethod ret-type='bool' name='canReset'/>
            <vmethod ret-type='bool' name='canAdjust'/>
            <vmethod ret-type='int32_t' name='getMinVal'/>
            <vmethod ret-type='int32_t' name='getMaxVal'/>

            <vmethod name='setFromString'><pointer type-name='stl-string'/></vmethod>
            <vmethod name='setToDefault'/>
            <vmethod name='doDecrement'/>
            <vmethod name='doIncrement'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='world_gen_param_seedst' inherits-from='world_gen_param_basest'>
        <pointer name='value' type-name='stl-string'/>
    </class-type>

    <class-type type-name='world_gen_param_valuest' inherits-from='world_gen_param_basest'>
        <stl-string name='label'/>
        <bool name='canReset'/>
        <stl-vector pointer-type='stl-string' name='preset_labels'/>
    </class-type>

    <class-type type-name='world_gen_param_charst' inherits-from='world_gen_param_valuest'>
        <pointer type-name='int8_t' name='value'/>
        <int8_t name='min_val'/>
        <int8_t name='max_val'/>
        <int8_t name='initial_val'/>
        <stl-vector type-name='int8_t' name='presets'/>
    </class-type>

    <class-type type-name='world_gen_param_memberst' inherits-from='world_gen_param_valuest'>
        <pointer type-name='int32_t' name='value'/>
        <int32_t name='min_val'/>
        <int32_t name='max_val'/>
        <int32_t name='initial_val'/>
        <stl-vector type-name='int32_t' name='presets'/>
    </class-type>

    <class-type type-name='viewscreen_layer_world_gen_paramst' inherits-from='viewscreen_layer'>
        <pointer type-name='worldgen_parms' name='parms'/>
        <stl-string name='name'/>
        <stl-vector name='controls' pointer-type='world_gen_param_basest'/>
        <compound type-name='worldgen_parms_ps' name='ps'/>
    </class-type>

    <class-type type-name='viewscreen_layer_world_gen_param_presetst' inherits-from='viewscreen_layer'>
        <pointer name='parms' type-name='worldgen_parms'/>
        <pointer name='ps' type-name='worldgen_parms_ps'/>
        <stl-string name='value_str'/>
        <static-array type-name='int16_t' count='24' name='brush'/>
        <static-array type-name='bool' count='24' name='active_brush'/>
        <int32_t name='viewing_field'/>
        <compound name='top_left' type-name='coord2d'/>
        <bool name='smoothing_brush'/>
        <int16_t name='brush_radius'/>
    </class-type>

    <class-type type-name='viewscreen_legendsst' inherits-from='viewscreen'>
        <int32_t name='unhid_sum'/>
        <int32_t name='init_stage'/>
        <int32_t name='init_cur_era'/>
        <int32_t name='init_cur_era_num'/>
        <int32_t name='init_cur_era_denom'/>
        <int32_t name='init_sub_stage'/>
        <stl-vector name='histfigs' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='sites' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='artifacts' type-name='int32_t' ref-target='artifact_record'/>
        <stl-vector type-name='int32_t' name='codices'/>
        <stl-vector name='regions' type-name='int32_t' ref-target='world_region'/>
        <stl-vector name='layers' type-name='int32_t' ref-target='world_underground_region'/>
        <stl-vector name='entities' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='structure_sites' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='structures' type-name='int32_t' ref-target='abstract_building'/>
        <stl-vector name='entity_population' type-name='int32_t' ref-target='entity_population'/>
        <stl-vector name='text_box' pointer-type='stl-string'/>
        <stl-vector name='era_eventcol' type-name='int32_t' ref-target='history_event_collection'/>
        <stl-bit-vector name='era_eventcol_end'/>
        <stl-vector name='era_events' type-name='int32_t' ref-target='history_event'/>
        <stl-vector name='era_event_name' pointer-type='stl-string'/>
        <stl-vector name='viewing_eventcol' type-name='int32_t' ref-target='history_event_collection'/>
        <stl-vector name='viewing_eventcol_m_selected' type-name='int32_t'/>
        <stl-string name='mode_header'/>
        <enum name='cur_page' base-type='int32_t' comment='invalid pages fail to render properly but do not crash'>
            0
            <enum-item name='Main'/>
            <enum-item name='HistoricalFigures'/>
            <enum-item name='Sites'/>
            <enum-item name='Artifacts'/>
            <enum-item name='Books'/>
            5
            <enum-item name='Regions'/>
            <enum-item name='Civilizations'/>
            <enum-item name='Art'/>
            <enum-item name='Structures'/>
            <enum-item name='Age'/>
            10
            <enum-item name='HistoricalMaps'/>
            <enum-item name='UndergroundRegions'/>
            <enum-item name='Populations'/>
        </enum>
        <int32_t name='mode_index'/>
        <int32_t name='selected'/>
        <stl-vector type-name='int16_t' name='main_choice'/>
        <stl-vector type-name='int32_t' name='era_choice_index'/>
        <stl-vector type-name='int32_t' name='era_choice_num'/>
        <stl-vector type-name='int32_t' name='era_choice_denom'/>
        <int32_t name='cursor'/>
        <bool name='showing_all_era_collections'/>
        <stl-vector pointer-type='region_snapshotst' name='snapshots'/>
        <int16_t name='width'/>
        <int16_t name='height'/>
        <int16_t name='region_view_mode'/>
        <int16_t name='civ_site_view'/>
        <int16_t name='snapshot_idx'/>
        <stl-string name='search_filter'/>
        <bool name='in_search'/>
        <stl-vector name='matching_histfigs' type-name='int32_t'/>
        <stl-vector name='matching_sites' type-name='int32_t'/>
        <stl-vector name='matching_artifacts' type-name='int32_t'/>
        <stl-vector name='codices_filtered' type-name='int32_t'  comment='index into codices'/>
        <stl-vector name='matching_regions' type-name='int32_t'/>
        <stl-vector name='matching_layers' type-name='int32_t'/>
        <stl-vector name='matching_entity_pops' type-name='int32_t'/>
        <stl-vector name='matching_entities' type-name='int32_t'/>
        <stl-vector name='matching_structures' type-name='int32_t'/>
        <int32_t name='total_codices'/>
        <int32_t name='total_artifacts'/>
    </class-type>

    <struct-type type-name='savegame_headerst'>
        almost the same, but not quite the same, as region_headerst's list
        <int32_t name='max_unit_id'/>
        <int32_t name='max_soul_id'/>
        <int32_t name='max_item_id'/>
        <int32_t name='max_civ_id'/>
        <int32_t name='max_nem_id'/>
        <int32_t name='max_artifact_id'/>
        <int32_t name='max_job_id'/>
        <int32_t name='max_schedule_id'/>
        <int32_t name='max_proj_id'/>
        <int32_t name='max_building_id'/>
        <int32_t name='max_machine_id'/>
        <int32_t name='max_flow_guide_id'/>
        <int32_t name='max_histfig_id'/>
        <int32_t name='max_histevent_id'/>
        <int32_t name='max_histeventcol_id'/>
        <int32_t name='max_unitchunk_id'/>
        <int32_t name='max_art_imagechunk_id'/>
        <int32_t name='max_task_id'/>
        <int32_t name='max_squad_id'/>
        <int32_t name='max_formation_id'/>
        <int32_t name='max_activity_id'/>
        <int32_t name='max_interaction_instance_id'/>
        <int32_t name='max_written_content_id'/>
        <int32_t name='max_identity_id'/>
        <int32_t name='max_incident_id'/>
        <int32_t name='max_crime_id'/>
        <int32_t name='max_vehicle_id'/>
        <int32_t name='max_army_id'/>
        <int32_t name='max_army_controller_id'/>
        <int32_t name='max_army_tracking_info_id'/>
        <int32_t name='max_cultural_identity_id'/>
        <int32_t name='max_agreement_id'/>
        <int32_t name='max_poetic_form_id'/>
        <int32_t name='max_musical_form_id'/>
        <int32_t name='max_dance_form_id'/>
        <int32_t name='max_scale_id'/>
        <int32_t name='max_rhythm_id'/>
        <int32_t name='max_occupation_id'/>
        <int32_t name='max_belief_system_id'/>
        <int32_t name='max_image_set_id'/>
        <int32_t name='max_divination_set_id'/>

        <enum type-name='game_type' name='gametype' base-type='int16_t'/>
        <stl-string name='fort_name'/>
        <stl-string name='world_name'/>
        <int32_t name='year'/>

        <stl-string name='filename_noext'/>
    </struct-type>

    <struct-type type-name='random_object_batchst'>
        <int32_t name='start_inorganic_number'/>
        <int32_t name='end_inorganic_number'/>
        <int32_t name='start_plant_number'/>
        <int32_t name='end_plant_number'/>
        <int32_t name='start_item_number'/>
        <int32_t name='end_item_number'/>
        <int32_t name='start_creature_number'/>
        <int32_t name='end_creature_number'/>
        <int32_t name='start_entity_number'/>
        <int32_t name='end_entity_number'/>
        <int32_t name='start_reaction_number'/>
        <int32_t name='end_reaction_number'/>
        <int32_t name='start_interaction_number'/>
        <int32_t name='end_interaction_number'/>
        <int32_t name='start_language_translation_number'/>
        <int32_t name='end_language_translation_number'/>
    </struct-type>

    <class-type type-name='viewscreen_locationsst' inherits-from='viewscreen'>
        <stl-vector name='locations' pointer-type='abstract_building'/>
        <stl-vector name='dance_floor_x' type-name='int32_t'/>
        <stl-vector name='dance_floor_y' type-name='int32_t'/>
        <stl-vector name='wc_count' type-name='int32_t'/>
        <int32_t name='location_idx'/>

        <stl-vector name='occupations' pointer-type='occupation'/>
        <stl-vector name='civs' pointer-type='historical_entity' since='v0.47.02'/>
        <stl-vector name='positions' pointer-type='entity_position' since='v0.47.02'/>
        <stl-vector name='pos_assignments' pointer-type='entity_position_assignment' since='v0.47.02'/>
        <int32_t name='occupation_idx'/>

        <stl-vector name='units' pointer-type='unit'/>
        <int32_t name='unit_idx' comment='uninitialized'/>
        <enum base-type='int32_t' name='in_edit'>
            <enum-item name='None'/>
            <enum-item name='Goblets'/>
            <enum-item name='Instruments'/>
            <enum-item name='WritingCopies'/>
            <enum-item name='WritingMaterial'/>
        </enum>
        <stl-string name='edit_input'/>
        <enum base-type='int32_t' name='menu'>
            <enum-item name='Locations'/>
            <enum-item name='Occupations'/>
            <enum-item name='AssignOccupation'/>
        </enum>
    </class-type>

    <struct-type type-name='region_object_datast'>
        <stl-vector name='unk_0'>
            <pointer>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
                <int32_t name='unk_3'/>
                <int32_t name='unk_4'/>
                <int32_t name='unk_5'/>
                <int32_t name='unk_6'/>
                <int32_t name='unk_7'/>
                <int32_t name='unk_8'/>
                <int32_t name='unk_9'/>
                <int32_t name='unk_10'/>
                <int32_t name='unk_11'/>
                <int32_t name='unk_12'/>
                <int32_t name='unk_13'/>
                <int32_t name='unk_14'/>
                <int32_t name='unk_15'/>
                <int32_t name='unk_16'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_inorganics'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_plants'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_items'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_creatures'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_entities'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_reactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_interactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_languages'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='inorganics' pointer-type='stl-string'/>
        <stl-vector name='plants' pointer-type='stl-string'/>
        <stl-vector name='bodies' pointer-type='stl-string'/>
        <stl-vector name='bodyglosses' pointer-type='stl-string'/>
        <stl-vector name='creatures' pointer-type='stl-string'/>
        <stl-vector name='items' pointer-type='stl-string'/>
        <stl-vector name='buildings' pointer-type='stl-string'/>
        <stl-vector name='entities' pointer-type='stl-string'/>
        <stl-vector name='words' pointer-type='stl-string'/>
        <stl-vector name='symbols' pointer-type='stl-string'/>
        <stl-vector name='translations' pointer-type='stl-string'/>
        <stl-vector name='colors' pointer-type='stl-string'/>
        <stl-vector name='shapes' pointer-type='stl-string'/>
        <stl-vector name='patterns' pointer-type='stl-string'/>
        <stl-vector name='reactions' pointer-type='stl-string'/>
        <stl-vector name='material_templates' pointer-type='stl-string'/>
        <stl-vector name='tissue_templates' pointer-type='stl-string'/>
        <stl-vector name='body_detail_plans' pointer-type='stl-string'/>
        <stl-vector name='creature_variations' pointer-type='stl-string'/>
        <stl-vector name='interactions' pointer-type='stl-string'/>
    </struct-type>

    <class-type type-name='viewscreen_loadgamest' inherits-from='viewscreen'>
        <enum name='cur_step' comment='After the on-screen text shown while loading.'>
            <enum-item name='OpeningFile'/>
            <enum-item name='ProcessingRawData'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='LoadingItems'/>
            <enum-item name='LoadingUnits'/>
            <enum-item name='LoadingJobs'/>
            <enum-item name='LoadingSchedules'/>
            <enum-item name='LoadingProjectiles'/>
            <enum-item name='LoadingBuildings'/>
            <enum-item name='LoadingMachines'/>
            <enum-item name='LoadingFlowGuides'/>
            <enum-item name='LoadingEffects'/>
            <enum-item name='LoadingEntities'/>
            <enum-item name='LoadingLocalAnimalPopulations'/>
            <enum-item name='LoadingEvents'/>
            <enum-item name='LoadingMandates'/>
            <enum-item name='LoadingWorkQuotas'/>
            <enum-item name='LoadingWorldEvents'/>
            <enum-item name='LoadingCoinInformation'/>
            <enum-item name='LoadingSquads'/>
            <enum-item name='LoadingFormations'/>
            <enum-item name='LoadingActivities'/>
            <enum-item name='LoadingInteractions'/>
            <enum-item name='LoadingWrittenContent'/>
            <enum-item name='LoadingIdentities'/>
            <enum-item name='LoadingIncidents'/>
            <enum-item name='LoadingCrimes'/>
            <enum-item name='LoadingVehicles'/>
            <enum-item name='LoadingArmies'/>
            <enum-item name='LoadingArmyControllers'/>
            <enum-item name='LoadingTrackingInformation'/>
            <enum-item name='LoadingCulturalIdentities'/>
            <enum-item name='LoadingAgreements'/>
            <enum-item name='LoadingArtForms'/>
            <enum-item name='LoadingOccupations'/>
            <enum-item name='LoadingBeliefSystems'/>
            <enum-item name='LoadingImageSets'/>
            <enum-item name='LoadingDivinationSets'/>
            <enum-item name='LoadingAnnouncements'/>
            <enum-item name='LoadingFortressInformation'/>
            <enum-item name='LoadingWorldInformation'/>
            <enum-item name='LoadingArtifacts'/>
            <enum-item name='LoadingActiveHistoricalFigures'/>
            <enum-item name='LoadingAdventure'/>
            <enum-item name='LoadingGeneralInformation'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='RebuildingTemporaryInformation'/>
            <enum-item name='RebuildingMoreTemporaryInformation'/>
            <enum-item name='PreparingGameScreen'/>
            <enum-item name='HandlingCompatibilityIssues'/>
            <enum-item name='Finishing'/>
        </enum>
        <int32_t name='progress' since='v0.40.01'/>
        <int8_t name='loading'/>
        <int32_t name='sel_idx'/>
        <stl-vector name='saves' pointer-type='savegame_headerst'/>
        <compound type-name='file_compressorst' name='compressor'/>
        <compound type-name='region_object_datast' name='glosses'/>
        <int32_t name='save_version'/>
        <compound name='cur_save' type-name='savegame_headerst'/>
    </class-type>

    <class-type type-name='viewscreen_meetingst' inherits-from='viewscreen'>
        <pointer type-name='dipscript_popup' name='dipscript_popup'/>
        <pointer type-name='activity_info' name='activity'/>
        <pointer type-name='unit' name='holder'/>
    </class-type>

    <class-type type-name='viewscreen_movieplayerst' inherits-from='viewscreen'>
        <int8_t name='saving'/>
        <int8_t name='loading'/>
        <int8_t name='editing'/>
        <int8_t name='text_mode'/>
        <uint8_t name='editing_char'/>
        <int32_t name='editing_copy_from'/>
        <int16_t name='editing_screenf'/>
        <int16_t name='editing_screenb'/>
        <int16_t name='editing_screenbright'/>
        <int32_t name='editing_selected_sound'/>
        <int8_t name='editing_menu'/>
        <stl-string name='savename'/>
        <stl-string name='force_file'/>
        <int8_t name='is_playing'/>
        <int8_t name='is_forced_play'/>
        <int8_t name='quit_if_no_play'/>
        <int32_t name='maxmoviepos'/>
        <int32_t name='end_frame_pos'/>
        <int32_t name='selfile'/>
        <stl-vector name='filelist' pointer-type='static-string'/>
    </class-type>

    <struct-type type-name='worldgen_parms' original-name='world_gen_paramst'>
        <stl-string name='title'/>
        <stl-string name='seed' since='v0.34.01'/>
        <stl-string name='history_seed' since='v0.34.01'/>
        <stl-string name='name_seed' since='v0.34.01'/>
        <stl-string name='creature_seed' since='v0.34.01'/>
        <int32_t name='dim_x'/>
        <int32_t name='dim_y'/>
        <stl-string name='custom_name'/>
        <bool name='has_seed'/>
        <bool name='has_history_seed'/>
        <bool name='has_name_seed'/>
        <bool name='has_creature_seed'/>
        <int32_t name='embark_points'/>
        <int32_t name='peak_number_min'/>
        <int32_t name='partial_ocean_edge_min'/>
        <int32_t name='complete_ocean_edge_min'/>
        <int32_t name='volcano_min'/>
        <static-array name='region_counts' count='3'>
            <static-array type-name='int32_t' count='10' index-enum='world_region_type'/>
        </static-array>
        <static-array type-name='int32_t' name='river_mins' count='2'/>
        <int32_t name='subregion_max'/>
        <int32_t name='cavern_layer_count'/>
        <int32_t name='cavern_layer_openness_min'/>
        <int32_t name='cavern_layer_openness_max'/>
        <int32_t name='cavern_layer_passage_density_min'/>
        <int32_t name='cavern_layer_passage_density_max'/>
        <int32_t name='cavern_layer_water_min'/>
        <int32_t name='cavern_layer_water_max'/>
        <bool name='have_bottom_layer_1'/>
        <bool name='have_bottom_layer_2'/>
        <int32_t name='levels_above_ground'/>
        <int32_t name='levels_above_layer_1'/>
        <int32_t name='levels_above_layer_2'/>
        <int32_t name='levels_above_layer_3'/>
        <int32_t name='levels_above_layer_4'/>
        <int32_t name='levels_above_layer_5'/>
        <int32_t name='levels_at_bottom'/>
        <int32_t name='cave_min_size'/>
        <int32_t name='cave_max_size'/>
        <int32_t name='mountain_cave_min'/>
        <int32_t name='non_mountain_cave_min'/>
        <int32_t name='total_civ_number'/>
        <int32_t name='rain_ranges_1'/>
        <int32_t name='rain_ranges_0'/>
        <int32_t name='rain_ranges_2'/>
        <int32_t name='drainage_ranges_1'/>
        <int32_t name='drainage_ranges_0'/>
        <int32_t name='drainage_ranges_2'/>
        <int32_t name='savagery_ranges_1'/>
        <int32_t name='savagery_ranges_0'/>
        <int32_t name='savagery_ranges_2'/>
        <int32_t name='volcanism_ranges_1'/>
        <int32_t name='volcanism_ranges_0'/>
        <int32_t name='volcanism_ranges_2'/>
        <static-array count='4' name='ranges'>
            <static-array type-name='int32_t' count='24' index-enum='worldgen_range_type'/>
        </static-array>
        <int32_t name='beast_end_year'/>
        <int32_t name='end_year'/>
        <int32_t name='beast_end_year_percent'/>
        <int32_t name='total_civ_population'/>
        <int32_t name='site_cap'/>
        <int32_t name='elevation_ranges_1'/>
        <int32_t name='elevation_ranges_0'/>
        <int32_t name='elevation_ranges_2'/>
        <int32_t name='mineral_scarcity'/>
        <int32_t name='megabeast_cap'/>
        <int32_t name='semimegabeast_cap'/>
        <int32_t name='titan_number'/>
        <static-array type-name='int32_t' name='titan_attack_trigger' count='3'/>
        <int32_t name='demon_number'/>
        <int32_t name='night_troll_number'/>
        <int32_t name='bogeyman_number'/>
        <int32_t name='nightmare_number' since='v0.47.01'/>
        <int32_t name='vampire_number'/>
        <int32_t name='werebeast_number'/>
        <static-array type-name='int32_t' name='werebeast_attack_trigger' count='3' since='v0.47.01'/>
        <int32_t name='secret_number'/>
        <int32_t name='regional_interaction_number'/>
        <int32_t name='disturbance_interaction_number'/>
        <int32_t name='evil_cloud_number'/>
        <int32_t name='evil_rain_number'/>
        <int8_t name='generate_divine_materials' since='v0.40.01'/>
        <int8_t name='allow_divination' since='v0.47.01'/>
        <int8_t name='allow_demonic_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_lieutenants' since='v0.47.01'/>
        <int8_t name='allow_necromancer_ghouls' since='v0.47.01'/>
        <int8_t name='allow_necromancer_summons' since='v0.47.01'/>
        <int32_t name='good_sq_counts_0'/>
        <int32_t name='evil_sq_counts_0'/>
        <int32_t name='good_sq_counts_1'/>
        <int32_t name='evil_sq_counts_1'/>
        <int32_t name='good_sq_counts_2'/>
        <int32_t name='evil_sq_counts_2'/>
        <static-array type-name='int32_t' name='elevation_frequency' count='6'/>
        <static-array type-name='int32_t' name='rain_frequency' count='6'/>
        <static-array type-name='int32_t' name='drainage_frequency' count='6'/>
        <static-array type-name='int32_t' name='savagery_frequency' count='6'/>
        <static-array type-name='int32_t' name='temperature_frequency' count='6'/>
        <static-array type-name='int32_t' name='volcanism_frequency' count='6'/>
        <pointer type-name='worldgen_parms_ps' name='ps'/>
        <int32_t name='reveal_all_history'/>
        <int32_t name='cull_historical_figures'/>
        <int32_t name='erosion_cycle_count'/>
        <int32_t name='periodically_erode_extremes'/>
        <int32_t name='orographic_precipitation'/>
        <int32_t name='playable_civilization_required'/>
        <int32_t name='all_caves_visible'/>
        <int32_t name='show_embark_tunnel'/>
        <int32_t name='pole'/>
        <bool name='immune_to_resize'/>
    </struct-type>

    <struct-type type-name='worldgen_parms_ps' original-name='world_gen_param_presetst'>
        <int32_t name='width'/>
        <int32_t name='height'/>
        <static-array count='24' name='data' index-enum='worldgen_range_type'>
            <pointer is-array='true'><pointer is-array='true' type-name='int16_t'/></pointer>
        </static-array>
    </struct-type>

    <class-type type-name='viewscreen_new_regionst' inherits-from='viewscreen'>
        <stl-vector name='worldgen_presets' pointer-type='worldgen_parms'/>

        advanced settings
        <bool name='start_in_advanced_mode'/>
        <bool name='in_worldgen'/>
        <int32_t name='cursor_paramset'/>
        <stl-string name='random_seed'/>
        <bool name='editing_randseed'/>
        <bool name='editing_customname'/>
        <bool name='editing_title'/>
        <bool name='popup_deleteset'/>
        <bool name='popup_changedimensions'/>
        <bool name='unk_11'/>
        <uint16_t name='custom_size_x'/>
        <uint16_t name='custom_size_y'/>
        <bool name='popup_abort'/>
        <bool name='popup_goon'/>
        <bool name='unsaved_changes'/>
        <bool name='simple_mode' comment='0=advanced params, 1=create new world'/>
        <bool name='unk_20'/>
        <bool name='unk_21'/>

        create new world
        <int32_t name='cursor_line'/>

        <int32_t name='world_size'/>
        <int32_t name='history'/>
        <int32_t name='number_civs'/>
        <int32_t name='number_sites'/>
        <int32_t name='number_beasts'/>
        <int32_t name='savagery'/>
        <int32_t name='mineral_occurence'/>

        <bool name='worldgen_paused'/>
        <bool name='worldgen_rejected'/>
        <stl-vector name='rejection_msg' pointer-type='stl-string' comment='rejection popup'/>
        <stl-vector name='welcome_msg' pointer-type='stl-string' comment='fullscreen popup'/>

        -- v0.40.01
        <stl-string name="raw_folder"/>
        <bool name="load_world_params"/> if set, the screen will "load the world params" the next tick and unset
        <int32_t name='load_progress' comment='0..20'/>
        <enum base-type='int32_t' name='load_state'>
            <enum-item name='Initializing'/>
            <enum-item name='LoadingObjectFiles'/>
            <enum-item name='FinalizingLanguages'/>
            <enum-item name='FinalizingDescriptors'/>
            <enum-item name='FinalizingMaterialTemplates'/>
            <enum-item name='FinalizingInorganics'/>
            <enum-item name='FinalizingPlants'/>
            <enum-item name='FinalizingTissueTemplates'/>
            <enum-item name='FinalizingItems'/>
            <enum-item name='FinalizingBuildings'/>
            <enum-item name='FinalizingBodyDetailPlans'/>
            <enum-item name='FinalizingCreatureVariations'/>
            <enum-item name='FinalizingCreatures'/>
            <enum-item name='FinalizingEntities'/>
            <enum-item name='FinalizingReactions'/>
            <enum-item name='FinalizingInteractions'/>
            <enum-item name='PreparingMaterialData'/>
            <enum-item name='PreparingTextObjects'/>
            <enum-item name='PreparingGraphics'/>
            <enum-item name='Finalizing'/>
        </enum>
    </class-type>

    <class-type type-name='viewscreen_noblest' inherits-from='viewscreen'>
        <int32_t name='become_capital_offerings'/>
    </class-type>

    <class-type type-name='viewscreen_optionst' inherits-from='viewscreen'>
        <int8_t name='msg_quit'/>
        <int8_t name='in_retire_adv'/>
        <int8_t name='msg_peasant'/>
        <int8_t name='in_retire_dwf_abandon_adv' comment='1 when retiring a fortress or abandoning an adventurer'/>
        <int8_t name='in_abandon_dwf'/>
        <int8_t name='ending_game'/>
        <int32_t name='sel_idx'/>
        <stl-vector name='options'>
            <enum base-type='int32_t' name='options'>
                <enum-item name='Return'/>
                <enum-item name='Save'/>
                <enum-item name='KeyBindings'/>
                <enum-item name='ExportImage'/>
                <enum-item name='MusicSound'/>
                <enum-item name='AbortRetire'/>
                <enum-item name='Abandon'/>
            </enum>
        </stl-vector>
    </class-type>

    <class-type type-name='viewscreen_overallstatusst' inherits-from='viewscreen'>
        <stl-vector name="visible_pages">
            <enum name='page' base-type='int16_t'>
                <enum-item name='Animals'/>
                <enum-item name='Kitchen'/>
                <enum-item name='Stone'/>
                <enum-item name='Stocks'/>
                <enum-item name='Health'/>
                <enum-item name='Prices'/>
                <enum-item name='Currency'/>
                <enum-item name='Justice'/>
            </enum>
        </stl-vector>
        <int32_t name="page_cursor"/>
    </class-type>

    <class-type type-name='viewscreen_petitionsst' inherits-from='viewscreen'>
        <int8_t name='can_manage'/>
        <stl-vector name='list' pointer-type='agreement'/>
        <int32_t name='cursor'/>
    </class-type>

    <class-type type-name='viewscreen_petst' inherits-from='viewscreen'>
        <int32_t name="cursor"/>

        <stl-vector name="animal">
            <compound is-union='true'>
                <pointer name='unit' type-name='unit'/>
                <pointer name='item' type-name='item_critter'/>
            </compound>
        </stl-vector>
        <stl-vector name="is_vermin" type-name='bool'/>
        <stl-vector name="is_tame" type-name='bool'/>
        <stl-vector name="is_adopting" type-name='bool'/>

        <enum name='mode'>
            <enum-item name='List'/>
            <enum-item name='TrainingKnowledge'/>
            <enum-item name='SelectTrainer'/>
        </enum>

        <int32_t name='knowledge_page'/>
        <stl-vector name="known" type-name='int32_t' ref-target='creature_raw'/>

        <int32_t name='trainer_cursor'/>
        <stl-vector name="trainer_unit" pointer-type='unit'/>
        <stl-vector name="trainer_mode">
            <enum base-type='int32_t'>
                <enum-item name='Any'/>
                <enum-item name='AnyUnassigned'/>
                <enum-item name='None'/>
                <enum-item name='Unit'/>
            </enum>
        </stl-vector>
    </class-type>

    <class-type type-name='viewscreen_pricest' inherits-from='viewscreen'>
        <int16_t name='category_idx'/>
        <int32_t name='item_idx'/>
    </class-type>

    <class-type type-name='viewscreen_reportlistst' inherits-from='viewscreen'>
        <stl-vector name='units' pointer-type='unit'/>
        <stl-vector name='types'><enum base-type='int16_t' type-name='unit_report_type'/></stl-vector>
        <stl-vector name='last_id' type-name='int32_t' ref-target='report'/>
        <stl-vector name='mission_reports' type-name='int32_t' ref-target='mission_report'/>
        <stl-vector name='spoils_reports' type-name='int32_t' ref-target='spoils_report'/>
        <stl-vector name='interrogation_reports' type-name='int32_t' ref-target='interrogation_report' since='v0.47.02'/>
        <int32_t name='cursor'/>

        <pointer name='mission_report' type-name='mission_report'/>
        <int32_t name='map_cursor_x'/>
        <int32_t name='map_cursor_y'/>
        <int32_t name='mission_path_finished'/>
        <int32_t name='mission_path_progress'/>
        <int32_t name='mission_text_finished'/>
        <int32_t name='mission_text_progress'/>
        <stl-vector name='mission_report_text' pointer-type='stl-string'/>
        <stl-vector name='mission_report_colors' type-name='int32_t'/>
        <int32_t name='mission_year'/>
        <int32_t name='mission_year_tick'/>
        <int32_t name='mission_path_speed'/> how fast the travel animation is
        <bool name='mission_report_paused'/>
        <int32_t name='mission_report_fade'/> counts down each frame, text fully visible when = 1
        <int32_t name='mission_report_fade_line'/> fade in effect is applied to this line till the end
        <int32_t name='mission_report_scroll'/>

        <pointer name='spoils_report' type-name='spoils_report'/>
        <int32_t name='spoils_report_scroll'/>

        <pointer name='interrogation_report' type-name='interrogation_report' since='v0.47.02'/>
        <stl-vector name='interrogation_report' pointer-type='curses_text_boxst' since='v0.47.02'/>
        <int32_t name='interrogation_report_scroll' since='v0.47.02'/>
    </class-type>

    <class-type type-name='viewscreen_requestagreementst' inherits-from='viewscreen'>
        <pointer type-name='entity_buy_prices' name='requests'/>
        <int32_t ref-target='historical_entity' name='civ_id'/>
        <int32_t name='cursor'/>
        <static-string size='256' name='title'/>
        <pointer type-name='historical_entity' name='civ'/>
    </class-type>

    <struct-type type-name='nemesis_offload' original-name='offload_unit_infost'>
        <stl-vector name='nemesis_save_file_id' type-name='int32_t'/>
        <stl-vector name='nemesis_member_idx' type-name='int16_t'/>
        <stl-vector name='units' pointer-type='unit'/>

        <pointer type-name='unit_chunk' name='cur_unit_chunk'/>
        <int32_t name='cur_unit_chunk_num' init-value='-1'/>
        <int32_t name='units_offloaded' init-value='-1'/>
    </struct-type>

    <class-type type-name='viewscreen_savegamest' inherits-from='viewscreen'>
        <stl-string name='filename'/>
        <enum name='cur_step' base-type='int32_t'>
            <enum-item name='Initializing'/>
            <enum-item name='CheckingDirectoryStructure'/>
            <enum-item name='PreliminaryCleaning'/>
            <enum-item name='OffloadingUnits'/>
            <enum-item name='OffloadingArt'/>
            <enum-item name='OpeningFile'/>
            <enum-item name='CharacterizingRawData'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='SavingItems'/>
            <enum-item name='SavingUnits'/>
            <enum-item name='SavingJobs'/>
            <enum-item name='SavingSchedules'/>
            <enum-item name='SavingProjectiles'/>
            <enum-item name='SavingBuildings'/>
            <enum-item name='SavingMachines'/>
            <enum-item name='SavingFlowGuides'/>
            <enum-item name='SavingEffects'/>
            <enum-item name='SavingEntities'/>
            <enum-item name='SavingLocalAnimalPopulations'/>
            <enum-item name='SavingEvents'/>
            <enum-item name='SavingMandates'/>
            <enum-item name='SavingWorkQuotas'/>
            <enum-item name='SavingWorldEvents'/>
            <enum-item name='SavingCoinInformation'/>
            <enum-item name='SavingSquads'/>
            <enum-item name='SavingFormations'/>
            <enum-item name='SavingActivities'/>
            <enum-item name='SavingInteractions'/>
            <enum-item name='SavingWrittenContent'/>
            <enum-item name='SavingIdentities'/>
            <enum-item name='SavingIncidents'/>
            <enum-item name='SavingCrimes'/>
            <enum-item name='SavingVehicles'/>
            <enum-item name='SavingArmies'/>
            <enum-item name='SavingArmyControllers'/>
            <enum-item name='SavingTrackingInformation'/>
            <enum-item name='SavingCulturalIdentities'/>
            <enum-item name='SavingAgreement'/>
            <enum-item name='SavingArtForms'/>
            <enum-item name='SavingOccupations'/>
            <enum-item name='SavingBeliefSystems'/>
            <enum-item name='SavingImageSets'/>
            <enum-item name='SavingDivinationSets'/>
            <enum-item name='SavingAnnouncements'/>
            <enum-item name='SavingFortressInformation'/>
            <enum-item name='SavingWorldInformation'/>
            <enum-item name='SavingArtifacts'/>
            <enum-item name='SavingActiveHistoricalFigures'/>
            <enum-item name='SavingAdventureData'/>
            <enum-item name='SavingGeneralInformation'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='Finishing'/>
        </enum>
        <int32_t name='progress' since='v0.40.01'/>
        <compound type-name='nemesis_offload' name='offload'/>
        <compound type-name='file_compressorst' name='compressor'/>
    </class-type>

    <class-type type-name='viewscreen_selectitemst' inherits-from='viewscreen'>
        <pointer name='p_item_type' type-name='int16_t'/>
        <pointer name='p_item_subtype' type-name='int16_t'/>
        <pointer name='p_mattype' type-name='int16_t'/>
        <pointer name='p_matindex' type-name='int32_t'/>
        <pointer name='choice' type-name='embark_item_choice'/>
        <pointer name='screen' type-name='viewscreen_setupdwarfgamest'/>
        <pointer name='sheet' type-name='setup_character_info' since='v0.47.02'/>
        <static-array name='page_base' count='107' index-enum='entity_sell_category'>
            <stl-vector type-name='int32_t'/>
        </static-array>
        <static-string name='title' size='256'/>
        <static-string name='unk_2' size='256'/>
        <static-string name='filter' size='256'/>
        <int32_t name='right_pos'/>
        <int32_t name='right_page_base'/>
        <bool name='right_list'/>
        <int32_t name='sel_category' refers-to='$$._parent.categories[$]'/>
        <stl-vector name='categories'>
            <enum base-type='int16_t' type-name='entity_sell_category'/>
        </stl-vector>
    </class-type>

    <enum-type type-name='adventurer_attribute_level' base-type='int32_t'>
        <enum-item name='VeryLow'/>
        <enum-item name='Low'/>
        <enum-item name='BelowAverage'/>
        <enum-item name='Average'/>
        <enum-item name='AboveAverage'/>
        <enum-item name='High'/>
        <enum-item name='Superior'/>
    </enum-type>

    <struct-type type-name='setup_character_info' original-name='startup_charactersheetst'>
        <compound type-name='language_name' name='name'/>
        <int16_t name='race' ref-target='creature_raw'/>
        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <static-array name='skills' count='147' index-enum='job_skill'>
            <enum type-name='skill_rating'/>
        </static-array>
        <int32_t name='entity' ref-target='historical_entity'/>
        <int32_t name='entity_pop' ref-target='entity_population'/>
        <int32_t name='breed' ref-target='breed'/>
        <int32_t name='cultural_identity' ref-target='cultural_identity'/>
        <int32_t name='nemesis' ref-target='nemesis_record'/>
        <enum name='start_mil_type' type-name='profession' base-type='int32_t'/>
        <enum name='start_civ_type' type-name='profession' base-type='int32_t'/>
        <int16_t name='skill_points_remaining'/>

        <static-array count='6' name='physical_levels' index-enum='physical_attribute_type'>
            <enum type-name='adventurer_attribute_level'/>
        </static-array>
        <static-array count='13' name='mental_levels' index-enum='mental_attribute_type'>
            <enum type-name='adventurer_attribute_level'/>
        </static-array>

        <enum base-type='int16_t' name='status'>
            <enum-item name='Peasant'/>
            <enum-item name='Hero'/>
            <enum-item name='Demigod'/>
        </enum>

        <int32_t name='home_site_id' ref-target='world_site' since='v0.47.01'/>
        <int32_t name='start_squad_position_assign' since='v0.47.01'/>
        <enum name='civilian_occupation' type-name='profession' since='v0.47.01'/>
        <static-array name='civilian_skill' type-name='int32_t' count='147' index-enum='job_skill' since='v0.47.01'/>

        <int32_t name='worship_hf' ref-target='historical_figure'/>
        <int32_t name='worship_civ' ref-target='historical_entity' since='v0.40.01'/>
        <int32_t name='belief_strength' since='v0.40.01'/>

        <compound name='physical_form' type-name='unit_appearance'/>

        <int32_t name='birth_year'/>
        <int32_t name='birth_season_tick'/>
        <int32_t name='age_death_year'/>
        <int32_t name='age_death_season_tick'/>

        <compound name='personality' type-name='unit_personality'/>
        <bool name='is_from_wilderpop_or_feature'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: STARTUP_CHARACTERSHEET_FLAG_*
            <flag-bit name='receivingitem'/>
        </bitfield>
        <enum base-type='int32_t' name='page' type-name='setup_adventure_type'/>
        <static-array name='visited_mode' type-name='bool' count='12' index-enum='setup_adventure_type'/>
        <bool name='selecting_attributes'/>
        <int32_t name='attribute_idx'/>
        <int32_t name='attribute_points_remaining'/>
        <stl-vector name='skill_list'>
            <enum base-type='int16_t' type-name='job_skill'/>
        </stl-vector>
        <int32_t name='selected_skill'/>
        <int32_t name='skill_points'/>
        <bool name='entering_name'/>
        <stl-string name='saved_first_name'/> first name is saved here and restored if editing cancelled
        <compound name='description_lines' type-name='curses_text_boxst'/>
        <stl-vector name='goodsite' pointer-type='world_site'/>
        <int32_t name='active_column'/>
        <stl-vector type-name='int32_t' name='background_option'/>
        <stl-vector type-name='int32_t' name='background_option_squad_epp_id'/>
        <stl-vector type-name='profession' name='background_option_unit'/>
        <stl-vector type-name='religious_practice_type' name='religious_practice_option'/>
        <stl-vector type-name='religious_practice_data' name='religious_practice_id'/>
        <stl-vector type-name='int32_t' name='pos_caste'/>
        <int32_t name='site_selector'/>
        <int32_t name='background_selector'/>
        <int32_t name='religion_selector'/>
        <compound name='home_description_lines' type-name='curses_text_boxst'/>
        <compound name='appearance_text' type-name='curses_text_boxst'/>
        <bool name='appearance_offscreen_randomized'/>
        <bool name='appearance_was_fully_randomized'/>
        <int32_t name='pers_scroll_y'/>
        <compound name='personal_values_text' type-name='curses_text_boxst'/>
        <compound name='personality_text' type-name='curses_text_boxst'/>
        <compound name='civ_values_text' type-name='curses_text_boxst'/>
        <bool name='doing_specific_personality'/>
        <int32_t name='selected_specific_pers_item'/>
        <static-array name='min_pers' type-name='int16_t' count='50' index-enum='personality_facet_type'/>
        <static-array name='max_pers' type-name='int16_t' count='50' index-enum='personality_facet_type'/>
        <static-array name='civ_value_level' type-name='int32_t' count='33' index-enum='value_type'/>
        <int32_t name='equip_points_remaining'/>
        <stl-vector name='s_item' pointer-type='item_actual'/>
        <int32_t name='selected_item'/>
        <compound name='available_embark_items' type-name='embark_item_choice'/>
        <enum name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype'/>
        <int16_t name='item_material'/>
        <int32_t name='item_matgloss'/>
        <compound name='item_desc' type-name='curses_text_boxst'/>
        <int32_t name='selected_pet_l'/>
        <int32_t name='selected_pet_r'/>
        <int32_t name='pet_side'/>
        <stl-vector name='pet'>
            <pointer> bay12: startup_charactersheet_petst
                <compound name='name' type-name='language_name'/>
                <int32_t name='race'/>
                <int16_t name='caste'/>
                <int16_t name='type'/>
            </pointer>
        </stl-vector>
    </struct-type>

    <enum-type type-name='setup_adventure_type' base-type='int32_t'>
        <enum-item name='ChooseRace'/>
        <enum-item name='ChooseAnimalRace'/>
        <enum-item name='ChooseHistfig'/>
        <enum-item name='ChooseCiv'/>
        <enum-item name='SubMode'/>
        5
        <enum-item name='Skills'/> sub
        <enum-item name='Appearance'/> sub
        <enum-item name='Personality'/> sub
        <enum-item name='Background'/> sub
        <enum-item name='Equipment'/> sub
        <enum-item name='MountsAndPets'/> sub
        <enum-item name='FinalConfirm'/>
    </enum-type>

    <class-type type-name='viewscreen_setupadventurest' inherits-from='viewscreen'>
        <enum name='page' type-name='setup_adventure_type'/>
        <stl-vector name='races_info' since='v0.42.01'>
            <pointer>
                <int32_t name='race' ref-target='creature_raw'/>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='tier_count'/>
                <int32_t name='playable'/>
            </pointer>
        </stl-vector>

        <enum base-type='int32_t' name='status'>
            <enum-item name='Peasant'/>
            <enum-item name='Hero'/>
            <enum-item name='Demigod'/>
        </enum>
        <int32_t name='race' ref-target='creature_raw' since='v0.47.01'/>
        <int8_t name='chosen_from_wilderpop_or_feature' since='v0.47.01'/>

        <stl-vector name='race_ids' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='highlighted_entity_ids' type-name='int32_t' ref-target='historical_entity'/>
        <int32_t name='race_idx'/>

        <stl-vector name='wild_creature_ids' type-name='int32_t' ref-target='creature_raw'/>
        <int32_t name='wild_creature_idx'/>
        <stl-vector name='nemesis_ids' type-name='int32_t' ref-target='nemesis_record' refers-to='$global.world.nemesis.all[$]'/>
        <int32_t name='nemesis_idx'/>
        <stl-vector name='home_entity_ids' type-name='int32_t' ref-target='historical_entity'/>
        <int32_t name='home_entity_idx'/>

        <stl-vector name='party_members' pointer-type='setup_character_info' since='v0.47.01'/>
        <int32_t name='selected_member' since='v0.47.01'/>

        <stl-vector type-name='int32_t' name='start_site_ids' since='v0.47.01'/>
        <int32_t name='selected_start_site' since='v0.47.01'/>?

        <stl-vector name='final_party_members' pointer-type='setup_character_info' since='v0.47.01'/>
        <int32_t name='final_start_site_id' since='v0.47.01'/>?
    </class-type>

    <struct-type type-name='embark_item_choice' original-name='entity_trade_listst'>
        <static-array name='list' count='107' index-enum='entity_sell_category'>
            <stl-vector>
                <pointer>
                    <enum base-type='int16_t' name='item_type' type-name='item_type'/>
                    <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
                    <int16_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
                    <int32_t name='matindex'/>
                    <int8_t name="unk_c" comment='1 if new, -1 if added'/>
                </pointer>
            </stl-vector>
        </static-array>
        <stl-vector name='race' type-name='int32_t' ref-target='creature_raw'
                    index-refers-to='$$._parent.caste[$].ref-target'/>
        <stl-vector name='caste' type-name='int16_t'
                    ref-target='caste_raw' aux-value='$$._parent.race[$._key]'/>
        <stl-vector name='profession' index-refers-to='$$._parent.caste[$].ref-target'>
            <enum base-type='int16_t' type-name='profession'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='embark_profile' original-name='embark_profilest'>
        <stl-string name='name'/>
        <stl-vector name='skill_type' type-name='int16_t'/>
        <stl-vector name='skill_dwarf_idx' type-name='int16_t'/>
        <stl-vector name='skill_level' type-name='int16_t'/>

        <stl-vector name='reclaim_dwarf_idx' type-name='int16_t'/>
        <stl-vector name='reclaim_prof1' type-name='profession'/>
        <stl-vector name='reclaim_prof2' type-name='profession'/>

        <stl-vector name='item_type' type-name='item_type'/>
        <stl-vector name='item_subtype' type-name='int16_t'/>
        <stl-vector name='mat_type' type-name='int16_t'/>
        <stl-vector name='mat_index' type-name='int32_t'/>
        <stl-vector name='item_count' type-name='int32_t'/>

        <stl-vector name='pet_race' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='pet_caste' type-name='int16_t' ref-target='caste_raw'/>
        <stl-vector name='pet_profession' type-name='profession'/>
        <stl-vector name='pet_count' type-name='int32_t'/>
    </struct-type>

    <class-type type-name='viewscreen_setupdwarfgamest' inherits-from='viewscreen'>
        <static-string size='256' name='title'/>
        <stl-vector name='dwarf_info' pointer-type='setup_character_info'/>
        <stl-vector name='embark_skills' type-name='job_skill'/>
        <stl-vector name='reclaim_professions' type-name='profession'/>
        <enum base-type='int32_t' name='mode'>
            <enum-item name='Dwarves'/>
            <enum-item name='Items'/>
        </enum>
        <int32_t name='dwarf_cursor'/>
        <int32_t name='dwarf_page_idx'/>
        <int32_t name='item_cursor'/>
        <int32_t name='skill_cursor' refers-to='$$._parent.embark_skills[$]'/>
        <int32_t name='animal_cursor'/>
        <int32_t name='dwarf_column'/>
        <int32_t name='supply_column'/>
        <int32_t name='display_row'/>
        <int8_t name='show_play_now'/>
        <int8_t name='embark_prompt'/>
        <stl-vector name='choice_types'>
            <enum base-type='int8_t' name='choice_types'>
                <enum-item name='PlayNow'/>
                <enum-item name='Prepare'/>
                <enum-item name='Profile'/>
            </enum>
        </stl-vector>
        <stl-vector name='choices' pointer-type='embark_profile'/>
        <int32_t name='choice'/>
        <stl-string name='profile_name'/>
        <stl-vector name='problems' pointer-type='stl-string'/>
        <int32_t name='unk_1'/>
        <int8_t name='in_problems'/>
        <int8_t name='in_save_profile'/>
        <int8_t name='profile_name_conflict'/>
        <compound name='item_choice' type-name='embark_item_choice'/>
        <stl-vector name='animal_counts' type-name='int16_t'
                    index-refers-to='$$._parent.caste[$].ref-target'/>
        <compound name='fort_name' type-name='language_name'/>
        <compound name='group_name' type-name='language_name'/>
        <int8_t name='unk_2'/>

        <compound name='symbol' type-name='art_image'/>
        <compound name='location' type-name='embark_location'/>
        <stl-vector name='units' pointer-type='unit'/>
        <stl-vector name='items' pointer-type='item'/>
        <int32_t name='wagon_num'/>
        <int32_t name='points_remaining'/>

        -- Set by viewscreen_selectitemst via pointers:
        <enum base-type='int16_t' name='add_item_type' type-name='item_type'/>
        <int16_t name='add_item_subtype' refers-to='(item-subtype-target $$._parent.add_item_type $)'/>
        <int16_t name='add_mattype' ref-target='material' aux-value='$$.add_matindex'/>
        <int32_t name='add_matindex'/>
        <int32_t name='adding_item'/>
    </class-type>

    <class-type type-name='viewscreen_storesst' inherits-from='viewscreen'>
        <static-string name='title' size='256'/>
        <int32_t name="category_cursor"/>
        <int32_t name="item_cursor"/>
        <int16_t name='in_right_list'/>
        <int16_t name='in_group_mode'/>
        <stl-vector name="category_total" type-name='int32_t' index-enum='item_type'/>
        <stl-vector name="category_busy" type-name='int32_t' index-enum='item_type'/>
        <compound name='i_list' type-name='itemlistst'/>
        <compound name='a_list' type-name='abstractitemlistst'/>
        <stl-vector name="category_order">
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <bool name="can_zoom"/>
    </class-type>

    <class-type type-name='viewscreen_textviewerst' inherits-from='viewscreen'>
        <stl-string name="title"/>
        <stl-string name="title_colors"/>   same length as title, changes fg/bg
        <stl-vector name='src_text' pointer-type='stl-string'/>
        <stl-string name='outvar_type'/>
        <stl-string name='outvar_name'/>
        <compound name='meeting_context' type-name='script_environmentst'/>
        <stl-string name='help_filename' comment='relative to data/help'/>
        <stl-string name='page_filename' comment='relative to root'/>
        <stl-vector name='formatted_text'>
            <pointer>
                <ptr-string name="text"/>   NULL for empty lines
                <ptr-string name="format"/>
                <bitfield base-type='uint16_t' name='flags'>
                    <flag-bit name='hyperlink'/>
                    <flag-bit name='no_newline'/>
                </bitfield>
                <int32_t name='pause_depth'/>
                <int32_t name='return_val' init-value='-1'/>
                <int32_t name='indent'/>
            </pointer>
        </stl-vector>
        <stl-vector name="hyperlinks" pointer-type="static-string" comment="link targets, same length as text_display"/>
        <int8_t name='logged_error'/>
        <int32_t name="scroll_pos" comment="vertical scrollbar position"/>
        <int32_t name="cursor_line" comment="on hyperlink lines"/>
        <int32_t name='pause_depth'/>
    </class-type>

    <class-type type-name='viewscreen_titlest' inherits-from='viewscreen'>
        <static-string name='str_histories' size='256'/>
        <static-string name='menu_items' size='256'/>
        <enum base-type='int16_t' name="sel_subpage">
            <enum-item name='None'/>
            <enum-item name='StartSelectWorld'/>
            <enum-item name='StartSelectMode'/> adventurer/fortmode/legends
            <enum-item name='Arena'/>
            <enum-item name='About'/>
        </enum>
        <int32_t name="sel_menu_line"/>
        <int32_t name="sel_submenu_line"/>
        <int8_t name="loading"/>
        <stl-vector name="menu_line_id">
            <enum base-type="int32_t" name="menu_line_id">
                <enum-item name="Continue"/>
                <enum-item name="Start"/>
                <enum-item name="NewWorld"/>
                <enum-item name="AdvancedWorld"/>
                <enum-item name="TestingArena"/>
                <enum-item name="AboutDF"/>
                <enum-item name="Quit"/>
            </enum>
        </stl-vector>
        <stl-vector type-name="int32_t" name="submenu_line_id"/>
        <stl-vector pointer-type="stl-string" name="gametype_str"/>
        <stl-vector pointer-type="region_headerst" name="start_savegames"/>
        <stl-vector pointer-type="savegame_headerst" name="continue_savegames"/>
        <stl-vector pointer-type='stl-string' name='unk_1' since='v0.47.01'/>
        <stl-vector pointer-type='stl-string' name='unk_2' since='v0.47.01'/>
        <stl-string name="str_slaves"/>
        <stl-string name="str_chapter"/>
        <stl-string name="str_copyright"/>
        <stl-string name="str_version"/>
        <stl-string name="str_warning"/>
        <stl-string name="str_programmed"/>
        <stl-string name="str_designed"/>
        <stl-string name="str_visit"/>
        <stl-string name="str_site"/>
        -- v0.40.01
        <stl-string name="arena_raw_folder"/>
        <int32_t name="unk_388" comment='unset until loading arena'/>
        <int8_t name="unk_38c"/>
        <int32_t name="unk_390" comment='unset until loading arena'/>
        <int8_t name="unk_394"/>
        <int32_t name="unk_398" comment='unset'/>
        <int8_t name="unk_39c"/>
        <int32_t name="unk_3a0" comment='unset'/>
    </class-type>

    <class-type type-name='viewscreen_topicmeetingst' inherits-from='viewscreen'>
        <pointer name='popup' type-name='dipscript_popup'/>
        <pointer name='meeting' type-name='meeting_diplomat_info'/>
        <pointer name='parley' type-name='unit_parley'/>
        <stl-vector name='text' pointer-type='stl-string'/>
    </class-type>

    <class-type type-name='viewscreen_topicmeeting_fill_land_holder_positionsst' inherits-from='viewscreen'>
        <static-string size='256' name='title'/>
        <pointer name='popup' type-name='dipscript_popup'/>
        <pointer name='meeting' type-name='meeting_diplomat_info'/>
        <pointer name='entity_diplomat' type-name='historical_entity'/>
        <pointer name='entity_fortress' type-name='historical_entity'/>
        <stl-vector name="position_ids" type-name='int32_t' ref-target='entity_position_raw'/>
        <stl-vector name="selected_histfig_ids" type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name="candidate_histfig_ids" type-name='int32_t' ref-target='historical_figure'/>
        <int32_t name='position_cursor'/>
        <int32_t name='cursor'/>
    </class-type>

    <class-type type-name='viewscreen_topicmeeting_takerequestsst' inherits-from='viewscreen'>
        <static-string size='256' name='title'/>
        <pointer name='popup' type-name='dipscript_popup'/>
        <pointer name='meeting' type-name='meeting_diplomat_info'/>
        <stl-vector name='visible_categories'><enum type-name='entity_sell_category' base-type='int16_t'/></stl-vector>
        <int32_t name='type_idx'/>
        <int32_t name='good_idx'/>
    </class-type>

    <class-type type-name='viewscreen_tradeagreementst' inherits-from='viewscreen'>
        <pointer type-name='entity_sell_prices' name='requests'/>
        <int32_t ref-target='historical_entity' name='civ_id'/>
        <stl-vector name='visible_categories'><enum type-name='entity_sell_category' base-type='int16_t'/></stl-vector>
        <int32_t name='type_idx'/>
        <int32_t name='good_idx'/>
        <static-string size='256' name='title'/>
        <pointer type-name='historical_entity' name='civ'/>
    </class-type>

    <class-type type-name='viewscreen_tradegoodsst' inherits-from='viewscreen'>
        <static-string name='title' size='256'/>
        <stl-string name="merchant_name"/>
        <stl-string name="merchant_entity"/>
        <pointer name="depot" type-name="building_tradedepotst"/>
        <pointer name="caravan" type-name="caravan_state"/>
        <pointer name="entity" type-name="historical_entity"/>
        <bool name='is_unloading'/>
        <bool name='has_traders'/>
        <static-array name='units' count='2'><pointer type-name='unit'/></static-array>
        <static-array name='items' count='2'><stl-vector pointer-type='item'/></static-array>
        <static-array name='selected' count='2'><stl-vector type-name='uint8_t'/></static-array>
        <static-array name='count' count='2'><stl-vector type-name='int32_t'/></static-array>
        <static-array name='cursor' count='2' type-name='int32_t'/>
        <bool name="in_right_pane"/>
        <enum name='trade_reply' base-type='int16_t'>
          <enum-item name='Welcome' value='0'/>
          <enum-item name='RefusedLossTooHeavy'/>
          <enum-item name='RefusedTooHeavy'/>
          <enum-item name='RefusedLoss'/>
          <enum-item name='TradeAccepted'/>
          <enum-item name='OfferAccepted'/>
          <enum-item name='Seizure'/>
          <enum-item name='HalfEmptyTraderAlt'/>
          <enum-item name='SeizureEmpty'/>
          <enum-item name='EmptyTrade'/>
          <enum-item name='HalfEmptyBroker'/>
          <enum-item name='HalfEmptyTrader'/>
          <enum-item name='OffendedBoth'/>
          <enum-item name='OffendedAnimal'/>
          <enum-item name='OffendedPlant'/>
          <enum-item name='Result15'/>
          <enum-item name='Result16'/>
          <enum-item name='Result17'/>
          <enum-item name='Counteroffer'/>
          <enum-item name='NoCounteroffer'/>
          <enum-item name='WelcomeAnnoyed'/>
          <enum-item name='RefusedAnnoyed'/>
        </enum>
        <int8_t name='buildlists'/>
        <int8_t name='handle_appraisal'/>
        <int32_t name='counteroffer_scroll'/>
        <int8_t name="has_offer"/>
        <stl-vector name="counteroffer_item" pointer-type='item'/>
        <int8_t name="in_edit_count"/>
        <stl-string name="edit_count"/>
        <stl-vector name='unk_3' pointer-type="stl-string"/>
        <int32_t name='unk_4'/>
    </class-type>

    <class-type type-name='viewscreen_tradelistst' inherits-from='viewscreen'>
        <int32_t name="cursor"/>
        <pointer name="depot" type-name="building_tradedepotst"/>
        <stl-vector name="caravans" pointer-type='caravan_state'/>
    </class-type>

    <class-type type-name='viewscreen_treasurelistst' inherits-from='viewscreen'> list artifacts in fort mode
        <int32_t name="sel_idx"/> screen selection, in items.other[ANY_ARTIFACT]
    </class-type>

    <class-type type-name='viewscreen_unitst' inherits-from='viewscreen'>
        <pointer name="unit" type-name="unit"/>
        <pointer name='noble_assignments'><stl-vector pointer-type='entity_position_assignment'/></pointer>
        <pointer name='noble_histfigs'><stl-vector type-name='int32_t' ref-target='historical_figure'/></pointer>
        <pointer name='noble_groups'><stl-vector type-name='int32_t' ref-target='historical_entity'/></pointer>
        <bool name='has_kills'/>
    </class-type>

    <enum-type type-name='viewscreen_unitlist_page' base-type='int32_t'>
        <enum-item name='Citizens'/>
        <enum-item name='Livestock'/>
        <enum-item name='Others'/>
        <enum-item name='Dead'/>
    </enum-type>

    <class-type type-name='viewscreen_unitlistst' inherits-from='viewscreen'>
        <bool name="allow_zoom"/>
        <enum base-type='int32_t' name='page' type-name='viewscreen_unitlist_page'/>
        <static-array name='cursor_pos' count='4' index-enum='viewscreen_unitlist_page'>
            <int32_t refers-to='$$._global.units[$$._key][$]'/>
        </static-array>
        <static-array name='jobs' count='4' index-enum='viewscreen_unitlist_page'>
            <stl-vector pointer-type='job'/>
        </static-array>
        <static-array name='units' count='4' index-enum='viewscreen_unitlist_page'>
            <stl-vector pointer-type='unit'/>
        </static-array>
    </class-type>

    <class-type type-name='viewscreen_wagesst' inherits-from='viewscreen'>
        <int16_t name='profession_category'/>
    </class-type>

    <class-type type-name='viewscreen_workquota_conditionst' inherits-from='viewscreen'>
        <pointer name='order' type-name='manager_order'/>
        <int32_t name='cond_idx'/>
        <stl-bit-vector name='satisfied_items'/>
        <stl-bit-vector name='satisfied_orders'/>
        <stl-string name='filter'/>
        <stl-vector name='list_entries' pointer-type='stl-string'/>
        <int32_t name='list_idx'/>
        <enum name='mode' base-type='int32_t'>
            <enum-item name='List' value='-1'/>
            <enum-item name='ItemType'/>
            <enum-item name='Material'/>
            <enum-item name='Traits'/>
        </enum>
        <stl-vector name='item_types' type-name='item_type'/>
        <stl-vector name='item_subtypes' type-name='int16_t'/>
        <stl-vector name='item_types_visible' type-name='item_type'/>
        <stl-vector name='item_subtypes_visible' type-name='int16_t'/>
        <stl-vector name='mat_types' type-name='int16_t'/>
        <stl-vector name='mat_indices' type-name='int32_t'/>
        <stl-vector name='mat_states' type-name='matter_state'/>
        <stl-vector name='list_visible' type-name='int16_t'/>
        <stl-vector name='traits'>
            <pointer> bay12: wqc_item_traitst
                <uint32_t name='flags' comment='job_item_flagsN'/>
                <int32_t name='flag_num' comment='the N for above'/>
                <stl-string name='item_desc' comment='e.g. FAT'/>
                <stl-string name='product_desc' comment='e.g. BAG_ITEM (-producing)'/>
                <int32_t name='metal_ore'/>
                <int32_t name='contains_reaction_index'/>
                <int32_t name='contains_reaction_product'/>
                <enum name='tool_use' type-name='tool_uses'/>
                <stl-string name='name'/>
            </pointer>
        </stl-vector>
        <stl-vector name='traits_visible' type-name='int32_t'/>
        <bool name='selecting_condition'/>
        <stl-vector name='condition_order' pointer-type='manager_order'/>
        <int32_t name='selected_condition_order'/>
        <bool name='item_count_edit'/>
        <stl-string name='item_count_entry'/>
    </class-type>

    <class-type type-name='viewscreen_workquota_detailsst' inherits-from='viewscreen'>
        <pointer name='order' type-name='manager_order'/>
    </class-type>

    <class-type type-name='viewscreen_workshop_profilest' inherits-from='viewscreen'>
        <int32_t name='building_id' ref-target='building'/>
        <pointer name='profile' type-name='workshop_profile'/>
        <enum name='tab' base-type='int32_t'>
            <enum-item name='Workers'/>
            <enum-item name='Orders'/>
            <enum-item name='Restrictions'/>
        </enum>
        <stl-vector name='workers' pointer-type='unit'/>
        <int32_t name='worker_idx'/>
        <stl-vector name='orders' pointer-type='manager_order'/>
        <int32_t name='order_idx'/>
        <stl-vector name='labors' type-name='unit_labor'/>
        <int32_t name='labor_idx'/>
    </class-type>

    <class-type type-name='viewscreen_update_regionst' inherits-from='viewscreen'>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
    </class-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
