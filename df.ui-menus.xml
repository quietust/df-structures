<data-definition>
    -- BUILDING COMPONENT ITEM SELECTION

    <struct-type type-name='ui_build_item_req' original-name='build_req_stagest'>
        <comment>
            When creating a building, one record per required item type.
            E.g. Soap Maker's workshop requires a bucket and a building material.
        </comment>

        <compound name='filter' type-name='job_item_filter'/>

        <stl-vector name='candidates' pointer-type='item'/>
        <stl-vector name='candidate_selected' type-name='bool'/>
        <stl-vector name='level_map' type-name='int16_t' comment='map_block.walkable'/>
        <stl-vector name='candidate_enabled' type-name='bool'/>

        <int16_t name="count_required"/>
        <int16_t name="count_max" comment='if 0, fixed at required'/>
        <int16_t name="count_provided"/>
    </struct-type>

    <enum-type type-name='build_req_choice_type'> bay12: BuildReqChoice
        <enum-item name='General'/>
        <enum-item name='Specific'/>
    </enum-type>

    <class-type type-name='build_req_choicest'>
        <comment>One choice in the build item selector.</comment>
        <int32_t name="distance"/>

        <virtual-methods>
            <vmethod ret-type='build_req_choice_type' name='getType'/>
            <vmethod name='getName'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod ret-type='int32_t' name='select'/>
            <vmethod ret-type='bool' name='isCandidate'>
                <int32_t name='item_id'/>
            </vmethod>
            <vmethod ret-type='bool' name='deselect'/>
            <vmethod ret-type='int32_t' name='getUsedCount'/>
            <vmethod ret-type='int32_t' name='getNumCandidates'/>
            <vmethod name='view_item'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='build_req_choice_genst' inherits-from='build_req_choicest'>
        <enum name="item_type" type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>

        <stl-vector name="candidates">
            <int32_t>
                <code-helper name='refers-to'>
                    (let* ((selector $global.buildreq)
                           (req $selector.requirements[$selector.req_index]))
                      $req.candidates[$])
                </code-helper>
            </int32_t>
        </stl-vector>

        <int32_t name="used_count"/>
    </class-type>

    <class-type type-name='build_req_choice_specst' inherits-from='build_req_choicest'>
        <pointer name='candidate' type-name='item'/>
        <int32_t name='candidate_id'>
            <code-helper name='refers-to'>
                (let* ((selector $global.buildreq)
                       (req $selector.requirements[$selector.req_index]))
                  $req.candidates[$])
            </code-helper>
        </int32_t>
    </class-type>

    <enum-type type-name='build_square_type'> bay12: BuildSquare
        <enum-item name='FINE'/>
        <enum-item name='FINE_BLOCKED'/>
        <enum-item name='FINE_WATER'/>
        <enum-item name='FINE_MAGMA'/>
        <enum-item name='SKIP'/>
        <enum-item name='BAD_ANCHOR'/>
        <enum-item name='BLOCKED'/>
        <enum-item name='HIDDEN'/>
        <enum-item name='NEED_WALL'/>
        <enum-item name='OFF_MAP'/>
        <enum-item name='WATER'/>
        <enum-item name='MAGMA'/>
        <enum-item name='BUILDING_PRESENT'/>
        <enum-item name='OUTSIDE'/>
        <enum-item name='CLOSE_TO_EDGE'/>
        <enum-item name='INSIDE'/>
        <enum-item name='NEED_OPEN_AIR'/>
        <enum-item name='SURROUNDED_BY_AIR'/>
        <enum-item name='TOO_HIGH'/>
        <enum-item name='CONSTRUCTION_PRESENT'/>
        <enum-item name='NEEDS_SOIL_OR_MUD'/>
        <enum-item name='NEED_SOIL'/>
    </enum-type>

    <struct-type type-name='buildreq' original-name='buildreqst'>
        <stl-vector name='requirements' pointer-type='ui_build_item_req'/>

        <stl-vector name='choices' pointer-type='build_req_choicest'/>

        <enum base-type='int32_t' name="building_type" type-name='building_type' comment='if -1, in Build menu; otherwise select item'/> Toady used the actual enum rather than the matching typedef
        <int16_t name="building_subtype"/>
        <int32_t name="custom_type" ref-target='building_def'/>

        <enum name="stage"> bay12: BuildReqMode
            <enum-item name='INITIAL_FAILURE'/>
            <enum-item name='PLACING'/>
            <enum-item name='STAGES'/>
        </enum>

        <int16_t name="req_index"/>
        <int16_t name="sel_index"/>

        <bool name="general_choices"/>

        <stl-vector name='errors' pointer-type='stl-string'/>
        <stl-vector name='warnings' pointer-type='stl-string'/>

        <static-array name='tiles' count='31'>
            <static-array type-name='build_square_type' count='31'/>
        </static-array>

        <int16_t name='cur_walk_tag'/>

        <compound name='plate_info' type-name='pressure_plate_info'/>

        <stl-vector name='min_weight_races' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='max_weight_races' type-name='int16_t' ref-target='creature_raw'/>
    </struct-type>

    -- MISC. SIDEBAR MENUS

    <enum-type type-name='interface_category_building'> bay12: InterfaceCategoryBuilding
        <enum-item name='NONE' value='-1'/>
        <enum-item name='WEAPON'/>
        <enum-item name='ARMOR'/>
        <enum-item name='FURNITURE'/>
        <enum-item name='SIEGE'/>
        <enum-item name='TRAP'/>
        <enum-item name='OTHER'/>
        <enum-item name='METAL'/>
        <enum-item name='SELECT_MEMORIAL_UNIT'/>
    </enum-type>

    <enum-type type-name='interface_category_construction'> bay12: InterfaceCategoryConstruction
        <enum-item name='MAIN'/>
        <enum-item name='SIEGEENGINE'/>
        <enum-item name='TRAP'/>
        <enum-item name='WORKSHOP'/>
        <enum-item name='FURNACE'/>
        <enum-item name='CONSTRUCTION'/>
        <enum-item name='MACHINE'/>
    </enum-type>

    <class-type type-name='interface_button' original-name='interface_buttonst'>
        <enum name='hotkey' type-name='interface_key'/>
        <bool name="is_hidden"/>

        <virtual-methods>
            <vmethod name='getLabel'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod name='click'/>
            <vmethod name='setColor'>
                <bool name='selected'/>
            </vmethod>
            <vmethod name='makeHidden'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='interface_button_buildingst'
                inherits-from='interface_button'>
        <pointer name='bd' type-name='building'/>
    </class-type>

    <class-type type-name='interface_button_building_category_selectorst'
                inherits-from='interface_button_buildingst'>
        <enum type-name='interface_category_building' name='category'/>
        <int8_t name="prepare_interface"/>
    </class-type>

    <class-type type-name='interface_button_building_material_selectorst'
                inherits-from='interface_button_buildingst'>
        <int16_t name='material' ref-target='material' aux-value='$$.matgloss'/>
        <int32_t name='matgloss'/>
        <bitfield name='job_item_flag' type-name='job_material_category'/>
        <int8_t name="prepare_interface"/>
    </class-type>

    <class-type type-name='interface_button_building_new_jobst'
                inherits-from='interface_button_buildingst'>
        <enum name='job_type' type-name='job_type' base-type='int32_t'/>
        <stl-string name='reaction_name'/>
        <enum name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <int32_t name='specflag'/>
        <int32_t name='specdata' init-value='-1'/>
        <bitfield name='job_item_flag' type-name='job_material_category'/>
        <bool name='add_building_location'/>
        <bool name='show_help_instead'/>
    </class-type>

    <class-type type-name='interface_button_constructionst'
                inherits-from='interface_button'>
        <pointer name='unused_c'/>
    </class-type>

    <class-type type-name='interface_button_construction_donest'
                inherits-from='interface_button_constructionst'/>

    <class-type type-name='interface_button_construction_category_selectorst'
                inherits-from='interface_button_constructionst'>
        <int32_t name="category_id"/>
    </class-type>

    <class-type type-name='interface_button_construction_building_selectorst'
                inherits-from='interface_button_constructionst'>
        <int16_t name="building_type"/>
        <int16_t name="building_subtype"/>
        <int32_t name="custom_type" ref-target='building_def'/>

        <int32_t name="existing_count"/>
    </class-type>

    <class-type type-name='interface_button_buttonst'
                inherits-from='interface_button'>
        <bool/>
    </class-type>

    <class-type type-name='interface_button_button_designate_selectst'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_donest'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_open_bitem_designationst'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_open_traffic_designationst'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_light_up_selectorst'
                inherits-from='interface_button_buttonst'>
        <stl-string name='description'/>
        <pointer name='ui_sidebar_mode' type-name='int16_t'/>
        <enum base-type='int16_t' name='new_sidebar_mode' type-name='ui_sidebar_mode'/>
    </class-type>

    <enum-type type-name='minimap_tile'>
        <enum-item name='BUILTUP3'/>
        <enum-item name='BUILTUP2'/>
        <enum-item name='BUILTUP1'/>
        <enum-item name='WALL4'/>
        <enum-item name='WALL3'/>
        <enum-item name='WALL2'/>
        <enum-item name='WALL1'/>
        <enum-item name='WATER'/>
        <enum-item name='LAVA'/>
        <enum-item name='TREES'/>
        <enum-item name='SHRUB'/>
        <enum-item name='PLAIN'/>
        <enum-item name='ICE'/>
        <enum-item name='SKY'/>
        <enum-item name='SUB_CLEAR'/>
    </enum-type>

    <struct-type type-name='gamest'>
        dtor 0x8535ee0

        <compound name='workshop_job'>
            <stl-vector name='choices_all' pointer-type='interface_button_buildingst'/>
            <stl-vector name='choices_visible' pointer-type='interface_button_buildingst'/>

            <int32_t name="cursor"/>
            <int32_t name="category_id" comment='weapons, armor, etc'/>

            <int16_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
            <int32_t name="mat_index"/>
            <compound name='material_category' type-name='job_material_category'/>
        </compound>

        <compound name='building'>
            <stl-vector name='choices_all' pointer-type='interface_button_constructionst'/>
            <stl-vector name='choices_visible' pointer-type='interface_button_constructionst'/>

            <int32_t name="category_id"/>
            <int32_t name="cursor"/>
        </compound>

        <compound name='designation'>
            <stl-vector name='choices' pointer-type='interface_button_buttonst'/>
            <int32_t name='page'/>
            <bool/>
        </compound>

        <compound name='zone'>
            <bool name='remove'/>
            <enum name='mode' base-type='int16_t'>
                <enum-item name='Rectangle'/>
                <enum-item name='Flow'/>
                <enum-item name='FloorFlow'/>
            </enum>
            <pointer name='selected' type-name='building_civzonest'/>
        </compound>

        <compound name='unit'>
            <stl-vector name='inv_items' pointer-type='unit_inventory_item'/>
            <stl-vector name='inv_spatters' pointer-type='unit_spatter'/>
        </compound>

        <compound name='hospital'>
            <int32_t name='cur_scroll'/>
            <int32_t name='bed_count'/>
            <int32_t name='table_count'/>
            <int32_t name='traction_bench_count'/>
            <int32_t name='box_count'/>
        </compound>

        <stl-vector name='viewunit_list' type-name='int32_t' refers-to='$global.world.units.active[$]'/>

        <bool name='exporting_local'/>
        <bool name='mouse_zone'/>

        <stl-vector name='skill_id' type-name='int32_t' refers-to='$global.ui_selected_unit.index.refers-to.status.current_soul.skills[$]'/>

        <bool name="show_combat"/>
        <bool name="show_labor"/>
        <bool name="show_misc"/>

        <int32_t name="barracks_squad_cursor"/>

        <stl-vector name='barracks_squads' pointer-type='squad'/>
        <stl-vector name='barracks_squad_uses'>
            <bitfield type-name='squad_use_flags'/>
        </stl-vector>

        <bool name="in_rename"/>
        <bool name="in_positions"/>
        <pointer name="position_squad" type-name='squad'/>
        <int32_t name="position_cursor"/>

        <bool name="in_position_squads"/>
        <stl-vector name='position_squads' pointer-type='squad'/>
        <int32_t name="position_squad_cursor"/>

        <compound name='minimap'> bay12: minimapst
            -- Abstract representation of contents; updated by need_scan
            <static-array name='minimap' count='23'>
                <static-array count='23' type-name='minimap_tile'/> bay12: minimap_squarest
            </static-array>

            <int8_t name='update'/>
            <int8_t name='mustmake'/>
            <int16_t name='printed_z'/>

            -- Cached actual tiles from the screen; updated by need_render
            <static-array name='buffer_symbol' count='23'>
                <static-array count='23' type-name='uint8_t'/>
            </static-array>
            <static-array name='buffer_f' count='23'>
                <static-array count='23' type-name='int16_t'/>
            </static-array>
            <static-array name='buffer_b' count='23'>
                <static-array count='23' type-name='int16_t'/>
            </static-array>
            <static-array name='buffer_br' count='23'>
                <static-array count='23' type-name='int16_t'/>
            </static-array>
        </compound>

        <compound name='command_line'> bay12: command_linest
            <stl-string name='original'/>
            <stl-vector name='arg_vect' pointer-type='stl-string'/>

            <int32_t name='gen_id'/>
            <int32_t name='world_seed'/>
            <int8_t name='use_seed'/>

            <stl-string name='world_param'/>
            <int8_t name='use_param'/>
        </compound>

        <int32_t name='num_speech_tokens'/>
        <bool name='hide_worldgen_warning'/>
    </struct-type>

    <struct-type type-name='lookinfost'>
        <enum base-type='int16_t' name='type'>
            <enum-item name='Item'/>
            <enum-item name='Floor'/>
            <enum-item name='Unit'/>
            <enum-item name='Building'/>
            <enum-item name='Vermin'/>
            <enum-item name='Flow'/>
            <enum-item name='Campfire'/>
            <enum-item name='Spatter'/>
            <enum-item name='BuildingItem'/>
            <enum-item name='Fire'/>
            <enum-item name='Water'/>
            <enum-item name='Magma'/>
        </enum>
        <int16_t name='spatter_mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='spatter_mat_index'/>
        <enum name='spatter_mat_state' type-name='matter_state'/>
        <compound is-union='true'>
            <pointer name='item' type-name='item'/>
            <pointer name='unit' type-name='unit'/>
            <pointer name='building' type-name='building'/>
            <pointer name='vermin' type-name='vermin'/>
            <pointer name='flow' type-name='flow_info'/>
            <pointer name='campfire' type-name='campfire'/>
            <int8_t name='depth' comment='for water and spatters'/>
        </compound>
    </struct-type>

    <enum-type type-name='ui_unit_view_mode' base-type='int32_t'> bay12: UnitViewModes, no base type
        <enum-item name='General'/>
        <enum-item name='Inventory'/>
        <enum-item name='Preferences'/>
        <enum-item name='Wounds'/>
        <enum-item name='PrefLabor'/>
        <enum-item name='PrefDogs'/>
    </enum-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
