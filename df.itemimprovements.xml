<data-definition>
    <enum-type type-name='improvement_type'>
        <enum-item name="ART_IMAGE"/>
        <enum-item name="COVERED"/>
        <enum-item name="RINGS_HANGING"/>
        <enum-item name="BANDS"/>
        <enum-item name="SPIKES"/>
        <enum-item name="ITEMSPECIFIC"/>
        <enum-item name="THREAD"/>
        <enum-item name="CLOTH"/>
        <enum-item name="SEWN_IMAGE"/>
    </enum-type>

    <struct-type type-name='dye_info' comment='not actually a real structure'>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <int32_t name='dyer' ref-target='historical_figure'/>
        <enum base-type='int16_t' name='quality' type-name='item_quality'/>
        <enum base-type='int16_t' name="skill_rating" type-name='skill_rating'
              comment='at the moment of creation'/>
        <int32_t name='age_counter'/>
    </struct-type>

    <class-type type-name='itemimprovement' original-name='itemimprovementst'>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <int32_t name='maker' ref-target='historical_figure'/>
        <int32_t name='masterpiece_event' ref-target='history_event'/>
        <enum base-type='int16_t' name='quality' type-name='item_quality'/>
        <enum base-type='int32_t' name="skill_rating" type-name='skill_rating'
              comment='at the moment of creation'/>
        <int32_t name='age_counter'/>

        <virtual-methods>
            <vmethod name='getImage'>
                <ret-type><pointer type-name='art_image'/></ret-type>
            </vmethod>
            <vmethod name='getColorAndShape'>
                <pointer name='colors'><stl-vector type-name='int16_t'/></pointer>
                <pointer name='shapes'><stl-vector type-name='int16_t'/></pointer>
            </vmethod>
            <vmethod name='clone'>
                <ret-type><pointer type-name='itemimprovement'/></ret-type>
            </vmethod>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <int32_t name='loadversion'/>
            </vmethod>
            <vmethod ret-type='improvement_type' name='getType'/>
            <vmethod ret-type='bool' name='isDecoration' comment='displayed_improvement'/>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='int32_t' name='getDyeValue'>
                <pointer type-name='caravan_state' name='caravan'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='itemimprovement_art_imagest' inherits-from='itemimprovement'>
        <compound name='image' type-name='art_image_ref'/>
    </class-type>

    <class-type type-name='itemimprovement_coveredst' inherits-from='itemimprovement'>
        <bitfield name='cover_flags' base-type='uint32_t'> bay12: ITEMIMPROVEMENT_COVERED_FLAG_*
            <flag-bit name='glazed'/>
        </bitfield>
    </class-type>

    <class-type type-name='itemimprovement_rings_hangingst' inherits-from='itemimprovement'/>
    <class-type type-name='itemimprovement_bandsst' inherits-from='itemimprovement'/>
    <class-type type-name='itemimprovement_spikesst' inherits-from='itemimprovement'/>

    <enum-type type-name='itemimprovement_specific_type' base-type='int32_t'> bay12: ItemSpecificImprovementType
        <enum-item name='HANDLE'/>
        <enum-item name='TRACTION_BENCH_ROPE'/>
        <enum-item name='TRACTION_BENCH_CHAIN'/>
    </enum-type>

    <class-type type-name='itemimprovement_itemspecificst' inherits-from='itemimprovement'>
        <enum base-type='int32_t' type-name='itemimprovement_specific_type' name='type'/>
    </class-type>

    <class-type type-name='itemimprovement_threadst' inherits-from='itemimprovement'>
        <compound name='dye' type-name='dye_info'/>
    </class-type>

    <class-type type-name='itemimprovement_clothst' inherits-from='itemimprovement'/>

    <class-type type-name='itemimprovement_sewn_imagest' inherits-from='itemimprovement'>
        none of these are actual compounds - beware of potential alignment/padding issues
        <compound name='image' type-name='art_image_ref'/>
        <compound name='cloth'>
            <int32_t name='maker_hf' ref-target='historical_figure'/>
            <int16_t name='quality'/>
            <int16_t name='skill_rating'/>
        </compound>
        <compound name='dye' type-name='dye_info'/>
    </class-type>


    <bitfield-type type-name='engraving_flags' base-type='uint32_t'> bay12: EVENTDETAILFLAG_*
        <flag-bit name='floor'/>
        <flag-bit name='west'/>
        <flag-bit name='east'/>
        <flag-bit name='north'/>
        <flag-bit name='south'/>
        <flag-bit name='hidden'/>
        <flag-bit name='northwest'/>
        <flag-bit name='northeast'/>
        <flag-bit name='southwest'/>
        <flag-bit name='southeast'/>
    </bitfield-type>

    <struct-type type-name='engraving' original-name='event_detailst' instance-vector='$global.world.event.engravings'>
        <int32_t name='artist' ref-target='historical_figure'/>
        <int32_t name='masterpiece_event' ref-target='history_event'/>
        <enum base-type='int32_t' name="skill_rating" type-name='skill_rating'
              comment='at the moment of creation'/>
        <compound name='pos' type-name='coord'/>
        <bitfield name='flags' type-name='engraving_flags'/>
        <uint8_t name='tile'/>
        <int32_t name='art_id' ref-target='art_image_chunk'/>
        <int16_t name='art_subid' ref-target='art_image' aux-value='$$.art_id'/>
        <enum base-type='int16_t' name='quality' type-name='item_quality'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
